
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT b5a4c9a 2023-08-17T12:29:38) on 2023-08-18T14:42:30.920527Z; your changes will be discarded on the next build */
package EOorg.EOeolang;

import org.eolang.*;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

// <o abstract="" line="136" loc="Φ.org.eolang.positive-object-vertices" name="positive-object-vertices" original-name="positive-object-vertices" pos="0"> 
//   <o base="org.eolang.hamcrest.assert-that" line="137" loc="Φ.org.eolang.positive-object-vertices.φ" name="@" pos="2"> 
//     <o base=".and" line="138" loc="Φ.org.eolang.positive-object-vertices.φ.α0" pos="4"> 
//       <o base=".eq" line="139" loc="Φ.org.eolang.positive-object-vertices.φ.α0.ρ" pos="10"> 
//         <o base=".<" line="139" loc="Φ.org.eolang.positive-object-vertices.φ.α0.ρ.ρ" pos="8"> 
//           <o base="org.eolang.int" data="int" line="139" loc="Φ.org.eolang.positive-object-vertices.φ.α0.ρ.ρ.ρ" pos="6">42</o>
//         </o>
//         <o base=".<" line="139" loc="Φ.org.eolang.positive-object-vertices.φ.α0.ρ.α0" pos="17" scope="scope-3fb043bf-66b0-4687-85f1-49fb4f0e828c"> 
//           <o base="org.eolang.int" data="int" line="139" loc="Φ.org.eolang.positive-object-vertices.φ.α0.ρ.α0.ρ" pos="15" scope="scope-3fb043bf-66b0-4687-85f1-49fb4f0e828c">42</o>
//         </o>
//       </o>
//       <o base=".eq" line="140" loc="Φ.org.eolang.positive-object-vertices.φ.α0.α0" pos="15"> 
//         <o base=".<" line="140" loc="Φ.org.eolang.positive-object-vertices.φ.α0.α0.ρ" pos="13"> 
//           <o base="org.eolang.string" data="string" line="140" loc="Φ.org.eolang.positive-object-vertices.φ.α0.α0.ρ.ρ" pos="6">Hello</o>
//         </o>
//         <o base=".<" line="140" loc="Φ.org.eolang.positive-object-vertices.φ.α0.α0.α0" pos="27" scope="scope-e5d80127-f1f6-4505-be8f-2ef235a93626"> 
//           <o base="org.eolang.string" data="string" line="140" loc="Φ.org.eolang.positive-object-vertices.φ.α0.α0.α0.ρ" pos="20" scope="scope-e5d80127-f1f6-4505-be8f-2ef235a93626">Hello</o>
//         </o>
//       </o>
//       <o base=".gt" line="141" loc="Φ.org.eolang.positive-object-vertices.φ.α0.α1" pos="15"> 
//         <o base=".<" line="141" loc="Φ.org.eolang.positive-object-vertices.φ.α0.α1.ρ" pos="13"> 
//           <o base=".plus" line="141" loc="Φ.org.eolang.positive-object-vertices.φ.α0.α1.ρ.ρ" pos="8"> 
//             <o base="org.eolang.int" data="int" line="141" loc="Φ.org.eolang.positive-object-vertices.φ.α0.α1.ρ.ρ.ρ" pos="6">42</o>
//           </o>
//         </o>
//         <o base="org.eolang.int" data="int" line="141" loc="Φ.org.eolang.positive-object-vertices.φ.α0.α1.α0" pos="19">0</o>
//       </o>
//       <o base=".eq" line="142" loc="Φ.org.eolang.positive-object-vertices.φ.α0.α2" pos="16"> 
//         <o base=".<" line="142" loc="Φ.org.eolang.positive-object-vertices.φ.α0.α2.ρ" pos="14"> 
//           <o base="org.eolang.bytes" data="bytes" line="142" loc="Φ.org.eolang.positive-object-vertices.φ.α0.α2.ρ.ρ" pos="6">45 1F E7</o>
//         </o>
//         <o base=".<" line="142" loc="Φ.org.eolang.positive-object-vertices.φ.α0.α2.α0" pos="29" scope="scope-d2d18d58-7aed-4ebf-96c9-f6a76ba4003b"> 
//           <o base="org.eolang.bytes" data="bytes" line="142" loc="Φ.org.eolang.positive-object-vertices.φ.α0.α2.α0.ρ" pos="21" scope="scope-d2d18d58-7aed-4ebf-96c9-f6a76ba4003b">45 1F E7</o>
//         </o>
//       </o>
//     </o>
//     <o base=".equal-to" line="143" loc="Φ.org.eolang.positive-object-vertices.φ.α1" pos="5"> 
//       <o base="$" line="143" loc="Φ.org.eolang.positive-object-vertices.φ.α1.ρ" pos="4"/>
//       <o base="org.eolang.bool" data="bool" line="143" loc="Φ.org.eolang.positive-object-vertices.φ.α1.α0" pos="15">TRUE</o>
//     </o>
//   </o>
// </o>
@XmirObject(name = "positive-object-verticesTest", oname = "positive-object-vertices", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/runtime-tests.eo")
public final class EOpositive_object_verticesTest extends PhDefault {
  public EOpositive_object_verticesTest() {
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("hamcrest").get().attr("assert-that").get();
        ret = new PhLocated(ret, 137, 2, "Φ.org.eolang.positive-object-vertices.φ");
      ret = new PhCopy(ret);
        Phi ret_1_base_base_base = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_1_base_base_base = new PhLocated(ret_1_base_base_base, 139, 6, "Φ.org.eolang.positive-object-vertices.φ.α0.ρ.ρ.ρ");
          ret_1_base_base_base = new PhWith(ret_1_base_base_base, "Δ", new Data.Value<>(42L));
        Phi ret_1_base_base = new PhMethod(ret_1_base_base_base, "ν");
          ret_1_base_base = new PhLocated(ret_1_base_base, 139, 8, "Φ.org.eolang.positive-object-vertices.φ.α0.ρ.ρ");
        Phi ret_1_base = new PhMethod(ret_1_base_base, "eq");
          ret_1_base = new PhLocated(ret_1_base, 139, 10, "Φ.org.eolang.positive-object-vertices.φ.α0.ρ");
        ret_1_base = new PhCopy(ret_1_base);
          Phi ret_1_base_1_base = new EOorg.EOeolang.EOint(Phi.Φ);
            ret_1_base_1_base = new PhLocated(ret_1_base_1_base, 139, 15, "Φ.org.eolang.positive-object-vertices.φ.α0.ρ.α0.ρ");
            ret_1_base_1_base = new PhWith(ret_1_base_1_base, "Δ", new Data.Value<>(42L));
          Phi ret_1_base_1 = new PhMethod(ret_1_base_1_base, "ν");
            ret_1_base_1 = new PhLocated(ret_1_base_1, 139, 17, "Φ.org.eolang.positive-object-vertices.φ.α0.ρ.α0");
          ret_1_base = new PhWith(ret_1_base, 0, ret_1_base_1);
        Phi ret_1 = new PhMethod(ret_1_base, "and");
          ret_1 = new PhLocated(ret_1, 138, 4, "Φ.org.eolang.positive-object-vertices.φ.α0");
        ret_1 = new PhCopy(ret_1);
          Phi ret_1_1_base_base = new EOorg.EOeolang.EOstring(Phi.Φ);
            ret_1_1_base_base = new PhLocated(ret_1_1_base_base, 140, 6, "Φ.org.eolang.positive-object-vertices.φ.α0.α0.ρ.ρ");
            ret_1_1_base_base = new PhWith(ret_1_1_base_base, "Δ", new Data.Value<>("Hello"));
          Phi ret_1_1_base = new PhMethod(ret_1_1_base_base, "ν");
            ret_1_1_base = new PhLocated(ret_1_1_base, 140, 13, "Φ.org.eolang.positive-object-vertices.φ.α0.α0.ρ");
          Phi ret_1_1 = new PhMethod(ret_1_1_base, "eq");
            ret_1_1 = new PhLocated(ret_1_1, 140, 15, "Φ.org.eolang.positive-object-vertices.φ.α0.α0");
          ret_1_1 = new PhCopy(ret_1_1);
            Phi ret_1_1_1_base = new EOorg.EOeolang.EOstring(Phi.Φ);
              ret_1_1_1_base = new PhLocated(ret_1_1_1_base, 140, 20, "Φ.org.eolang.positive-object-vertices.φ.α0.α0.α0.ρ");
              ret_1_1_1_base = new PhWith(ret_1_1_1_base, "Δ", new Data.Value<>("Hello"));
            Phi ret_1_1_1 = new PhMethod(ret_1_1_1_base, "ν");
              ret_1_1_1 = new PhLocated(ret_1_1_1, 140, 27, "Φ.org.eolang.positive-object-vertices.φ.α0.α0.α0");
            ret_1_1 = new PhWith(ret_1_1, 0, ret_1_1_1);
          Phi ret_1_2_base_base_base = new EOorg.EOeolang.EOint(Phi.Φ);
            ret_1_2_base_base_base = new PhLocated(ret_1_2_base_base_base, 141, 6, "Φ.org.eolang.positive-object-vertices.φ.α0.α1.ρ.ρ.ρ");
            ret_1_2_base_base_base = new PhWith(ret_1_2_base_base_base, "Δ", new Data.Value<>(42L));
          Phi ret_1_2_base_base = new PhMethod(ret_1_2_base_base_base, "plus");
            ret_1_2_base_base = new PhLocated(ret_1_2_base_base, 141, 8, "Φ.org.eolang.positive-object-vertices.φ.α0.α1.ρ.ρ");
          Phi ret_1_2_base = new PhMethod(ret_1_2_base_base, "ν");
            ret_1_2_base = new PhLocated(ret_1_2_base, 141, 13, "Φ.org.eolang.positive-object-vertices.φ.α0.α1.ρ");
          Phi ret_1_2 = new PhMethod(ret_1_2_base, "gt");
            ret_1_2 = new PhLocated(ret_1_2, 141, 15, "Φ.org.eolang.positive-object-vertices.φ.α0.α1");
          ret_1_2 = new PhCopy(ret_1_2);
            Phi ret_1_2_1 = new EOorg.EOeolang.EOint(Phi.Φ);
              ret_1_2_1 = new PhLocated(ret_1_2_1, 141, 19, "Φ.org.eolang.positive-object-vertices.φ.α0.α1.α0");
              ret_1_2_1 = new PhWith(ret_1_2_1, "Δ", new Data.Value<>(0L));
            ret_1_2 = new PhWith(ret_1_2, 0, ret_1_2_1);
          Phi ret_1_3_base_base = new EOorg.EOeolang.EObytes(Phi.Φ);
            ret_1_3_base_base = new PhLocated(ret_1_3_base_base, 142, 6, "Φ.org.eolang.positive-object-vertices.φ.α0.α2.ρ.ρ");
            ret_1_3_base_base = new PhWith(ret_1_3_base_base, "Δ", new Data.Value<>(new byte[] {(byte) 0x45, (byte) 0x1F, (byte) 0xE7}));
          Phi ret_1_3_base = new PhMethod(ret_1_3_base_base, "ν");
            ret_1_3_base = new PhLocated(ret_1_3_base, 142, 14, "Φ.org.eolang.positive-object-vertices.φ.α0.α2.ρ");
          Phi ret_1_3 = new PhMethod(ret_1_3_base, "eq");
            ret_1_3 = new PhLocated(ret_1_3, 142, 16, "Φ.org.eolang.positive-object-vertices.φ.α0.α2");
          ret_1_3 = new PhCopy(ret_1_3);
            Phi ret_1_3_1_base = new EOorg.EOeolang.EObytes(Phi.Φ);
              ret_1_3_1_base = new PhLocated(ret_1_3_1_base, 142, 21, "Φ.org.eolang.positive-object-vertices.φ.α0.α2.α0.ρ");
              ret_1_3_1_base = new PhWith(ret_1_3_1_base, "Δ", new Data.Value<>(new byte[] {(byte) 0x45, (byte) 0x1F, (byte) 0xE7}));
            Phi ret_1_3_1 = new PhMethod(ret_1_3_1_base, "ν");
              ret_1_3_1 = new PhLocated(ret_1_3_1, 142, 29, "Φ.org.eolang.positive-object-vertices.φ.α0.α2.α0");
            ret_1_3 = new PhWith(ret_1_3, 0, ret_1_3_1);
          ret_1 = new PhWith(ret_1, 0, ret_1_1);
          ret_1 = new PhWith(ret_1, 1, ret_1_2);
          ret_1 = new PhWith(ret_1, 2, ret_1_3);
        Phi ret_2_base = rho;
          ret_2_base = new PhLocated(ret_2_base, 143, 4, "Φ.org.eolang.positive-object-vertices.φ.α1.ρ");
        Phi ret_2 = new PhMethod(ret_2_base, "equal-to");
          ret_2 = new PhLocated(ret_2, 143, 5, "Φ.org.eolang.positive-object-vertices.φ.α1");
        ret_2 = new PhCopy(ret_2);
          Phi ret_2_1 = new EOorg.EOeolang.EObool(Phi.Φ);
            ret_2_1 = new PhLocated(ret_2_1, 143, 15, "Φ.org.eolang.positive-object-vertices.φ.α1.α0");
            ret_2_1 = new PhWith(ret_2_1, "Δ", new Data.Value<>(Boolean.TRUE));
          ret_2 = new PhWith(ret_2, 0, ret_2_1);
        ret = new PhWith(ret, 0, ret_1);
        ret = new PhWith(ret, 1, ret_2);
      return ret;
    })));
  }

  @Test
  public void works() throws java.lang.Exception {
    Object obj = new Dataized(new EOpositive_object_verticesTest()).take();
    if (obj instanceof String) {
      Assertions.fail(obj.toString());
    } else {
      Assertions.assertTrue((Boolean) obj);
    }
  }
}
