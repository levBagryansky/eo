
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT e24f541 2023-09-12T11:41:32) on 2023-10-03T10:45:38.539230Z; your changes will be discarded on the next build */
package EOorg.EOeolang;

import org.eolang.*;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

// <o abstract="" line="171" loc="Φ.org.eolang.creates-vararg-from-variable-array" name="creates-vararg-from-variable-array" original-name="creates-vararg-from-variable-array" pos="0"> 
//   <o base="org.eolang.tuple" data="tuple" line="172" loc="Φ.org.eolang.creates-vararg-from-variable-array.a" name="a" pos="2"> 
//     <o base="org.eolang.int" data="int" line="172" loc="Φ.org.eolang.creates-vararg-from-variable-array.a.α0" pos="4">2</o>
//     <o base="org.eolang.int" data="int" line="172" loc="Φ.org.eolang.creates-vararg-from-variable-array.a.α1" pos="6">7</o>
//   </o>
//   <o base="creates-vararg-from-variable-array$sum" cut="256" line="173" loc="Φ.org.eolang.creates-vararg-from-variable-array.sum" name="sum" pos="2" ref="173"/>
//   <o base=".eq" line="177" loc="Φ.org.eolang.creates-vararg-from-variable-array.φ" name="@" pos="2"> 
//     <o base="sum" line="178" loc="Φ.org.eolang.creates-vararg-from-variable-array.φ.ρ" pos="4" ref="173"> 
//       <o base="a" line="179" loc="Φ.org.eolang.creates-vararg-from-variable-array.φ.ρ.α0" pos="9" ref="172" unvar=""/>
//     </o>
//     <o base="org.eolang.int" data="int" line="180" loc="Φ.org.eolang.creates-vararg-from-variable-array.φ.α0" pos="4">9</o>
//   </o>
// </o>
@XmirObject(name = "creates-vararg-from-variable-arrayTest", oname = "creates-vararg-from-variable-array", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/runtime-tests.eo")
public final class EOcreates_vararg_from_variable_arrayTest extends PhDefault {
    
  public EOcreates_vararg_from_variable_arrayTest() {
    this.add("a", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("tuple").get();
        ret = new PhLocated(ret, 172, 2, "Φ.org.eolang.creates-vararg-from-variable-array.a");
        Phi[] ret_a = new Phi[2];
        Phi ret_a0 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_a0 = new PhLocated(ret_a0, 172, 4, "Φ.org.eolang.creates-vararg-from-variable-array.a.α0");
          ret_a0 = new PhWith(ret_a0, "Δ", new Data.Value<>(2L));
        ret_a[0] = ret_a0;
        Phi ret_a1 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_a1 = new PhLocated(ret_a1, 172, 6, "Φ.org.eolang.creates-vararg-from-variable-array.a.α1");
          ret_a1 = new PhWith(ret_a1, "Δ", new Data.Value<>(7L));
        ret_a[1] = ret_a1;
        ret = new PhWith(new PhCopy(ret), "Δ", new Data.Value<Phi[]>(ret_a));
      return ret;
    })));
    this.add("sum", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new EOω1sum(rho);
        ret = new PhLocated(ret, 173, 2, "Φ.org.eolang.creates-vararg-from-variable-array.sum");
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = new PhMethod(rho, "sum");
        ret_base = new PhLocated(ret_base, 178, 4, "Φ.org.eolang.creates-vararg-from-variable-array.φ.ρ");
      ret_base = new PhCopy(ret_base);
        Phi ret_base_1 = new PhMethod(rho, "a");
          ret_base_1 = new PhLocated(ret_base_1, 179, 9, "Φ.org.eolang.creates-vararg-from-variable-array.φ.ρ.α0");
        ret_base_1 = new PhUnvar(ret_base_1);
        ret_base = new PhWith(ret_base, 0, ret_base_1);
      Phi ret = new PhMethod(ret_base, "eq");
        ret = new PhLocated(ret, 177, 2, "Φ.org.eolang.creates-vararg-from-variable-array.φ");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 180, 4, "Φ.org.eolang.creates-vararg-from-variable-array.φ.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>(9L));
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
  }

  @Test
  public void works() throws java.lang.Exception {
    Object obj = new Dataized(new EOcreates_vararg_from_variable_arrayTest()).take();
    if (obj instanceof String) {
      Assertions.fail(obj.toString());
    } else {
      Assertions.assertTrue((Boolean) obj);
    }
  }

// <o abstract="" ancestors="1" line="173" loc="Φ.org.eolang.creates-vararg-from-variable-array$sum" name="creates-vararg-from-variable-array$sum" original-name="sum" parent="creates-vararg-from-variable-array" pos="2"> 
//   <o line="173" loc="Φ.org.eolang.creates-vararg-from-variable-array$sum.args" name="args" pos="3" vararg=""/>
//   <o base=".plus" line="174" loc="Φ.org.eolang.creates-vararg-from-variable-array$sum.φ" name="@" pos="4"> 
//     <o base=".at" line="175" loc="Φ.org.eolang.creates-vararg-from-variable-array$sum.φ.ρ" pos="10"> 
//       <o base="args" line="175" loc="Φ.org.eolang.creates-vararg-from-variable-array$sum.φ.ρ.ρ" pos="6" ref="173"/>
//       <o base="org.eolang.int" data="int" line="175" loc="Φ.org.eolang.creates-vararg-from-variable-array$sum.φ.ρ.α0" pos="14">0</o>
//     </o>
//     <o base=".at" line="176" loc="Φ.org.eolang.creates-vararg-from-variable-array$sum.φ.α0" pos="10"> 
//       <o base="args" line="176" loc="Φ.org.eolang.creates-vararg-from-variable-array$sum.φ.α0.ρ" pos="6" ref="173"/>
//       <o base="org.eolang.int" data="int" line="176" loc="Φ.org.eolang.creates-vararg-from-variable-array$sum.φ.α0.α0" pos="14">1</o>
//     </o>
//   </o>
// </o>
@XmirObject(name = "ω1sum", oname = "sum", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/runtime-tests.eo")
public final class EOω1sum extends PhDefault {
    
  public EOω1sum(final Phi sigma) {
    super(sigma);
    this.add("args", new AtVararg(/* default */));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base_base = new PhMethod(rho, "args");
        ret_base_base = new PhLocated(ret_base_base, 175, 6, "Φ.org.eolang.creates-vararg-from-variable-array$sum.φ.ρ.ρ");
      Phi ret_base = new PhMethod(ret_base_base, "at");
        ret_base = new PhLocated(ret_base, 175, 10, "Φ.org.eolang.creates-vararg-from-variable-array$sum.φ.ρ");
      ret_base = new PhCopy(ret_base);
        Phi ret_base_1 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_base_1 = new PhLocated(ret_base_1, 175, 14, "Φ.org.eolang.creates-vararg-from-variable-array$sum.φ.ρ.α0");
          ret_base_1 = new PhWith(ret_base_1, "Δ", new Data.Value<>(0L));
        ret_base = new PhWith(ret_base, 0, ret_base_1);
      Phi ret = new PhMethod(ret_base, "plus");
        ret = new PhLocated(ret, 174, 4, "Φ.org.eolang.creates-vararg-from-variable-array$sum.φ");
      ret = new PhCopy(ret);
        Phi ret_1_base = new PhMethod(rho, "args");
          ret_1_base = new PhLocated(ret_1_base, 176, 6, "Φ.org.eolang.creates-vararg-from-variable-array$sum.φ.α0.ρ");
        Phi ret_1 = new PhMethod(ret_1_base, "at");
          ret_1 = new PhLocated(ret_1, 176, 10, "Φ.org.eolang.creates-vararg-from-variable-array$sum.φ.α0");
        ret_1 = new PhCopy(ret_1);
          Phi ret_1_1 = new EOorg.EOeolang.EOint(Phi.Φ);
            ret_1_1 = new PhLocated(ret_1_1, 176, 14, "Φ.org.eolang.creates-vararg-from-variable-array$sum.φ.α0.α0");
            ret_1_1 = new PhWith(ret_1_1, "Δ", new Data.Value<>(1L));
          ret_1 = new PhWith(ret_1, 0, ret_1_1);
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
  }
}
}
