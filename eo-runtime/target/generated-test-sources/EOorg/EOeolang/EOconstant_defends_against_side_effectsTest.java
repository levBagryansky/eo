
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT e24f541 2023-09-12T11:41:32) on 2023-10-03T10:45:38.539230Z; your changes will be discarded on the next build */
package EOorg.EOeolang;

import org.eolang.*;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

// <o abstract="" line="313" loc="Φ.org.eolang.constant-defends-against-side-effects" name="constant-defends-against-side-effects" original-name="constant-defends-against-side-effects" pos="0"> 
//   <o base="org.eolang.memory" line="314" loc="Φ.org.eolang.constant-defends-against-side-effects.a" name="a" pos="2"> 
//     <o base="org.eolang.int" data="int" line="314" loc="Φ.org.eolang.constant-defends-against-side-effects.a.α0" pos="9">7</o>
//   </o>
//   <o base="constant-defends-against-side-effects$inc" cut="487" line="315" loc="Φ.org.eolang.constant-defends-against-side-effects.inc" name="inc" pos="2" ref="315"/>
//   <o base="inc" const="" line="320" loc="Φ.org.eolang.constant-defends-against-side-effects.n" name="n" pos="2" ref="315"> 
//     <o base="a" line="320" loc="Φ.org.eolang.constant-defends-against-side-effects.n.α0" pos="6" ref="314"/>
//   </o>
//   <o base=".eq" line="321" loc="Φ.org.eolang.constant-defends-against-side-effects.φ" name="@" pos="2"> 
//     <o base=".times" line="322" loc="Φ.org.eolang.constant-defends-against-side-effects.φ.ρ" pos="4"> 
//       <o base="n" line="323" loc="Φ.org.eolang.constant-defends-against-side-effects.φ.ρ.ρ" pos="6" ref="320"/>
//       <o base="n" line="324" loc="Φ.org.eolang.constant-defends-against-side-effects.φ.ρ.α0" pos="6" ref="320"/>
//     </o>
//     <o base="org.eolang.int" data="int" line="325" loc="Φ.org.eolang.constant-defends-against-side-effects.φ.α0" pos="4">64</o>
//   </o>
// </o>
@XmirObject(name = "constant-defends-against-side-effectsTest", oname = "constant-defends-against-side-effects", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/runtime-tests.eo")
public final class EOconstant_defends_against_side_effectsTest extends PhDefault {
    
  public EOconstant_defends_against_side_effectsTest() {
    this.add("a", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("memory").get();
        ret = new PhLocated(ret, 314, 2, "Φ.org.eolang.constant-defends-against-side-effects.a");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 314, 9, "Φ.org.eolang.constant-defends-against-side-effects.a.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>(7L));
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
    this.add("inc", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new EOω1inc(rho);
        ret = new PhLocated(ret, 315, 2, "Φ.org.eolang.constant-defends-against-side-effects.inc");
      return ret;
    })));
    this.add("n", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new PhMethod(rho, "inc");
        ret = new PhLocated(ret, 320, 2, "Φ.org.eolang.constant-defends-against-side-effects.n");
      ret = new PhCopy(ret);
        Phi ret_1 = new PhMethod(rho, "a");
          ret_1 = new PhLocated(ret_1, 320, 6, "Φ.org.eolang.constant-defends-against-side-effects.n.α0");
        ret = new PhWith(ret, 0, ret_1);
      ret = new PhConst(ret);
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base_base = new PhMethod(rho, "n");
        ret_base_base = new PhLocated(ret_base_base, 323, 6, "Φ.org.eolang.constant-defends-against-side-effects.φ.ρ.ρ");
      Phi ret_base = new PhMethod(ret_base_base, "times");
        ret_base = new PhLocated(ret_base, 322, 4, "Φ.org.eolang.constant-defends-against-side-effects.φ.ρ");
      ret_base = new PhCopy(ret_base);
        Phi ret_base_1 = new PhMethod(rho, "n");
          ret_base_1 = new PhLocated(ret_base_1, 324, 6, "Φ.org.eolang.constant-defends-against-side-effects.φ.ρ.α0");
        ret_base = new PhWith(ret_base, 0, ret_base_1);
      Phi ret = new PhMethod(ret_base, "eq");
        ret = new PhLocated(ret, 321, 2, "Φ.org.eolang.constant-defends-against-side-effects.φ");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 325, 4, "Φ.org.eolang.constant-defends-against-side-effects.φ.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>(64L));
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
  }

  @Test
  public void works() throws java.lang.Exception {
    Object obj = new Dataized(new EOconstant_defends_against_side_effectsTest()).take();
    if (obj instanceof String) {
      Assertions.fail(obj.toString());
    } else {
      Assertions.assertTrue((Boolean) obj);
    }
  }

// <o abstract="" ancestors="1" line="315" loc="Φ.org.eolang.constant-defends-against-side-effects$inc" name="constant-defends-against-side-effects$inc" original-name="inc" parent="constant-defends-against-side-effects" pos="2"> 
//   <o line="315" loc="Φ.org.eolang.constant-defends-against-side-effects$inc.x" name="x" pos="3"/>
//   <o base="org.eolang.seq" line="316" loc="Φ.org.eolang.constant-defends-against-side-effects$inc.φ" name="@" pos="4"> 
//     <o base=".write" line="317" loc="Φ.org.eolang.constant-defends-against-side-effects$inc.φ.α0" pos="7"> 
//       <o base="x" line="317" loc="Φ.org.eolang.constant-defends-against-side-effects$inc.φ.α0.ρ" pos="6" ref="315"/>
//       <o base=".plus" line="318" loc="Φ.org.eolang.constant-defends-against-side-effects$inc.φ.α0.α0" pos="16"> 
//         <o base=".as-int" line="318" loc="Φ.org.eolang.constant-defends-against-side-effects$inc.φ.α0.α0.ρ" pos="9"> 
//           <o base="x" line="318" loc="Φ.org.eolang.constant-defends-against-side-effects$inc.φ.α0.α0.ρ.ρ" pos="8" ref="315"/>
//         </o>
//         <o base="org.eolang.int" data="int" line="318" loc="Φ.org.eolang.constant-defends-against-side-effects$inc.φ.α0.α0.α0" pos="22">1</o>
//       </o>
//     </o>
//     <o base=".as-int" line="319" loc="Φ.org.eolang.constant-defends-against-side-effects$inc.φ.α1" pos="7"> 
//       <o base="x" line="319" loc="Φ.org.eolang.constant-defends-against-side-effects$inc.φ.α1.ρ" pos="6" ref="315"/>
//     </o>
//   </o>
// </o>
@XmirObject(name = "ω1inc", oname = "inc", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/runtime-tests.eo")
public final class EOω1inc extends PhDefault {
    
  public EOω1inc(final Phi sigma) {
    super(sigma);
    this.add("x", new AtFree(/* default */));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("seq").get();
        ret = new PhLocated(ret, 316, 4, "Φ.org.eolang.constant-defends-against-side-effects$inc.φ");
      ret = new PhCopy(ret);
        Phi ret_1_base = new PhMethod(rho, "x");
          ret_1_base = new PhLocated(ret_1_base, 317, 6, "Φ.org.eolang.constant-defends-against-side-effects$inc.φ.α0.ρ");
        Phi ret_1 = new PhMethod(ret_1_base, "write");
          ret_1 = new PhLocated(ret_1, 317, 7, "Φ.org.eolang.constant-defends-against-side-effects$inc.φ.α0");
        ret_1 = new PhCopy(ret_1);
          Phi ret_1_1_base_base = new PhMethod(rho, "x");
            ret_1_1_base_base = new PhLocated(ret_1_1_base_base, 318, 8, "Φ.org.eolang.constant-defends-against-side-effects$inc.φ.α0.α0.ρ.ρ");
          Phi ret_1_1_base = new PhMethod(ret_1_1_base_base, "as-int");
            ret_1_1_base = new PhLocated(ret_1_1_base, 318, 9, "Φ.org.eolang.constant-defends-against-side-effects$inc.φ.α0.α0.ρ");
          Phi ret_1_1 = new PhMethod(ret_1_1_base, "plus");
            ret_1_1 = new PhLocated(ret_1_1, 318, 16, "Φ.org.eolang.constant-defends-against-side-effects$inc.φ.α0.α0");
          ret_1_1 = new PhCopy(ret_1_1);
            Phi ret_1_1_1 = new EOorg.EOeolang.EOint(Phi.Φ);
              ret_1_1_1 = new PhLocated(ret_1_1_1, 318, 22, "Φ.org.eolang.constant-defends-against-side-effects$inc.φ.α0.α0.α0");
              ret_1_1_1 = new PhWith(ret_1_1_1, "Δ", new Data.Value<>(1L));
            ret_1_1 = new PhWith(ret_1_1, 0, ret_1_1_1);
          ret_1 = new PhWith(ret_1, 0, ret_1_1);
        Phi ret_2_base = new PhMethod(rho, "x");
          ret_2_base = new PhLocated(ret_2_base, 319, 6, "Φ.org.eolang.constant-defends-against-side-effects$inc.φ.α1.ρ");
        Phi ret_2 = new PhMethod(ret_2_base, "as-int");
          ret_2 = new PhLocated(ret_2, 319, 7, "Φ.org.eolang.constant-defends-against-side-effects$inc.φ.α1");
        ret = new PhWith(ret, 0, ret_1);
        ret = new PhWith(ret, 1, ret_2);
      return ret;
    })));
  }
}
}
