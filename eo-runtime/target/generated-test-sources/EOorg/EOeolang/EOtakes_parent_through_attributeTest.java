
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT b5a4c9a 2023-08-17T12:29:38) on 2023-08-18T14:42:30.920527Z; your changes will be discarded on the next build */
package EOorg.EOeolang;

import org.eolang.*;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

// <o abstract="" line="70" loc="Φ.org.eolang.takes-parent-through-attribute" name="takes-parent-through-attribute" original-name="takes-parent-through-attribute" pos="0"> 
//   <o base="org.eolang.int" data="int" line="71" loc="Φ.org.eolang.takes-parent-through-attribute.x" name="x" pos="2">42</o>
//   <o base="$" line="72" loc="Φ.org.eolang.takes-parent-through-attribute.this" name="this" pos="2"/>
//   <o base="takes-parent-through-attribute$@" cut="52" line="73" loc="Φ.org.eolang.takes-parent-through-attribute.φ" name="@" pos="2" ref="73"> 
//     <o as="this" base="this" level="1" loc="Φ.org.eolang.takes-parent-through-attribute.φ.α0" ref="72"/>
//   </o>
// </o>
@XmirObject(name = "takes-parent-through-attributeTest", oname = "takes-parent-through-attribute", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/runtime-tests.eo")
public final class EOtakes_parent_through_attributeTest extends PhDefault {
  public EOtakes_parent_through_attributeTest() {
    this.add("x", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new EOorg.EOeolang.EOint(Phi.Φ);
        ret = new PhLocated(ret, 71, 2, "Φ.org.eolang.takes-parent-through-attribute.x");
        ret = new PhWith(ret, "Δ", new Data.Value<>(42L));
      return ret;
    })));
    this.add("this", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = rho;
        ret = new PhLocated(ret, 72, 2, "Φ.org.eolang.takes-parent-through-attribute.this");
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new EOω1φ(rho);
        ret = new PhLocated(ret, 73, 2, "Φ.org.eolang.takes-parent-through-attribute.φ");
      return ret;
    })));
  }

  @Test
  public void works() throws java.lang.Exception {
    Object obj = new Dataized(new EOtakes_parent_through_attributeTest()).take();
    if (obj instanceof String) {
      Assertions.fail(obj.toString());
    } else {
      Assertions.assertTrue((Boolean) obj);
    }
  }

// <o abstract="" ancestors="1" line="73" loc="Φ.org.eolang.takes-parent-through-attribute$@" name="takes-parent-through-attribute$@" original-name="@" parent="takes-parent-through-attribute" pos="2"> 
//   <o base="takes-parent-through-attribute$@$@" cut="52" line="74" loc="Φ.org.eolang.takes-parent-through-attribute$@.φ" name="@" pos="4" ref="74"> 
//     <o as="this" base="this" level="2" loc="Φ.org.eolang.takes-parent-through-attribute$@.φ.α0" ref="73.72.458"/>
//   </o>
//   <o level="1" line="73.72.458" loc="Φ.org.eolang.takes-parent-through-attribute$@.this" name="this"/>
// </o>
@XmirObject(name = "ω1@", oname = "@", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/runtime-tests.eo")
public final class EOω1φ extends PhDefault {
  public EOω1φ(final Phi sigma) {
    super(sigma);
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new EOω2φ(rho);
        ret = new PhLocated(ret, 74, 4, "Φ.org.eolang.takes-parent-through-attribute$@.φ");
      return ret;
    })));
  }

// <o abstract="" ancestors="2" line="74" loc="Φ.org.eolang.takes-parent-through-attribute$@$@" name="takes-parent-through-attribute$@$@" original-name="@" parent="takes-parent-through-attribute$@" pos="4"> 
//   <o base="takes-parent-through-attribute$@$@$@" cut="52" line="75" loc="Φ.org.eolang.takes-parent-through-attribute$@$@.φ" name="@" pos="6" ref="75"> 
//     <o as="this" base="this" level="3" loc="Φ.org.eolang.takes-parent-through-attribute$@$@.φ.α0" ref="74.72.459"/>
//   </o>
//   <o level="2" line="74.72.459" loc="Φ.org.eolang.takes-parent-through-attribute$@$@.this" name="this"/>
// </o>
@XmirObject(name = "ω2@", oname = "@", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/runtime-tests.eo")
public final class EOω2φ extends PhDefault {
  public EOω2φ(final Phi sigma) {
    super(sigma);
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new EOω3φ(rho);
        ret = new PhLocated(ret, 75, 6, "Φ.org.eolang.takes-parent-through-attribute$@$@.φ");
      return ret;
    })));
  }

// <o abstract="" ancestors="3" line="75" loc="Φ.org.eolang.takes-parent-through-attribute$@$@$@" name="takes-parent-through-attribute$@$@$@" original-name="@" parent="takes-parent-through-attribute$@$@" pos="6"> 
//   <o base="org.eolang.hamcrest.assert-that" line="76" loc="Φ.org.eolang.takes-parent-through-attribute$@$@$@.φ" name="@" pos="8"> 
//     <o base=".x" line="77" loc="Φ.org.eolang.takes-parent-through-attribute$@$@$@.φ.α0" pos="14"> 
//       <o base="this" line="77" loc="Φ.org.eolang.takes-parent-through-attribute$@$@$@.φ.α0.ρ" pos="10" ref="75.72.460"/>
//     </o>
//     <o base=".equal-to" line="78" loc="Φ.org.eolang.takes-parent-through-attribute$@$@$@.φ.α1" pos="11"> 
//       <o base="$" line="78" loc="Φ.org.eolang.takes-parent-through-attribute$@$@$@.φ.α1.ρ" pos="10"/>
//       <o base="org.eolang.int" data="int" line="78" loc="Φ.org.eolang.takes-parent-through-attribute$@$@$@.φ.α1.α0" pos="21">42</o>
//     </o>
//   </o>
//   <o level="3" line="75.72.460" loc="Φ.org.eolang.takes-parent-through-attribute$@$@$@.this" name="this"/>
// </o>
@XmirObject(name = "ω3@", oname = "@", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/runtime-tests.eo")
public final class EOω3φ extends PhDefault {
  public EOω3φ(final Phi sigma) {
    super(sigma);
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("hamcrest").get().attr("assert-that").get();
        ret = new PhLocated(ret, 76, 8, "Φ.org.eolang.takes-parent-through-attribute$@$@$@.φ");
      ret = new PhCopy(ret);
        Phi ret_1_base = new PhMethod(new PhMethod(new PhMethod(new PhMethod(rho, "σ"), "σ"), "σ"), "this");
          ret_1_base = new PhLocated(ret_1_base, 77, 10, "Φ.org.eolang.takes-parent-through-attribute$@$@$@.φ.α0.ρ");
        Phi ret_1 = new PhMethod(ret_1_base, "x");
          ret_1 = new PhLocated(ret_1, 77, 14, "Φ.org.eolang.takes-parent-through-attribute$@$@$@.φ.α0");
        Phi ret_2_base = rho;
          ret_2_base = new PhLocated(ret_2_base, 78, 10, "Φ.org.eolang.takes-parent-through-attribute$@$@$@.φ.α1.ρ");
        Phi ret_2 = new PhMethod(ret_2_base, "equal-to");
          ret_2 = new PhLocated(ret_2, 78, 11, "Φ.org.eolang.takes-parent-through-attribute$@$@$@.φ.α1");
        ret_2 = new PhCopy(ret_2);
          Phi ret_2_1 = new EOorg.EOeolang.EOint(Phi.Φ);
            ret_2_1 = new PhLocated(ret_2_1, 78, 21, "Φ.org.eolang.takes-parent-through-attribute$@$@$@.φ.α1.α0");
            ret_2_1 = new PhWith(ret_2_1, "Δ", new Data.Value<>(42L));
          ret_2 = new PhWith(ret_2, 0, ret_2_1);
        ret = new PhWith(ret, 0, ret_1);
        ret = new PhWith(ret, 1, ret_2);
      return ret;
    })));
  }
}
}
}
}
