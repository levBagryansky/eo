
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT e24f541 2023-09-12T11:41:32) on 2023-10-03T10:45:38.539230Z; your changes will be discarded on the next build */
package EOorg.EOeolang;

import org.eolang.*;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

// <o abstract="" line="316" loc="Φ.org.eolang.minus-multiple-args" name="minus-multiple-args" original-name="minus-multiple-args" pos="0"> 
//   <o base=".eq" line="317" loc="Φ.org.eolang.minus-multiple-args.φ" name="@" pos="2"> 
//     <o base=".minus" line="318" loc="Φ.org.eolang.minus-multiple-args.φ.ρ" pos="7"> 
//       <o base="org.eolang.int" data="int" line="318" loc="Φ.org.eolang.minus-multiple-args.φ.ρ.ρ" pos="4">123</o>
//       <o base="org.eolang.int" data="int" line="318" loc="Φ.org.eolang.minus-multiple-args.φ.ρ.α0" pos="14">-12</o>
//       <o base="org.eolang.int" data="int" line="318" loc="Φ.org.eolang.minus-multiple-args.φ.ρ.α1" pos="18">135</o>
//       <o base="org.eolang.int" data="int" line="318" loc="Φ.org.eolang.minus-multiple-args.φ.ρ.α2" pos="22">235</o>
//       <o base="org.eolang.int" data="int" line="318" loc="Φ.org.eolang.minus-multiple-args.φ.ρ.α3" pos="26">0</o>
//     </o>
//     <o base="org.eolang.int" data="int" line="319" loc="Φ.org.eolang.minus-multiple-args.φ.α0" pos="4">-235</o>
//   </o>
// </o>
@XmirObject(name = "minus-multiple-argsTest", oname = "minus-multiple-args", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/int-tests.eo")
public final class EOminus_multiple_argsTest extends PhDefault {
    
  public EOminus_multiple_argsTest() {
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base_base = new EOorg.EOeolang.EOint(Phi.Φ);
        ret_base_base = new PhLocated(ret_base_base, 318, 4, "Φ.org.eolang.minus-multiple-args.φ.ρ.ρ");
        ret_base_base = new PhWith(ret_base_base, "Δ", new Data.Value<>(123L));
      Phi ret_base = new PhMethod(ret_base_base, "minus");
        ret_base = new PhLocated(ret_base, 318, 7, "Φ.org.eolang.minus-multiple-args.φ.ρ");
      ret_base = new PhCopy(ret_base);
        Phi ret_base_1 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_base_1 = new PhLocated(ret_base_1, 318, 14, "Φ.org.eolang.minus-multiple-args.φ.ρ.α0");
          ret_base_1 = new PhWith(ret_base_1, "Δ", new Data.Value<>(-12L));
        Phi ret_base_2 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_base_2 = new PhLocated(ret_base_2, 318, 18, "Φ.org.eolang.minus-multiple-args.φ.ρ.α1");
          ret_base_2 = new PhWith(ret_base_2, "Δ", new Data.Value<>(135L));
        Phi ret_base_3 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_base_3 = new PhLocated(ret_base_3, 318, 22, "Φ.org.eolang.minus-multiple-args.φ.ρ.α2");
          ret_base_3 = new PhWith(ret_base_3, "Δ", new Data.Value<>(235L));
        Phi ret_base_4 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_base_4 = new PhLocated(ret_base_4, 318, 26, "Φ.org.eolang.minus-multiple-args.φ.ρ.α3");
          ret_base_4 = new PhWith(ret_base_4, "Δ", new Data.Value<>(0L));
        ret_base = new PhWith(ret_base, 0, ret_base_1);
        ret_base = new PhWith(ret_base, 1, ret_base_2);
        ret_base = new PhWith(ret_base, 2, ret_base_3);
        ret_base = new PhWith(ret_base, 3, ret_base_4);
      Phi ret = new PhMethod(ret_base, "eq");
        ret = new PhLocated(ret, 317, 2, "Φ.org.eolang.minus-multiple-args.φ");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 319, 4, "Φ.org.eolang.minus-multiple-args.φ.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>(-235L));
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
  }

  @Test
  public void works() throws java.lang.Exception {
    Object obj = new Dataized(new EOminus_multiple_argsTest()).take();
    if (obj instanceof String) {
      Assertions.fail(obj.toString());
    } else {
      Assertions.assertTrue((Boolean) obj);
    }
  }
}
