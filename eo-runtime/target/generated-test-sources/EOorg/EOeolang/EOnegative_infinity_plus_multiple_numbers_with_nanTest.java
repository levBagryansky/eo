
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT b5a4c9a 2023-08-17T12:29:38) on 2023-08-18T14:42:30.920527Z; your changes will be discarded on the next build */
package EOorg.EOeolang;

import org.eolang.*;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

// <o abstract="" line="324" loc="Φ.org.eolang.negative-infinity-plus-multiple-numbers-with-nan" name="negative-infinity-plus-multiple-numbers-with-nan" original-name="negative-infinity-plus-multiple-numbers-with-nan" pos="0"> 
//   <o base="org.eolang.nan" const="" line="325" loc="Φ.org.eolang.negative-infinity-plus-multiple-numbers-with-nan.not-a-number" name="not-a-number" pos="2"/>
//   <o base="org.eolang.hamcrest.assert-that" line="326" loc="Φ.org.eolang.negative-infinity-plus-multiple-numbers-with-nan.φ" name="@" pos="2"> 
//     <o base=".as-bytes" line="327" loc="Φ.org.eolang.negative-infinity-plus-multiple-numbers-with-nan.φ.α0" pos="47"> 
//       <o base="negative-infinity-plus-multiple-numbers-with-nan$t1$t0$generated-scope-76ce8966-2161-4186-bc6b-20dd45dc3e27" cut="464" line="327" loc="Φ.org.eolang.negative-infinity-plus-multiple-numbers-with-nan.φ.α0.generated-scope-76ce8966-2161-4186-bc6b-20dd45dc3e27" name="generated-scope-76ce8966-2161-4186-bc6b-20dd45dc3e27" pos="22" ref="327"> 
//         <o as="not-a-number" base="not-a-number" level="1" loc="Φ.org.eolang.negative-infinity-plus-multiple-numbers-with-nan.φ.α0.generated-scope-76ce8966-2161-4186-bc6b-20dd45dc3e27.α0" ref="325"/>
//       </o>
//     </o>
//     <o base=".equal-to" line="328" loc="Φ.org.eolang.negative-infinity-plus-multiple-numbers-with-nan.φ.α1" pos="5"> 
//       <o base="$" line="328" loc="Φ.org.eolang.negative-infinity-plus-multiple-numbers-with-nan.φ.α1.ρ" pos="4"/>
//       <o base=".as-bytes" line="328" loc="Φ.org.eolang.negative-infinity-plus-multiple-numbers-with-nan.φ.α1.α0" pos="27"> 
//         <o base="not-a-number" line="328" loc="Φ.org.eolang.negative-infinity-plus-multiple-numbers-with-nan.φ.α1.α0.ρ" pos="15" ref="325"/>
//       </o>
//     </o>
//   </o>
// </o>
@XmirObject(name = "negative-infinity-plus-multiple-numbers-with-nanTest", oname = "negative-infinity-plus-multiple-numbers-with-nan", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/negative-infinity-tests.eo")
public final class EOnegative_infinity_plus_multiple_numbers_with_nanTest extends PhDefault {
  public EOnegative_infinity_plus_multiple_numbers_with_nanTest() {
    this.add("not-a-number", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("nan").get();
        ret = new PhLocated(ret, 325, 2, "Φ.org.eolang.negative-infinity-plus-multiple-numbers-with-nan.not-a-number");
      ret = new PhConst(ret);
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("hamcrest").get().attr("assert-that").get();
        ret = new PhLocated(ret, 326, 2, "Φ.org.eolang.negative-infinity-plus-multiple-numbers-with-nan.φ");
      ret = new PhCopy(ret);
        Phi ret_1_base = new EOω1t1$EOt0$EOgenerated_scope_76ce8966_2161_4186_bc6b_20dd45dc3e27(rho);
          ret_1_base = new PhLocated(ret_1_base, 327, 22, "Φ.org.eolang.negative-infinity-plus-multiple-numbers-with-nan.φ.α0.generated-scope-76ce8966-2161-4186-bc6b-20dd45dc3e27");
        Phi ret_1 = new PhMethod(ret_1_base, "as-bytes");
          ret_1 = new PhLocated(ret_1, 327, 47, "Φ.org.eolang.negative-infinity-plus-multiple-numbers-with-nan.φ.α0");
        Phi ret_2_base = rho;
          ret_2_base = new PhLocated(ret_2_base, 328, 4, "Φ.org.eolang.negative-infinity-plus-multiple-numbers-with-nan.φ.α1.ρ");
        Phi ret_2 = new PhMethod(ret_2_base, "equal-to");
          ret_2 = new PhLocated(ret_2, 328, 5, "Φ.org.eolang.negative-infinity-plus-multiple-numbers-with-nan.φ.α1");
        ret_2 = new PhCopy(ret_2);
          Phi ret_2_1_base = new PhMethod(rho, "not-a-number");
            ret_2_1_base = new PhLocated(ret_2_1_base, 328, 15, "Φ.org.eolang.negative-infinity-plus-multiple-numbers-with-nan.φ.α1.α0.ρ");
          Phi ret_2_1 = new PhMethod(ret_2_1_base, "as-bytes");
            ret_2_1 = new PhLocated(ret_2_1, 328, 27, "Φ.org.eolang.negative-infinity-plus-multiple-numbers-with-nan.φ.α1.α0");
          ret_2 = new PhWith(ret_2, 0, ret_2_1);
        ret = new PhWith(ret, 0, ret_1);
        ret = new PhWith(ret, 1, ret_2);
      return ret;
    })));
  }

  @Test
  public void works() throws java.lang.Exception {
    Object obj = new Dataized(new EOnegative_infinity_plus_multiple_numbers_with_nanTest()).take();
    if (obj instanceof String) {
      Assertions.fail(obj.toString());
    } else {
      Assertions.assertTrue((Boolean) obj);
    }
  }

// <o abstract="" ancestors="1" line="327" loc="Φ.org.eolang.negative-infinity-plus-multiple-numbers-with-nan$t1$t0$generated-scope-76ce8966-2161-4186-bc6b-20dd45dc3e27" name="negative-infinity-plus-multiple-numbers-with-nan$t1$t0$generated-scope-76ce8966-2161-4186-bc6b-20dd45dc3e27" original-name="generated-scope-76ce8966-2161-4186-bc6b-20dd45dc3e27" parent="negative-infinity-plus-multiple-numbers-with-nan" pos="22"> 
//   <o base=".plus" line="327" loc="Φ.org.eolang.negative-infinity-plus-multiple-numbers-with-nan$t1$t0$generated-scope-76ce8966-2161-4186-bc6b-20dd45dc3e27.org.eolang.scope-76ce8966-2161-4186-bc6b-20dd45dc3e27" name="org.eolang.scope-76ce8966-2161-4186-bc6b-20dd45dc3e27" pos="22" scope="scope-76ce8966-2161-4186-bc6b-20dd45dc3e27"> 
//     <o base="org.eolang.negative-infinity" line="327" loc="Φ.org.eolang.negative-infinity-plus-multiple-numbers-with-nan$t1$t0$generated-scope-76ce8966-2161-4186-bc6b-20dd45dc3e27.org.eolang.scope-76ce8966-2161-4186-bc6b-20dd45dc3e27.ρ" pos="5" scope="scope-76ce8966-2161-4186-bc6b-20dd45dc3e27"/>
//     <o base="org.eolang.int" data="int" line="327" loc="Φ.org.eolang.negative-infinity-plus-multiple-numbers-with-nan$t1$t0$generated-scope-76ce8966-2161-4186-bc6b-20dd45dc3e27.org.eolang.scope-76ce8966-2161-4186-bc6b-20dd45dc3e27.α0" pos="28" scope="scope-76ce8966-2161-4186-bc6b-20dd45dc3e27">42</o>
//     <o base="not-a-number" line="327" loc="Φ.org.eolang.negative-infinity-plus-multiple-numbers-with-nan$t1$t0$generated-scope-76ce8966-2161-4186-bc6b-20dd45dc3e27.org.eolang.scope-76ce8966-2161-4186-bc6b-20dd45dc3e27.α1" pos="31" ref="327.325.461" scope="scope-76ce8966-2161-4186-bc6b-20dd45dc3e27"/>
//     <o base="org.eolang.int" data="int" line="327" loc="Φ.org.eolang.negative-infinity-plus-multiple-numbers-with-nan$t1$t0$generated-scope-76ce8966-2161-4186-bc6b-20dd45dc3e27.org.eolang.scope-76ce8966-2161-4186-bc6b-20dd45dc3e27.α2" pos="44" scope="scope-76ce8966-2161-4186-bc6b-20dd45dc3e27">30</o>
//   </o>
//   <o base="org.eolang.scope-76ce8966-2161-4186-bc6b-20dd45dc3e27" line="327" loc="Φ.org.eolang.negative-infinity-plus-multiple-numbers-with-nan$t1$t0$generated-scope-76ce8966-2161-4186-bc6b-20dd45dc3e27.φ" name="@" pos="22" ref="327"/>
//   <o level="1" line="327.325.461" loc="Φ.org.eolang.negative-infinity-plus-multiple-numbers-with-nan$t1$t0$generated-scope-76ce8966-2161-4186-bc6b-20dd45dc3e27.not-a-number" name="not-a-number"/>
// </o>
@XmirObject(name = "ω1t1$t0$generated-scope-76ce8966-2161-4186-bc6b-20dd45dc3e27", oname = "generated-scope-76ce8966-2161-4186-bc6b-20dd45dc3e27", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/negative-infinity-tests.eo")
public final class EOω1t1$EOt0$EOgenerated_scope_76ce8966_2161_4186_bc6b_20dd45dc3e27 extends PhDefault {
  public EOω1t1$EOt0$EOgenerated_scope_76ce8966_2161_4186_bc6b_20dd45dc3e27(final Phi sigma) {
    super(sigma);
    this.add("org.eolang.scope-76ce8966-2161-4186-bc6b-20dd45dc3e27", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = Phi.Φ.attr("org").get().attr("eolang").get().attr("negative-infinity").get();
        ret_base = new PhLocated(ret_base, 327, 5, "Φ.org.eolang.negative-infinity-plus-multiple-numbers-with-nan$t1$t0$generated-scope-76ce8966-2161-4186-bc6b-20dd45dc3e27.org.eolang.scope-76ce8966-2161-4186-bc6b-20dd45dc3e27.ρ");
      Phi ret = new PhMethod(ret_base, "plus");
        ret = new PhLocated(ret, 327, 22, "Φ.org.eolang.negative-infinity-plus-multiple-numbers-with-nan$t1$t0$generated-scope-76ce8966-2161-4186-bc6b-20dd45dc3e27.org.eolang.scope-76ce8966-2161-4186-bc6b-20dd45dc3e27");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 327, 28, "Φ.org.eolang.negative-infinity-plus-multiple-numbers-with-nan$t1$t0$generated-scope-76ce8966-2161-4186-bc6b-20dd45dc3e27.org.eolang.scope-76ce8966-2161-4186-bc6b-20dd45dc3e27.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>(42L));
        Phi ret_2 = new PhMethod(new PhMethod(rho, "σ"), "not-a-number");
          ret_2 = new PhLocated(ret_2, 327, 31, "Φ.org.eolang.negative-infinity-plus-multiple-numbers-with-nan$t1$t0$generated-scope-76ce8966-2161-4186-bc6b-20dd45dc3e27.org.eolang.scope-76ce8966-2161-4186-bc6b-20dd45dc3e27.α1");
        Phi ret_3 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_3 = new PhLocated(ret_3, 327, 44, "Φ.org.eolang.negative-infinity-plus-multiple-numbers-with-nan$t1$t0$generated-scope-76ce8966-2161-4186-bc6b-20dd45dc3e27.org.eolang.scope-76ce8966-2161-4186-bc6b-20dd45dc3e27.α2");
          ret_3 = new PhWith(ret_3, "Δ", new Data.Value<>(30L));
        ret = new PhWith(ret, 0, ret_1);
        ret = new PhWith(ret, 1, ret_2);
        ret = new PhWith(ret, 2, ret_3);
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new PhMethod(rho, "org.eolang.scope-76ce8966-2161-4186-bc6b-20dd45dc3e27");
        ret = new PhLocated(ret, 327, 22, "Φ.org.eolang.negative-infinity-plus-multiple-numbers-with-nan$t1$t0$generated-scope-76ce8966-2161-4186-bc6b-20dd45dc3e27.φ");
      return ret;
    })));
  }
}
}
