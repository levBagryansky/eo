
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT e24f541 2023-09-12T11:41:32) on 2023-10-03T10:45:38.539230Z; your changes will be discarded on the next build */
package EOorg.EOeolang;

import org.eolang.*;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

// <o abstract="" line="281" loc="Φ.org.eolang.sum-up-several-arguments" name="sum-up-several-arguments" original-name="sum-up-several-arguments" pos="0"> 
//   <o base=".eq" line="282" loc="Φ.org.eolang.sum-up-several-arguments.φ" name="@" pos="2"> 
//     <o base="org.eolang.int" data="int" line="283" loc="Φ.org.eolang.sum-up-several-arguments.φ.ρ" pos="4">1982</o>
//     <o base=".plus" line="284" loc="Φ.org.eolang.sum-up-several-arguments.φ.α0" pos="8"> 
//       <o base="org.eolang.int" data="int" line="284" loc="Φ.org.eolang.sum-up-several-arguments.φ.α0.ρ" pos="4">1000</o>
//       <o base="org.eolang.int" data="int" line="284" loc="Φ.org.eolang.sum-up-several-arguments.φ.α0.α0" pos="14">900</o>
//       <o base="org.eolang.int" data="int" line="284" loc="Φ.org.eolang.sum-up-several-arguments.φ.α0.α1" pos="18">80</o>
//       <o base="org.eolang.int" data="int" line="284" loc="Φ.org.eolang.sum-up-several-arguments.φ.α0.α2" pos="21">2</o>
//     </o>
//   </o>
// </o>
@XmirObject(name = "sum-up-several-argumentsTest", oname = "sum-up-several-arguments", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/int-tests.eo")
public final class EOsum_up_several_argumentsTest extends PhDefault {
    
  public EOsum_up_several_argumentsTest() {
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = new EOorg.EOeolang.EOint(Phi.Φ);
        ret_base = new PhLocated(ret_base, 283, 4, "Φ.org.eolang.sum-up-several-arguments.φ.ρ");
        ret_base = new PhWith(ret_base, "Δ", new Data.Value<>(1982L));
      Phi ret = new PhMethod(ret_base, "eq");
        ret = new PhLocated(ret, 282, 2, "Φ.org.eolang.sum-up-several-arguments.φ");
      ret = new PhCopy(ret);
        Phi ret_1_base = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_1_base = new PhLocated(ret_1_base, 284, 4, "Φ.org.eolang.sum-up-several-arguments.φ.α0.ρ");
          ret_1_base = new PhWith(ret_1_base, "Δ", new Data.Value<>(1000L));
        Phi ret_1 = new PhMethod(ret_1_base, "plus");
          ret_1 = new PhLocated(ret_1, 284, 8, "Φ.org.eolang.sum-up-several-arguments.φ.α0");
        ret_1 = new PhCopy(ret_1);
          Phi ret_1_1 = new EOorg.EOeolang.EOint(Phi.Φ);
            ret_1_1 = new PhLocated(ret_1_1, 284, 14, "Φ.org.eolang.sum-up-several-arguments.φ.α0.α0");
            ret_1_1 = new PhWith(ret_1_1, "Δ", new Data.Value<>(900L));
          Phi ret_1_2 = new EOorg.EOeolang.EOint(Phi.Φ);
            ret_1_2 = new PhLocated(ret_1_2, 284, 18, "Φ.org.eolang.sum-up-several-arguments.φ.α0.α1");
            ret_1_2 = new PhWith(ret_1_2, "Δ", new Data.Value<>(80L));
          Phi ret_1_3 = new EOorg.EOeolang.EOint(Phi.Φ);
            ret_1_3 = new PhLocated(ret_1_3, 284, 21, "Φ.org.eolang.sum-up-several-arguments.φ.α0.α2");
            ret_1_3 = new PhWith(ret_1_3, "Δ", new Data.Value<>(2L));
          ret_1 = new PhWith(ret_1, 0, ret_1_1);
          ret_1 = new PhWith(ret_1, 1, ret_1_2);
          ret_1 = new PhWith(ret_1, 2, ret_1_3);
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
  }

  @Test
  public void works() throws java.lang.Exception {
    Object obj = new Dataized(new EOsum_up_several_argumentsTest()).take();
    if (obj instanceof String) {
      Assertions.fail(obj.toString());
    } else {
      Assertions.assertTrue((Boolean) obj);
    }
  }
}
