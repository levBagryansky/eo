
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT e24f541 2023-09-12T11:41:32) on 2023-10-03T10:45:38.539230Z; your changes will be discarded on the next build */
package EOorg.EOeolang;

import org.eolang.*;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

// <o abstract="" line="82" loc="Φ.org.eolang.try-memory-update" name="try-memory-update" original-name="try-memory-update" pos="0"> 
//   <o base="org.eolang.memory" line="83" loc="Φ.org.eolang.try-memory-update.m" name="m" pos="2"> 
//     <o base="org.eolang.int" data="int" line="83" loc="Φ.org.eolang.try-memory-update.m.α0" pos="9">0</o>
//   </o>
//   <o base=".eq" line="84" loc="Φ.org.eolang.try-memory-update.φ" name="@" pos="2"> 
//     <o base="org.eolang.seq" line="85" loc="Φ.org.eolang.try-memory-update.φ.ρ" pos="4"> 
//       <o base=".write" line="86" loc="Φ.org.eolang.try-memory-update.φ.ρ.α0" pos="7"> 
//         <o base="m" line="86" loc="Φ.org.eolang.try-memory-update.φ.ρ.α0.ρ" pos="6" ref="83"/>
//         <o base="org.eolang.int" data="int" line="86" loc="Φ.org.eolang.try-memory-update.φ.ρ.α0.α0" pos="14">1</o>
//       </o>
//       <o base="org.eolang.try" line="87" loc="Φ.org.eolang.try-memory-update.φ.ρ.α1" pos="6"> 
//         <o base="try-memory-update$t1$t0$t1$a0" cut="71" line="88" loc="Φ.org.eolang.try-memory-update.φ.ρ.α1.α0" pos="8" ref="88"> 
//           <o as="m" base="m" level="1" loc="Φ.org.eolang.try-memory-update.φ.ρ.α1.α0.α0" ref="83"/>
//         </o>
//         <o base="try-memory-update$t1$t0$t1$a1" cut="80" line="90" loc="Φ.org.eolang.try-memory-update.φ.ρ.α1.α1" pos="8" ref="90"/>
//         <o base="org.eolang.nop" line="92" loc="Φ.org.eolang.try-memory-update.φ.ρ.α1.α2" pos="8"/>
//       </o>
//       <o base=".as-int" line="93" loc="Φ.org.eolang.try-memory-update.φ.ρ.α2" pos="7"> 
//         <o base="m" line="93" loc="Φ.org.eolang.try-memory-update.φ.ρ.α2.ρ" pos="6" ref="83"/>
//       </o>
//     </o>
//     <o base="org.eolang.int" data="int" line="94" loc="Φ.org.eolang.try-memory-update.φ.α0" pos="4">3</o>
//   </o>
// </o>
@XmirObject(name = "try-memory-updateTest", oname = "try-memory-update", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/try-tests.eo")
public final class EOtry_memory_updateTest extends PhDefault {
    
  public EOtry_memory_updateTest() {
    this.add("m", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("memory").get();
        ret = new PhLocated(ret, 83, 2, "Φ.org.eolang.try-memory-update.m");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 83, 9, "Φ.org.eolang.try-memory-update.m.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>(0L));
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = Phi.Φ.attr("org").get().attr("eolang").get().attr("seq").get();
        ret_base = new PhLocated(ret_base, 85, 4, "Φ.org.eolang.try-memory-update.φ.ρ");
      ret_base = new PhCopy(ret_base);
        Phi ret_base_1_base = new PhMethod(rho, "m");
          ret_base_1_base = new PhLocated(ret_base_1_base, 86, 6, "Φ.org.eolang.try-memory-update.φ.ρ.α0.ρ");
        Phi ret_base_1 = new PhMethod(ret_base_1_base, "write");
          ret_base_1 = new PhLocated(ret_base_1, 86, 7, "Φ.org.eolang.try-memory-update.φ.ρ.α0");
        ret_base_1 = new PhCopy(ret_base_1);
          Phi ret_base_1_1 = new EOorg.EOeolang.EOint(Phi.Φ);
            ret_base_1_1 = new PhLocated(ret_base_1_1, 86, 14, "Φ.org.eolang.try-memory-update.φ.ρ.α0.α0");
            ret_base_1_1 = new PhWith(ret_base_1_1, "Δ", new Data.Value<>(1L));
          ret_base_1 = new PhWith(ret_base_1, 0, ret_base_1_1);
        Phi ret_base_2 = Phi.Φ.attr("org").get().attr("eolang").get().attr("try").get();
          ret_base_2 = new PhLocated(ret_base_2, 87, 6, "Φ.org.eolang.try-memory-update.φ.ρ.α1");
        ret_base_2 = new PhCopy(ret_base_2);
          Phi ret_base_2_1 = new EOω1t1$EOt0$EOt1$EOa0(rho);
            ret_base_2_1 = new PhLocated(ret_base_2_1, 88, 8, "Φ.org.eolang.try-memory-update.φ.ρ.α1.α0");
          Phi ret_base_2_2 = new EOω1t1$EOt0$EOt1$EOa1(rho);
            ret_base_2_2 = new PhLocated(ret_base_2_2, 90, 8, "Φ.org.eolang.try-memory-update.φ.ρ.α1.α1");
          Phi ret_base_2_3 = Phi.Φ.attr("org").get().attr("eolang").get().attr("nop").get();
            ret_base_2_3 = new PhLocated(ret_base_2_3, 92, 8, "Φ.org.eolang.try-memory-update.φ.ρ.α1.α2");
          ret_base_2 = new PhWith(ret_base_2, 0, ret_base_2_1);
          ret_base_2 = new PhWith(ret_base_2, 1, ret_base_2_2);
          ret_base_2 = new PhWith(ret_base_2, 2, ret_base_2_3);
        Phi ret_base_3_base = new PhMethod(rho, "m");
          ret_base_3_base = new PhLocated(ret_base_3_base, 93, 6, "Φ.org.eolang.try-memory-update.φ.ρ.α2.ρ");
        Phi ret_base_3 = new PhMethod(ret_base_3_base, "as-int");
          ret_base_3 = new PhLocated(ret_base_3, 93, 7, "Φ.org.eolang.try-memory-update.φ.ρ.α2");
        ret_base = new PhWith(ret_base, 0, ret_base_1);
        ret_base = new PhWith(ret_base, 1, ret_base_2);
        ret_base = new PhWith(ret_base, 2, ret_base_3);
      Phi ret = new PhMethod(ret_base, "eq");
        ret = new PhLocated(ret, 84, 2, "Φ.org.eolang.try-memory-update.φ");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 94, 4, "Φ.org.eolang.try-memory-update.φ.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>(3L));
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
  }

  @Test
  public void works() throws java.lang.Exception {
    Object obj = new Dataized(new EOtry_memory_updateTest()).take();
    if (obj instanceof String) {
      Assertions.fail(obj.toString());
    } else {
      Assertions.assertTrue((Boolean) obj);
    }
  }

// <o abstract="" ancestors="1" line="88" loc="Φ.org.eolang.try-memory-update$t1$t0$t1$a0" name="try-memory-update$t1$t0$t1$a0" parent="try-memory-update" pos="8"> 
//   <o base=".write" line="89" loc="Φ.org.eolang.try-memory-update$t1$t0$t1$a0.φ" name="@" pos="11"> 
//     <o base="m" line="89" loc="Φ.org.eolang.try-memory-update$t1$t0$t1$a0.φ.ρ" pos="10" ref="88.83.467"/>
//     <o base="try-memory-update$t1$t0$t1$a0$t0$generated-scope-e84c5dec-661c-4a8a-84e7-147a933b04a6" cut="72" line="89" loc="Φ.org.eolang.try-memory-update$t1$t0$t1$a0.φ.generated-scope-e84c5dec-661c-4a8a-84e7-147a933b04a6" name="generated-scope-e84c5dec-661c-4a8a-84e7-147a933b04a6" pos="27" ref="89"> 
//       <o as="m" base="m" level="2" loc="Φ.org.eolang.try-memory-update$t1$t0$t1$a0.φ.generated-scope-e84c5dec-661c-4a8a-84e7-147a933b04a6.α0" ref="88.83.467"/>
//     </o>
//   </o>
//   <o level="1" line="88.83.467" loc="Φ.org.eolang.try-memory-update$t1$t0$t1$a0.m" name="m"/>
// </o>
@XmirObject(name = "ω1t1$t0$t1$a0", oname = "ω1t1$t0$t1$a0", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/try-tests.eo")
public final class EOω1t1$EOt0$EOt1$EOa0 extends PhDefault {
    
  public EOω1t1$EOt0$EOt1$EOa0(final Phi sigma) {
    super(sigma);
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = new PhMethod(new PhMethod(rho, "σ"), "m");
        ret_base = new PhLocated(ret_base, 89, 10, "Φ.org.eolang.try-memory-update$t1$t0$t1$a0.φ.ρ");
      Phi ret = new PhMethod(ret_base, "write");
        ret = new PhLocated(ret, 89, 11, "Φ.org.eolang.try-memory-update$t1$t0$t1$a0.φ");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOω2t0$EOgenerated_scope_e84c5dec_661c_4a8a_84e7_147a933b04a6(rho);
          ret_1 = new PhLocated(ret_1, 89, 27, "Φ.org.eolang.try-memory-update$t1$t0$t1$a0.φ.generated-scope-e84c5dec-661c-4a8a-84e7-147a933b04a6");
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
  }

// <o abstract="" ancestors="2" line="89" loc="Φ.org.eolang.try-memory-update$t1$t0$t1$a0$t0$generated-scope-e84c5dec-661c-4a8a-84e7-147a933b04a6" name="try-memory-update$t1$t0$t1$a0$t0$generated-scope-e84c5dec-661c-4a8a-84e7-147a933b04a6" original-name="generated-scope-e84c5dec-661c-4a8a-84e7-147a933b04a6" parent="try-memory-update$t1$t0$t1$a0" pos="27"> 
//   <o base=".plus" line="89" loc="Φ.org.eolang.try-memory-update$t1$t0$t1$a0$t0$generated-scope-e84c5dec-661c-4a8a-84e7-147a933b04a6.org.eolang.scope-e84c5dec-661c-4a8a-84e7-147a933b04a6" name="org.eolang.scope-e84c5dec-661c-4a8a-84e7-147a933b04a6" pos="27" scope="scope-e84c5dec-661c-4a8a-84e7-147a933b04a6"> 
//     <o base=".as-int" line="89" loc="Φ.org.eolang.try-memory-update$t1$t0$t1$a0$t0$generated-scope-e84c5dec-661c-4a8a-84e7-147a933b04a6.org.eolang.scope-e84c5dec-661c-4a8a-84e7-147a933b04a6.ρ" pos="20" scope="scope-e84c5dec-661c-4a8a-84e7-147a933b04a6"> 
//       <o base="m" line="89" loc="Φ.org.eolang.try-memory-update$t1$t0$t1$a0$t0$generated-scope-e84c5dec-661c-4a8a-84e7-147a933b04a6.org.eolang.scope-e84c5dec-661c-4a8a-84e7-147a933b04a6.ρ.ρ" pos="19" ref="89.83.468" scope="scope-e84c5dec-661c-4a8a-84e7-147a933b04a6"/>
//     </o>
//     <o base="org.eolang.int" data="int" line="89" loc="Φ.org.eolang.try-memory-update$t1$t0$t1$a0$t0$generated-scope-e84c5dec-661c-4a8a-84e7-147a933b04a6.org.eolang.scope-e84c5dec-661c-4a8a-84e7-147a933b04a6.α0" pos="33" scope="scope-e84c5dec-661c-4a8a-84e7-147a933b04a6">1</o>
//   </o>
//   <o base="org.eolang.scope-e84c5dec-661c-4a8a-84e7-147a933b04a6" line="89" loc="Φ.org.eolang.try-memory-update$t1$t0$t1$a0$t0$generated-scope-e84c5dec-661c-4a8a-84e7-147a933b04a6.φ" name="@" pos="27" ref="89"/>
//   <o level="2" line="89.83.468" loc="Φ.org.eolang.try-memory-update$t1$t0$t1$a0$t0$generated-scope-e84c5dec-661c-4a8a-84e7-147a933b04a6.m" name="m"/>
// </o>
@XmirObject(name = "ω2t0$generated-scope-e84c5dec-661c-4a8a-84e7-147a933b04a6", oname = "generated-scope-e84c5dec-661c-4a8a-84e7-147a933b04a6", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/try-tests.eo")
public final class EOω2t0$EOgenerated_scope_e84c5dec_661c_4a8a_84e7_147a933b04a6 extends PhDefault {
    
  public EOω2t0$EOgenerated_scope_e84c5dec_661c_4a8a_84e7_147a933b04a6(final Phi sigma) {
    super(sigma);
    this.add("org.eolang.scope-e84c5dec-661c-4a8a-84e7-147a933b04a6", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base_base = new PhMethod(new PhMethod(new PhMethod(rho, "σ"), "σ"), "m");
        ret_base_base = new PhLocated(ret_base_base, 89, 19, "Φ.org.eolang.try-memory-update$t1$t0$t1$a0$t0$generated-scope-e84c5dec-661c-4a8a-84e7-147a933b04a6.org.eolang.scope-e84c5dec-661c-4a8a-84e7-147a933b04a6.ρ.ρ");
      Phi ret_base = new PhMethod(ret_base_base, "as-int");
        ret_base = new PhLocated(ret_base, 89, 20, "Φ.org.eolang.try-memory-update$t1$t0$t1$a0$t0$generated-scope-e84c5dec-661c-4a8a-84e7-147a933b04a6.org.eolang.scope-e84c5dec-661c-4a8a-84e7-147a933b04a6.ρ");
      Phi ret = new PhMethod(ret_base, "plus");
        ret = new PhLocated(ret, 89, 27, "Φ.org.eolang.try-memory-update$t1$t0$t1$a0$t0$generated-scope-e84c5dec-661c-4a8a-84e7-147a933b04a6.org.eolang.scope-e84c5dec-661c-4a8a-84e7-147a933b04a6");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 89, 33, "Φ.org.eolang.try-memory-update$t1$t0$t1$a0$t0$generated-scope-e84c5dec-661c-4a8a-84e7-147a933b04a6.org.eolang.scope-e84c5dec-661c-4a8a-84e7-147a933b04a6.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>(1L));
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new PhMethod(rho, "org.eolang.scope-e84c5dec-661c-4a8a-84e7-147a933b04a6");
        ret = new PhLocated(ret, 89, 27, "Φ.org.eolang.try-memory-update$t1$t0$t1$a0$t0$generated-scope-e84c5dec-661c-4a8a-84e7-147a933b04a6.φ");
      return ret;
    })));
  }
}
}

// <o abstract="" ancestors="1" line="90" loc="Φ.org.eolang.try-memory-update$t1$t0$t1$a1" name="try-memory-update$t1$t0$t1$a1" parent="try-memory-update" pos="8"> 
//   <o line="90" loc="Φ.org.eolang.try-memory-update$t1$t0$t1$a1.e" name="e" pos="9"/>
//   <o base="e" line="91" loc="Φ.org.eolang.try-memory-update$t1$t0$t1$a1.φ" name="@" pos="10" ref="90"/>
// </o>
@XmirObject(name = "ω1t1$t0$t1$a1", oname = "ω1t1$t0$t1$a1", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/try-tests.eo")
public final class EOω1t1$EOt0$EOt1$EOa1 extends PhDefault {
    
  public EOω1t1$EOt0$EOt1$EOa1(final Phi sigma) {
    super(sigma);
    this.add("e", new AtFree(/* default */));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new PhMethod(rho, "e");
        ret = new PhLocated(ret, 91, 10, "Φ.org.eolang.try-memory-update$t1$t0$t1$a1.φ");
      return ret;
    })));
  }
}
}
