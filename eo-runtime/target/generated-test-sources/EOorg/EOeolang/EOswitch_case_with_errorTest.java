
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT e24f541 2023-09-12T11:41:32) on 2023-10-03T10:45:38.539230Z; your changes will be discarded on the next build */
package EOorg.EOeolang;

import org.eolang.*;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

// <o abstract="" line="80" loc="Φ.org.eolang.switch-case-with-error" name="switch-case-with-error" original-name="switch-case-with-error" pos="0"> 
//   <o base="org.eolang.try" line="81" loc="Φ.org.eolang.switch-case-with-error.φ" name="@" pos="2"> 
//     <o base="org.eolang.switch" line="82" loc="Φ.org.eolang.switch-case-with-error.φ.α0" pos="4"/>
//     <o base="switch-case-with-error$t0$a1" cut="53" line="83" loc="Φ.org.eolang.switch-case-with-error.φ.α1" pos="4" ref="83"/>
//     <o base="org.eolang.nop" line="87" loc="Φ.org.eolang.switch-case-with-error.φ.α2" pos="4"/>
//   </o>
// </o>
@XmirObject(name = "switch-case-with-errorTest", oname = "switch-case-with-error", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/switch-tests.eo")
public final class EOswitch_case_with_errorTest extends PhDefault {
    
  public EOswitch_case_with_errorTest() {
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("try").get();
        ret = new PhLocated(ret, 81, 2, "Φ.org.eolang.switch-case-with-error.φ");
      ret = new PhCopy(ret);
        Phi ret_1 = Phi.Φ.attr("org").get().attr("eolang").get().attr("switch").get();
          ret_1 = new PhLocated(ret_1, 82, 4, "Φ.org.eolang.switch-case-with-error.φ.α0");
        Phi ret_2 = new EOω1t0$EOa1(rho);
          ret_2 = new PhLocated(ret_2, 83, 4, "Φ.org.eolang.switch-case-with-error.φ.α1");
        Phi ret_3 = Phi.Φ.attr("org").get().attr("eolang").get().attr("nop").get();
          ret_3 = new PhLocated(ret_3, 87, 4, "Φ.org.eolang.switch-case-with-error.φ.α2");
        ret = new PhWith(ret, 0, ret_1);
        ret = new PhWith(ret, 1, ret_2);
        ret = new PhWith(ret, 2, ret_3);
      return ret;
    })));
  }

  @Test
  public void works() throws java.lang.Exception {
    Object obj = new Dataized(new EOswitch_case_with_errorTest()).take();
    if (obj instanceof String) {
      Assertions.fail(obj.toString());
    } else {
      Assertions.assertTrue((Boolean) obj);
    }
  }

// <o abstract="" ancestors="1" line="83" loc="Φ.org.eolang.switch-case-with-error$t0$a1" name="switch-case-with-error$t0$a1" parent="switch-case-with-error" pos="4"> 
//   <o line="83" loc="Φ.org.eolang.switch-case-with-error$t0$a1.ex" name="ex" pos="5"/>
//   <o base=".eq" line="84" loc="Φ.org.eolang.switch-case-with-error$t0$a1.φ" name="@" pos="6"> 
//     <o base="ex" line="85" loc="Φ.org.eolang.switch-case-with-error$t0$a1.φ.ρ" pos="8" ref="83"/>
//     <o base="org.eolang.string" data="string" line="86" loc="Φ.org.eolang.switch-case-with-error$t0$a1.φ.α0" pos="8">switch cases are empty</o>
//   </o>
// </o>
@XmirObject(name = "ω1t0$a1", oname = "ω1t0$a1", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/switch-tests.eo")
public final class EOω1t0$EOa1 extends PhDefault {
    
  public EOω1t0$EOa1(final Phi sigma) {
    super(sigma);
    this.add("ex", new AtFree(/* default */));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = new PhMethod(rho, "ex");
        ret_base = new PhLocated(ret_base, 85, 8, "Φ.org.eolang.switch-case-with-error$t0$a1.φ.ρ");
      Phi ret = new PhMethod(ret_base, "eq");
        ret = new PhLocated(ret, 84, 6, "Φ.org.eolang.switch-case-with-error$t0$a1.φ");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOstring(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 86, 8, "Φ.org.eolang.switch-case-with-error$t0$a1.φ.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>("switch cases are empty"));
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
  }
}
}
