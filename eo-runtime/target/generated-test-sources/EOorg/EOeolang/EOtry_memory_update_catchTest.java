
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT b5a4c9a 2023-08-17T12:29:38) on 2023-08-18T14:42:30.920527Z; your changes will be discarded on the next build */
package EOorg.EOeolang;

import org.eolang.*;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

// <o abstract="" line="100" loc="Φ.org.eolang.try-memory-update-catch" name="try-memory-update-catch" original-name="try-memory-update-catch" pos="0"> 
//   <o base="org.eolang.memory" line="101" loc="Φ.org.eolang.try-memory-update-catch.m" name="m" pos="2"> 
//     <o base="org.eolang.int" data="int" line="101" loc="Φ.org.eolang.try-memory-update-catch.m.α0" pos="9">0</o>
//   </o>
//   <o base="org.eolang.hamcrest.assert-that" line="102" loc="Φ.org.eolang.try-memory-update-catch.φ" name="@" pos="2"> 
//     <o base="org.eolang.seq" line="103" loc="Φ.org.eolang.try-memory-update-catch.φ.α0" pos="4"> 
//       <o base=".write" line="104" loc="Φ.org.eolang.try-memory-update-catch.φ.α0.α0" pos="7"> 
//         <o base="m" line="104" loc="Φ.org.eolang.try-memory-update-catch.φ.α0.α0.ρ" pos="6" ref="101"/>
//         <o base="org.eolang.int" data="int" line="104" loc="Φ.org.eolang.try-memory-update-catch.φ.α0.α0.α0" pos="14">1</o>
//       </o>
//       <o base="org.eolang.try" line="105" loc="Φ.org.eolang.try-memory-update-catch.φ.α0.α1" pos="6"> 
//         <o base="try-memory-update-catch$t1$t0$t1$a0" cut="102" line="106" loc="Φ.org.eolang.try-memory-update-catch.φ.α0.α1.α0" pos="8" ref="106"> 
//           <o as="m" base="m" level="1" loc="Φ.org.eolang.try-memory-update-catch.φ.α0.α1.α0.α0" ref="101"/>
//         </o>
//         <o base="try-memory-update-catch$t1$t0$t1$a1" cut="114" line="110" loc="Φ.org.eolang.try-memory-update-catch.φ.α0.α1.α1" pos="8" ref="110"/>
//         <o base="org.eolang.nop" line="112" loc="Φ.org.eolang.try-memory-update-catch.φ.α0.α1.α2" pos="8"/>
//       </o>
//       <o base="m" line="113" loc="Φ.org.eolang.try-memory-update-catch.φ.α0.α2" pos="6" ref="101"/>
//     </o>
//     <o base=".equal-to" line="114" loc="Φ.org.eolang.try-memory-update-catch.φ.α1" pos="5"> 
//       <o base="$" line="114" loc="Φ.org.eolang.try-memory-update-catch.φ.α1.ρ" pos="4"/>
//       <o base="org.eolang.int" data="int" line="114" loc="Φ.org.eolang.try-memory-update-catch.φ.α1.α0" pos="15">1</o>
//     </o>
//   </o>
// </o>
@XmirObject(name = "try-memory-update-catchTest", oname = "try-memory-update-catch", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/try-tests.eo")
public final class EOtry_memory_update_catchTest extends PhDefault {
  public EOtry_memory_update_catchTest() {
    this.add("m", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("memory").get();
        ret = new PhLocated(ret, 101, 2, "Φ.org.eolang.try-memory-update-catch.m");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 101, 9, "Φ.org.eolang.try-memory-update-catch.m.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>(0L));
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("hamcrest").get().attr("assert-that").get();
        ret = new PhLocated(ret, 102, 2, "Φ.org.eolang.try-memory-update-catch.φ");
      ret = new PhCopy(ret);
        Phi ret_1 = Phi.Φ.attr("org").get().attr("eolang").get().attr("seq").get();
          ret_1 = new PhLocated(ret_1, 103, 4, "Φ.org.eolang.try-memory-update-catch.φ.α0");
        ret_1 = new PhCopy(ret_1);
          Phi ret_1_1_base = new PhMethod(rho, "m");
            ret_1_1_base = new PhLocated(ret_1_1_base, 104, 6, "Φ.org.eolang.try-memory-update-catch.φ.α0.α0.ρ");
          Phi ret_1_1 = new PhMethod(ret_1_1_base, "write");
            ret_1_1 = new PhLocated(ret_1_1, 104, 7, "Φ.org.eolang.try-memory-update-catch.φ.α0.α0");
          ret_1_1 = new PhCopy(ret_1_1);
            Phi ret_1_1_1 = new EOorg.EOeolang.EOint(Phi.Φ);
              ret_1_1_1 = new PhLocated(ret_1_1_1, 104, 14, "Φ.org.eolang.try-memory-update-catch.φ.α0.α0.α0");
              ret_1_1_1 = new PhWith(ret_1_1_1, "Δ", new Data.Value<>(1L));
            ret_1_1 = new PhWith(ret_1_1, 0, ret_1_1_1);
          Phi ret_1_2 = Phi.Φ.attr("org").get().attr("eolang").get().attr("try").get();
            ret_1_2 = new PhLocated(ret_1_2, 105, 6, "Φ.org.eolang.try-memory-update-catch.φ.α0.α1");
          ret_1_2 = new PhCopy(ret_1_2);
            Phi ret_1_2_1 = new EOω1t1$EOt0$EOt1$EOa0(rho);
              ret_1_2_1 = new PhLocated(ret_1_2_1, 106, 8, "Φ.org.eolang.try-memory-update-catch.φ.α0.α1.α0");
            Phi ret_1_2_2 = new EOω1t1$EOt0$EOt1$EOa1(rho);
              ret_1_2_2 = new PhLocated(ret_1_2_2, 110, 8, "Φ.org.eolang.try-memory-update-catch.φ.α0.α1.α1");
            Phi ret_1_2_3 = Phi.Φ.attr("org").get().attr("eolang").get().attr("nop").get();
              ret_1_2_3 = new PhLocated(ret_1_2_3, 112, 8, "Φ.org.eolang.try-memory-update-catch.φ.α0.α1.α2");
            ret_1_2 = new PhWith(ret_1_2, 0, ret_1_2_1);
            ret_1_2 = new PhWith(ret_1_2, 1, ret_1_2_2);
            ret_1_2 = new PhWith(ret_1_2, 2, ret_1_2_3);
          Phi ret_1_3 = new PhMethod(rho, "m");
            ret_1_3 = new PhLocated(ret_1_3, 113, 6, "Φ.org.eolang.try-memory-update-catch.φ.α0.α2");
          ret_1 = new PhWith(ret_1, 0, ret_1_1);
          ret_1 = new PhWith(ret_1, 1, ret_1_2);
          ret_1 = new PhWith(ret_1, 2, ret_1_3);
        Phi ret_2_base = rho;
          ret_2_base = new PhLocated(ret_2_base, 114, 4, "Φ.org.eolang.try-memory-update-catch.φ.α1.ρ");
        Phi ret_2 = new PhMethod(ret_2_base, "equal-to");
          ret_2 = new PhLocated(ret_2, 114, 5, "Φ.org.eolang.try-memory-update-catch.φ.α1");
        ret_2 = new PhCopy(ret_2);
          Phi ret_2_1 = new EOorg.EOeolang.EOint(Phi.Φ);
            ret_2_1 = new PhLocated(ret_2_1, 114, 15, "Φ.org.eolang.try-memory-update-catch.φ.α1.α0");
            ret_2_1 = new PhWith(ret_2_1, "Δ", new Data.Value<>(1L));
          ret_2 = new PhWith(ret_2, 0, ret_2_1);
        ret = new PhWith(ret, 0, ret_1);
        ret = new PhWith(ret, 1, ret_2);
      return ret;
    })));
  }

  @Test
  public void works() throws java.lang.Exception {
    Object obj = new Dataized(new EOtry_memory_update_catchTest()).take();
    if (obj instanceof String) {
      Assertions.fail(obj.toString());
    } else {
      Assertions.assertTrue((Boolean) obj);
    }
  }

// <o abstract="" ancestors="1" line="106" loc="Φ.org.eolang.try-memory-update-catch$t1$t0$t1$a0" name="try-memory-update-catch$t1$t0$t1$a0" parent="try-memory-update-catch" pos="8"> 
//   <o base="org.eolang.seq" line="107" loc="Φ.org.eolang.try-memory-update-catch$t1$t0$t1$a0.φ" name="@" pos="10"> 
//     <o base=".div" line="108" loc="Φ.org.eolang.try-memory-update-catch$t1$t0$t1$a0.φ.α0" pos="13"> 
//       <o base="org.eolang.int" data="int" line="108" loc="Φ.org.eolang.try-memory-update-catch$t1$t0$t1$a0.φ.α0.ρ" pos="12">5</o>
//       <o base="org.eolang.int" data="int" line="108" loc="Φ.org.eolang.try-memory-update-catch$t1$t0$t1$a0.φ.α0.α0" pos="18">0</o>
//     </o>
//     <o base=".write" line="109" loc="Φ.org.eolang.try-memory-update-catch$t1$t0$t1$a0.φ.α1" pos="13"> 
//       <o base="m" line="109" loc="Φ.org.eolang.try-memory-update-catch$t1$t0$t1$a0.φ.α1.ρ" pos="12" ref="106.101.463"/>
//       <o base="try-memory-update-catch$t1$t0$t1$a0$t0$t1$generated-scope-f1bbcd4b-f343-4e50-ad3e-77b1ca48f0ce" cut="106" line="109" loc="Φ.org.eolang.try-memory-update-catch$t1$t0$t1$a0.φ.α1.generated-scope-f1bbcd4b-f343-4e50-ad3e-77b1ca48f0ce" name="generated-scope-f1bbcd4b-f343-4e50-ad3e-77b1ca48f0ce" pos="22" ref="109"> 
//         <o as="m" base="m" level="2" loc="Φ.org.eolang.try-memory-update-catch$t1$t0$t1$a0.φ.α1.generated-scope-f1bbcd4b-f343-4e50-ad3e-77b1ca48f0ce.α0" ref="106.101.463"/>
//       </o>
//     </o>
//   </o>
//   <o level="1" line="106.101.463" loc="Φ.org.eolang.try-memory-update-catch$t1$t0$t1$a0.m" name="m"/>
// </o>
@XmirObject(name = "ω1t1$t0$t1$a0", oname = "ω1t1$t0$t1$a0", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/try-tests.eo")
public final class EOω1t1$EOt0$EOt1$EOa0 extends PhDefault {
  public EOω1t1$EOt0$EOt1$EOa0(final Phi sigma) {
    super(sigma);
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("seq").get();
        ret = new PhLocated(ret, 107, 10, "Φ.org.eolang.try-memory-update-catch$t1$t0$t1$a0.φ");
      ret = new PhCopy(ret);
        Phi ret_1_base = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_1_base = new PhLocated(ret_1_base, 108, 12, "Φ.org.eolang.try-memory-update-catch$t1$t0$t1$a0.φ.α0.ρ");
          ret_1_base = new PhWith(ret_1_base, "Δ", new Data.Value<>(5L));
        Phi ret_1 = new PhMethod(ret_1_base, "div");
          ret_1 = new PhLocated(ret_1, 108, 13, "Φ.org.eolang.try-memory-update-catch$t1$t0$t1$a0.φ.α0");
        ret_1 = new PhCopy(ret_1);
          Phi ret_1_1 = new EOorg.EOeolang.EOint(Phi.Φ);
            ret_1_1 = new PhLocated(ret_1_1, 108, 18, "Φ.org.eolang.try-memory-update-catch$t1$t0$t1$a0.φ.α0.α0");
            ret_1_1 = new PhWith(ret_1_1, "Δ", new Data.Value<>(0L));
          ret_1 = new PhWith(ret_1, 0, ret_1_1);
        Phi ret_2_base = new PhMethod(new PhMethod(rho, "σ"), "m");
          ret_2_base = new PhLocated(ret_2_base, 109, 12, "Φ.org.eolang.try-memory-update-catch$t1$t0$t1$a0.φ.α1.ρ");
        Phi ret_2 = new PhMethod(ret_2_base, "write");
          ret_2 = new PhLocated(ret_2, 109, 13, "Φ.org.eolang.try-memory-update-catch$t1$t0$t1$a0.φ.α1");
        ret_2 = new PhCopy(ret_2);
          Phi ret_2_1 = new EOω2t0$EOt1$EOgenerated_scope_f1bbcd4b_f343_4e50_ad3e_77b1ca48f0ce(rho);
            ret_2_1 = new PhLocated(ret_2_1, 109, 22, "Φ.org.eolang.try-memory-update-catch$t1$t0$t1$a0.φ.α1.generated-scope-f1bbcd4b-f343-4e50-ad3e-77b1ca48f0ce");
          ret_2 = new PhWith(ret_2, 0, ret_2_1);
        ret = new PhWith(ret, 0, ret_1);
        ret = new PhWith(ret, 1, ret_2);
      return ret;
    })));
  }

// <o abstract="" ancestors="2" line="109" loc="Φ.org.eolang.try-memory-update-catch$t1$t0$t1$a0$t0$t1$generated-scope-f1bbcd4b-f343-4e50-ad3e-77b1ca48f0ce" name="try-memory-update-catch$t1$t0$t1$a0$t0$t1$generated-scope-f1bbcd4b-f343-4e50-ad3e-77b1ca48f0ce" original-name="generated-scope-f1bbcd4b-f343-4e50-ad3e-77b1ca48f0ce" parent="try-memory-update-catch$t1$t0$t1$a0" pos="22"> 
//   <o base=".plus" line="109" loc="Φ.org.eolang.try-memory-update-catch$t1$t0$t1$a0$t0$t1$generated-scope-f1bbcd4b-f343-4e50-ad3e-77b1ca48f0ce.org.eolang.scope-f1bbcd4b-f343-4e50-ad3e-77b1ca48f0ce" name="org.eolang.scope-f1bbcd4b-f343-4e50-ad3e-77b1ca48f0ce" pos="22" scope="scope-f1bbcd4b-f343-4e50-ad3e-77b1ca48f0ce"> 
//     <o base="m" line="109" loc="Φ.org.eolang.try-memory-update-catch$t1$t0$t1$a0$t0$t1$generated-scope-f1bbcd4b-f343-4e50-ad3e-77b1ca48f0ce.org.eolang.scope-f1bbcd4b-f343-4e50-ad3e-77b1ca48f0ce.ρ" pos="21" ref="109.101.464" scope="scope-f1bbcd4b-f343-4e50-ad3e-77b1ca48f0ce"/>
//     <o base="org.eolang.int" data="int" line="109" loc="Φ.org.eolang.try-memory-update-catch$t1$t0$t1$a0$t0$t1$generated-scope-f1bbcd4b-f343-4e50-ad3e-77b1ca48f0ce.org.eolang.scope-f1bbcd4b-f343-4e50-ad3e-77b1ca48f0ce.α0" pos="28" scope="scope-f1bbcd4b-f343-4e50-ad3e-77b1ca48f0ce">1</o>
//   </o>
//   <o base="org.eolang.scope-f1bbcd4b-f343-4e50-ad3e-77b1ca48f0ce" line="109" loc="Φ.org.eolang.try-memory-update-catch$t1$t0$t1$a0$t0$t1$generated-scope-f1bbcd4b-f343-4e50-ad3e-77b1ca48f0ce.φ" name="@" pos="22" ref="109"/>
//   <o level="2" line="109.101.464" loc="Φ.org.eolang.try-memory-update-catch$t1$t0$t1$a0$t0$t1$generated-scope-f1bbcd4b-f343-4e50-ad3e-77b1ca48f0ce.m" name="m"/>
// </o>
@XmirObject(name = "ω2t0$t1$generated-scope-f1bbcd4b-f343-4e50-ad3e-77b1ca48f0ce", oname = "generated-scope-f1bbcd4b-f343-4e50-ad3e-77b1ca48f0ce", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/try-tests.eo")
public final class EOω2t0$EOt1$EOgenerated_scope_f1bbcd4b_f343_4e50_ad3e_77b1ca48f0ce extends PhDefault {
  public EOω2t0$EOt1$EOgenerated_scope_f1bbcd4b_f343_4e50_ad3e_77b1ca48f0ce(final Phi sigma) {
    super(sigma);
    this.add("org.eolang.scope-f1bbcd4b-f343-4e50-ad3e-77b1ca48f0ce", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = new PhMethod(new PhMethod(new PhMethod(rho, "σ"), "σ"), "m");
        ret_base = new PhLocated(ret_base, 109, 21, "Φ.org.eolang.try-memory-update-catch$t1$t0$t1$a0$t0$t1$generated-scope-f1bbcd4b-f343-4e50-ad3e-77b1ca48f0ce.org.eolang.scope-f1bbcd4b-f343-4e50-ad3e-77b1ca48f0ce.ρ");
      Phi ret = new PhMethod(ret_base, "plus");
        ret = new PhLocated(ret, 109, 22, "Φ.org.eolang.try-memory-update-catch$t1$t0$t1$a0$t0$t1$generated-scope-f1bbcd4b-f343-4e50-ad3e-77b1ca48f0ce.org.eolang.scope-f1bbcd4b-f343-4e50-ad3e-77b1ca48f0ce");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 109, 28, "Φ.org.eolang.try-memory-update-catch$t1$t0$t1$a0$t0$t1$generated-scope-f1bbcd4b-f343-4e50-ad3e-77b1ca48f0ce.org.eolang.scope-f1bbcd4b-f343-4e50-ad3e-77b1ca48f0ce.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>(1L));
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new PhMethod(rho, "org.eolang.scope-f1bbcd4b-f343-4e50-ad3e-77b1ca48f0ce");
        ret = new PhLocated(ret, 109, 22, "Φ.org.eolang.try-memory-update-catch$t1$t0$t1$a0$t0$t1$generated-scope-f1bbcd4b-f343-4e50-ad3e-77b1ca48f0ce.φ");
      return ret;
    })));
  }
}
}

// <o abstract="" ancestors="1" line="110" loc="Φ.org.eolang.try-memory-update-catch$t1$t0$t1$a1" name="try-memory-update-catch$t1$t0$t1$a1" parent="try-memory-update-catch" pos="8"> 
//   <o line="110" loc="Φ.org.eolang.try-memory-update-catch$t1$t0$t1$a1.e" name="e" pos="9"/>
//   <o base="e" line="111" loc="Φ.org.eolang.try-memory-update-catch$t1$t0$t1$a1.φ" name="@" pos="10" ref="110"/>
// </o>
@XmirObject(name = "ω1t1$t0$t1$a1", oname = "ω1t1$t0$t1$a1", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/try-tests.eo")
public final class EOω1t1$EOt0$EOt1$EOa1 extends PhDefault {
  public EOω1t1$EOt0$EOt1$EOa1(final Phi sigma) {
    super(sigma);
    this.add("e", new AtFree(/* default */));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new PhMethod(rho, "e");
        ret = new PhLocated(ret, 111, 10, "Φ.org.eolang.try-memory-update-catch$t1$t0$t1$a1.φ");
      return ret;
    })));
  }
}
}
