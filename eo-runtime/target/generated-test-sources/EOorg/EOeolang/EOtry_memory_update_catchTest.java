
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT e24f541 2023-09-12T11:41:32) on 2023-10-03T10:45:38.539230Z; your changes will be discarded on the next build */
package EOorg.EOeolang;

import org.eolang.*;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

// <o abstract="" line="96" loc="Φ.org.eolang.try-memory-update-catch" name="try-memory-update-catch" original-name="try-memory-update-catch" pos="0"> 
//   <o base="org.eolang.memory" line="97" loc="Φ.org.eolang.try-memory-update-catch.m" name="m" pos="2"> 
//     <o base="org.eolang.int" data="int" line="97" loc="Φ.org.eolang.try-memory-update-catch.m.α0" pos="9">0</o>
//   </o>
//   <o base=".eq" line="98" loc="Φ.org.eolang.try-memory-update-catch.φ" name="@" pos="2"> 
//     <o base="org.eolang.seq" line="99" loc="Φ.org.eolang.try-memory-update-catch.φ.ρ" pos="4"> 
//       <o base=".write" line="100" loc="Φ.org.eolang.try-memory-update-catch.φ.ρ.α0" pos="7"> 
//         <o base="m" line="100" loc="Φ.org.eolang.try-memory-update-catch.φ.ρ.α0.ρ" pos="6" ref="97"/>
//         <o base="org.eolang.int" data="int" line="100" loc="Φ.org.eolang.try-memory-update-catch.φ.ρ.α0.α0" pos="14">1</o>
//       </o>
//       <o base="org.eolang.try" line="101" loc="Φ.org.eolang.try-memory-update-catch.φ.ρ.α1" pos="6"> 
//         <o base="try-memory-update-catch$t1$t0$t1$a0" cut="96" line="102" loc="Φ.org.eolang.try-memory-update-catch.φ.ρ.α1.α0" pos="8" ref="102"> 
//           <o as="m" base="m" level="1" loc="Φ.org.eolang.try-memory-update-catch.φ.ρ.α1.α0.α0" ref="97"/>
//         </o>
//         <o base="try-memory-update-catch$t1$t0$t1$a1" cut="108" line="106" loc="Φ.org.eolang.try-memory-update-catch.φ.ρ.α1.α1" pos="8" ref="106"/>
//         <o base="org.eolang.nop" line="108" loc="Φ.org.eolang.try-memory-update-catch.φ.ρ.α1.α2" pos="8"/>
//       </o>
//       <o base="m" line="109" loc="Φ.org.eolang.try-memory-update-catch.φ.ρ.α2" pos="6" ref="97"/>
//     </o>
//     <o base="org.eolang.int" data="int" line="110" loc="Φ.org.eolang.try-memory-update-catch.φ.α0" pos="4">1</o>
//   </o>
// </o>
@XmirObject(name = "try-memory-update-catchTest", oname = "try-memory-update-catch", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/try-tests.eo")
public final class EOtry_memory_update_catchTest extends PhDefault {
    
  public EOtry_memory_update_catchTest() {
    this.add("m", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("memory").get();
        ret = new PhLocated(ret, 97, 2, "Φ.org.eolang.try-memory-update-catch.m");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 97, 9, "Φ.org.eolang.try-memory-update-catch.m.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>(0L));
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = Phi.Φ.attr("org").get().attr("eolang").get().attr("seq").get();
        ret_base = new PhLocated(ret_base, 99, 4, "Φ.org.eolang.try-memory-update-catch.φ.ρ");
      ret_base = new PhCopy(ret_base);
        Phi ret_base_1_base = new PhMethod(rho, "m");
          ret_base_1_base = new PhLocated(ret_base_1_base, 100, 6, "Φ.org.eolang.try-memory-update-catch.φ.ρ.α0.ρ");
        Phi ret_base_1 = new PhMethod(ret_base_1_base, "write");
          ret_base_1 = new PhLocated(ret_base_1, 100, 7, "Φ.org.eolang.try-memory-update-catch.φ.ρ.α0");
        ret_base_1 = new PhCopy(ret_base_1);
          Phi ret_base_1_1 = new EOorg.EOeolang.EOint(Phi.Φ);
            ret_base_1_1 = new PhLocated(ret_base_1_1, 100, 14, "Φ.org.eolang.try-memory-update-catch.φ.ρ.α0.α0");
            ret_base_1_1 = new PhWith(ret_base_1_1, "Δ", new Data.Value<>(1L));
          ret_base_1 = new PhWith(ret_base_1, 0, ret_base_1_1);
        Phi ret_base_2 = Phi.Φ.attr("org").get().attr("eolang").get().attr("try").get();
          ret_base_2 = new PhLocated(ret_base_2, 101, 6, "Φ.org.eolang.try-memory-update-catch.φ.ρ.α1");
        ret_base_2 = new PhCopy(ret_base_2);
          Phi ret_base_2_1 = new EOω1t1$EOt0$EOt1$EOa0(rho);
            ret_base_2_1 = new PhLocated(ret_base_2_1, 102, 8, "Φ.org.eolang.try-memory-update-catch.φ.ρ.α1.α0");
          Phi ret_base_2_2 = new EOω1t1$EOt0$EOt1$EOa1(rho);
            ret_base_2_2 = new PhLocated(ret_base_2_2, 106, 8, "Φ.org.eolang.try-memory-update-catch.φ.ρ.α1.α1");
          Phi ret_base_2_3 = Phi.Φ.attr("org").get().attr("eolang").get().attr("nop").get();
            ret_base_2_3 = new PhLocated(ret_base_2_3, 108, 8, "Φ.org.eolang.try-memory-update-catch.φ.ρ.α1.α2");
          ret_base_2 = new PhWith(ret_base_2, 0, ret_base_2_1);
          ret_base_2 = new PhWith(ret_base_2, 1, ret_base_2_2);
          ret_base_2 = new PhWith(ret_base_2, 2, ret_base_2_3);
        Phi ret_base_3 = new PhMethod(rho, "m");
          ret_base_3 = new PhLocated(ret_base_3, 109, 6, "Φ.org.eolang.try-memory-update-catch.φ.ρ.α2");
        ret_base = new PhWith(ret_base, 0, ret_base_1);
        ret_base = new PhWith(ret_base, 1, ret_base_2);
        ret_base = new PhWith(ret_base, 2, ret_base_3);
      Phi ret = new PhMethod(ret_base, "eq");
        ret = new PhLocated(ret, 98, 2, "Φ.org.eolang.try-memory-update-catch.φ");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 110, 4, "Φ.org.eolang.try-memory-update-catch.φ.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>(1L));
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
  }

  @Test
  public void works() throws java.lang.Exception {
    Object obj = new Dataized(new EOtry_memory_update_catchTest()).take();
    if (obj instanceof String) {
      Assertions.fail(obj.toString());
    } else {
      Assertions.assertTrue((Boolean) obj);
    }
  }

// <o abstract="" ancestors="1" line="102" loc="Φ.org.eolang.try-memory-update-catch$t1$t0$t1$a0" name="try-memory-update-catch$t1$t0$t1$a0" parent="try-memory-update-catch" pos="8"> 
//   <o base="org.eolang.seq" line="103" loc="Φ.org.eolang.try-memory-update-catch$t1$t0$t1$a0.φ" name="@" pos="10"> 
//     <o base=".div" line="104" loc="Φ.org.eolang.try-memory-update-catch$t1$t0$t1$a0.φ.α0" pos="13"> 
//       <o base="org.eolang.int" data="int" line="104" loc="Φ.org.eolang.try-memory-update-catch$t1$t0$t1$a0.φ.α0.ρ" pos="12">5</o>
//       <o base="org.eolang.int" data="int" line="104" loc="Φ.org.eolang.try-memory-update-catch$t1$t0$t1$a0.φ.α0.α0" pos="18">0</o>
//     </o>
//     <o base=".write" line="105" loc="Φ.org.eolang.try-memory-update-catch$t1$t0$t1$a0.φ.α1" pos="13"> 
//       <o base="m" line="105" loc="Φ.org.eolang.try-memory-update-catch$t1$t0$t1$a0.φ.α1.ρ" pos="12" ref="102.97.469"/>
//       <o base="try-memory-update-catch$t1$t0$t1$a0$t0$t1$generated-scope-a0b15f86-9b18-4c54-a738-06548a16e817" cut="100" line="105" loc="Φ.org.eolang.try-memory-update-catch$t1$t0$t1$a0.φ.α1.generated-scope-a0b15f86-9b18-4c54-a738-06548a16e817" name="generated-scope-a0b15f86-9b18-4c54-a738-06548a16e817" pos="22" ref="105"> 
//         <o as="m" base="m" level="2" loc="Φ.org.eolang.try-memory-update-catch$t1$t0$t1$a0.φ.α1.generated-scope-a0b15f86-9b18-4c54-a738-06548a16e817.α0" ref="102.97.469"/>
//       </o>
//     </o>
//   </o>
//   <o level="1" line="102.97.469" loc="Φ.org.eolang.try-memory-update-catch$t1$t0$t1$a0.m" name="m"/>
// </o>
@XmirObject(name = "ω1t1$t0$t1$a0", oname = "ω1t1$t0$t1$a0", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/try-tests.eo")
public final class EOω1t1$EOt0$EOt1$EOa0 extends PhDefault {
    
  public EOω1t1$EOt0$EOt1$EOa0(final Phi sigma) {
    super(sigma);
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("seq").get();
        ret = new PhLocated(ret, 103, 10, "Φ.org.eolang.try-memory-update-catch$t1$t0$t1$a0.φ");
      ret = new PhCopy(ret);
        Phi ret_1_base = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_1_base = new PhLocated(ret_1_base, 104, 12, "Φ.org.eolang.try-memory-update-catch$t1$t0$t1$a0.φ.α0.ρ");
          ret_1_base = new PhWith(ret_1_base, "Δ", new Data.Value<>(5L));
        Phi ret_1 = new PhMethod(ret_1_base, "div");
          ret_1 = new PhLocated(ret_1, 104, 13, "Φ.org.eolang.try-memory-update-catch$t1$t0$t1$a0.φ.α0");
        ret_1 = new PhCopy(ret_1);
          Phi ret_1_1 = new EOorg.EOeolang.EOint(Phi.Φ);
            ret_1_1 = new PhLocated(ret_1_1, 104, 18, "Φ.org.eolang.try-memory-update-catch$t1$t0$t1$a0.φ.α0.α0");
            ret_1_1 = new PhWith(ret_1_1, "Δ", new Data.Value<>(0L));
          ret_1 = new PhWith(ret_1, 0, ret_1_1);
        Phi ret_2_base = new PhMethod(new PhMethod(rho, "σ"), "m");
          ret_2_base = new PhLocated(ret_2_base, 105, 12, "Φ.org.eolang.try-memory-update-catch$t1$t0$t1$a0.φ.α1.ρ");
        Phi ret_2 = new PhMethod(ret_2_base, "write");
          ret_2 = new PhLocated(ret_2, 105, 13, "Φ.org.eolang.try-memory-update-catch$t1$t0$t1$a0.φ.α1");
        ret_2 = new PhCopy(ret_2);
          Phi ret_2_1 = new EOω2t0$EOt1$EOgenerated_scope_a0b15f86_9b18_4c54_a738_06548a16e817(rho);
            ret_2_1 = new PhLocated(ret_2_1, 105, 22, "Φ.org.eolang.try-memory-update-catch$t1$t0$t1$a0.φ.α1.generated-scope-a0b15f86-9b18-4c54-a738-06548a16e817");
          ret_2 = new PhWith(ret_2, 0, ret_2_1);
        ret = new PhWith(ret, 0, ret_1);
        ret = new PhWith(ret, 1, ret_2);
      return ret;
    })));
  }

// <o abstract="" ancestors="2" line="105" loc="Φ.org.eolang.try-memory-update-catch$t1$t0$t1$a0$t0$t1$generated-scope-a0b15f86-9b18-4c54-a738-06548a16e817" name="try-memory-update-catch$t1$t0$t1$a0$t0$t1$generated-scope-a0b15f86-9b18-4c54-a738-06548a16e817" original-name="generated-scope-a0b15f86-9b18-4c54-a738-06548a16e817" parent="try-memory-update-catch$t1$t0$t1$a0" pos="22"> 
//   <o base=".plus" line="105" loc="Φ.org.eolang.try-memory-update-catch$t1$t0$t1$a0$t0$t1$generated-scope-a0b15f86-9b18-4c54-a738-06548a16e817.org.eolang.scope-a0b15f86-9b18-4c54-a738-06548a16e817" name="org.eolang.scope-a0b15f86-9b18-4c54-a738-06548a16e817" pos="22" scope="scope-a0b15f86-9b18-4c54-a738-06548a16e817"> 
//     <o base="m" line="105" loc="Φ.org.eolang.try-memory-update-catch$t1$t0$t1$a0$t0$t1$generated-scope-a0b15f86-9b18-4c54-a738-06548a16e817.org.eolang.scope-a0b15f86-9b18-4c54-a738-06548a16e817.ρ" pos="21" ref="105.97.470" scope="scope-a0b15f86-9b18-4c54-a738-06548a16e817"/>
//     <o base="org.eolang.int" data="int" line="105" loc="Φ.org.eolang.try-memory-update-catch$t1$t0$t1$a0$t0$t1$generated-scope-a0b15f86-9b18-4c54-a738-06548a16e817.org.eolang.scope-a0b15f86-9b18-4c54-a738-06548a16e817.α0" pos="28" scope="scope-a0b15f86-9b18-4c54-a738-06548a16e817">1</o>
//   </o>
//   <o base="org.eolang.scope-a0b15f86-9b18-4c54-a738-06548a16e817" line="105" loc="Φ.org.eolang.try-memory-update-catch$t1$t0$t1$a0$t0$t1$generated-scope-a0b15f86-9b18-4c54-a738-06548a16e817.φ" name="@" pos="22" ref="105"/>
//   <o level="2" line="105.97.470" loc="Φ.org.eolang.try-memory-update-catch$t1$t0$t1$a0$t0$t1$generated-scope-a0b15f86-9b18-4c54-a738-06548a16e817.m" name="m"/>
// </o>
@XmirObject(name = "ω2t0$t1$generated-scope-a0b15f86-9b18-4c54-a738-06548a16e817", oname = "generated-scope-a0b15f86-9b18-4c54-a738-06548a16e817", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/try-tests.eo")
public final class EOω2t0$EOt1$EOgenerated_scope_a0b15f86_9b18_4c54_a738_06548a16e817 extends PhDefault {
    
  public EOω2t0$EOt1$EOgenerated_scope_a0b15f86_9b18_4c54_a738_06548a16e817(final Phi sigma) {
    super(sigma);
    this.add("org.eolang.scope-a0b15f86-9b18-4c54-a738-06548a16e817", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = new PhMethod(new PhMethod(new PhMethod(rho, "σ"), "σ"), "m");
        ret_base = new PhLocated(ret_base, 105, 21, "Φ.org.eolang.try-memory-update-catch$t1$t0$t1$a0$t0$t1$generated-scope-a0b15f86-9b18-4c54-a738-06548a16e817.org.eolang.scope-a0b15f86-9b18-4c54-a738-06548a16e817.ρ");
      Phi ret = new PhMethod(ret_base, "plus");
        ret = new PhLocated(ret, 105, 22, "Φ.org.eolang.try-memory-update-catch$t1$t0$t1$a0$t0$t1$generated-scope-a0b15f86-9b18-4c54-a738-06548a16e817.org.eolang.scope-a0b15f86-9b18-4c54-a738-06548a16e817");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 105, 28, "Φ.org.eolang.try-memory-update-catch$t1$t0$t1$a0$t0$t1$generated-scope-a0b15f86-9b18-4c54-a738-06548a16e817.org.eolang.scope-a0b15f86-9b18-4c54-a738-06548a16e817.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>(1L));
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new PhMethod(rho, "org.eolang.scope-a0b15f86-9b18-4c54-a738-06548a16e817");
        ret = new PhLocated(ret, 105, 22, "Φ.org.eolang.try-memory-update-catch$t1$t0$t1$a0$t0$t1$generated-scope-a0b15f86-9b18-4c54-a738-06548a16e817.φ");
      return ret;
    })));
  }
}
}

// <o abstract="" ancestors="1" line="106" loc="Φ.org.eolang.try-memory-update-catch$t1$t0$t1$a1" name="try-memory-update-catch$t1$t0$t1$a1" parent="try-memory-update-catch" pos="8"> 
//   <o line="106" loc="Φ.org.eolang.try-memory-update-catch$t1$t0$t1$a1.e" name="e" pos="9"/>
//   <o base="e" line="107" loc="Φ.org.eolang.try-memory-update-catch$t1$t0$t1$a1.φ" name="@" pos="10" ref="106"/>
// </o>
@XmirObject(name = "ω1t1$t0$t1$a1", oname = "ω1t1$t0$t1$a1", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/try-tests.eo")
public final class EOω1t1$EOt0$EOt1$EOa1 extends PhDefault {
    
  public EOω1t1$EOt0$EOt1$EOa1(final Phi sigma) {
    super(sigma);
    this.add("e", new AtFree(/* default */));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new PhMethod(rho, "e");
        ret = new PhLocated(ret, 107, 10, "Φ.org.eolang.try-memory-update-catch$t1$t0$t1$a1.φ");
      return ret;
    })));
  }
}
}
