
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT b5a4c9a 2023-08-17T12:29:38) on 2023-08-18T14:42:30.920527Z; your changes will be discarded on the next build */
package EOorg.EOeolang;

import org.eolang.*;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

// <o abstract="" line="440" loc="Φ.org.eolang.correctly-handles-same-name-attrs-simplified" name="correctly-handles-same-name-attrs-simplified" original-name="correctly-handles-same-name-attrs-simplified" pos="0"> 
//   <o base="correctly-handles-same-name-attrs-simplified$calc" cut="703" line="441" loc="Φ.org.eolang.correctly-handles-same-name-attrs-simplified.calc" name="calc" pos="2" ref="441"/>
//   <o base="org.eolang.hamcrest.assert-that" line="445" loc="Φ.org.eolang.correctly-handles-same-name-attrs-simplified.φ" name="@" pos="2"> 
//     <o base="calc" line="446" loc="Φ.org.eolang.correctly-handles-same-name-attrs-simplified.φ.α0" pos="4" ref="441"> 
//       <o base="correctly-handles-same-name-attrs-simplified$t1$t0$a0" cut="709" line="447" loc="Φ.org.eolang.correctly-handles-same-name-attrs-simplified.φ.α0.α0" pos="6" ref="447"/>
//       <o base="correctly-handles-same-name-attrs-simplified$t1$t0$a1" cut="715" line="451" loc="Φ.org.eolang.correctly-handles-same-name-attrs-simplified.φ.α0.α1" pos="6" ref="451"/>
//     </o>
//     <o base=".equal-to" line="455" loc="Φ.org.eolang.correctly-handles-same-name-attrs-simplified.φ.α1" pos="5"> 
//       <o base="$" line="455" loc="Φ.org.eolang.correctly-handles-same-name-attrs-simplified.φ.α1.ρ" pos="4"/>
//       <o base="org.eolang.int" data="int" line="455" loc="Φ.org.eolang.correctly-handles-same-name-attrs-simplified.φ.α1.α0" pos="15">3</o>
//     </o>
//   </o>
// </o>
@XmirObject(name = "correctly-handles-same-name-attrs-simplifiedTest", oname = "correctly-handles-same-name-attrs-simplified", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/runtime-tests.eo")
public final class EOcorrectly_handles_same_name_attrs_simplifiedTest extends PhDefault {
  public EOcorrectly_handles_same_name_attrs_simplifiedTest() {
    this.add("calc", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new EOω1calc(rho);
        ret = new PhLocated(ret, 441, 2, "Φ.org.eolang.correctly-handles-same-name-attrs-simplified.calc");
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("hamcrest").get().attr("assert-that").get();
        ret = new PhLocated(ret, 445, 2, "Φ.org.eolang.correctly-handles-same-name-attrs-simplified.φ");
      ret = new PhCopy(ret);
        Phi ret_1 = new PhMethod(rho, "calc");
          ret_1 = new PhLocated(ret_1, 446, 4, "Φ.org.eolang.correctly-handles-same-name-attrs-simplified.φ.α0");
        ret_1 = new PhCopy(ret_1);
          Phi ret_1_1 = new EOω1t1$EOt0$EOa0(rho);
            ret_1_1 = new PhLocated(ret_1_1, 447, 6, "Φ.org.eolang.correctly-handles-same-name-attrs-simplified.φ.α0.α0");
          Phi ret_1_2 = new EOω1t1$EOt0$EOa1(rho);
            ret_1_2 = new PhLocated(ret_1_2, 451, 6, "Φ.org.eolang.correctly-handles-same-name-attrs-simplified.φ.α0.α1");
          ret_1 = new PhWith(ret_1, 0, ret_1_1);
          ret_1 = new PhWith(ret_1, 1, ret_1_2);
        Phi ret_2_base = rho;
          ret_2_base = new PhLocated(ret_2_base, 455, 4, "Φ.org.eolang.correctly-handles-same-name-attrs-simplified.φ.α1.ρ");
        Phi ret_2 = new PhMethod(ret_2_base, "equal-to");
          ret_2 = new PhLocated(ret_2, 455, 5, "Φ.org.eolang.correctly-handles-same-name-attrs-simplified.φ.α1");
        ret_2 = new PhCopy(ret_2);
          Phi ret_2_1 = new EOorg.EOeolang.EOint(Phi.Φ);
            ret_2_1 = new PhLocated(ret_2_1, 455, 15, "Φ.org.eolang.correctly-handles-same-name-attrs-simplified.φ.α1.α0");
            ret_2_1 = new PhWith(ret_2_1, "Δ", new Data.Value<>(3L));
          ret_2 = new PhWith(ret_2, 0, ret_2_1);
        ret = new PhWith(ret, 0, ret_1);
        ret = new PhWith(ret, 1, ret_2);
      return ret;
    })));
  }

  @Test
  public void works() throws java.lang.Exception {
    Object obj = new Dataized(new EOcorrectly_handles_same_name_attrs_simplifiedTest()).take();
    if (obj instanceof String) {
      Assertions.fail(obj.toString());
    } else {
      Assertions.assertTrue((Boolean) obj);
    }
  }

// <o abstract="" ancestors="1" line="441" loc="Φ.org.eolang.correctly-handles-same-name-attrs-simplified$calc" name="correctly-handles-same-name-attrs-simplified$calc" original-name="calc" parent="correctly-handles-same-name-attrs-simplified" pos="2"> 
//   <o line="441" loc="Φ.org.eolang.correctly-handles-same-name-attrs-simplified$calc.first" name="first" pos="3"/>
//   <o line="441" loc="Φ.org.eolang.correctly-handles-same-name-attrs-simplified$calc.second" name="second" pos="9"/>
//   <o base=".plus" line="442" loc="Φ.org.eolang.correctly-handles-same-name-attrs-simplified$calc.φ" name="@" pos="4"> 
//     <o base="first" line="443" loc="Φ.org.eolang.correctly-handles-same-name-attrs-simplified$calc.φ.ρ" pos="6" ref="441"/>
//     <o base="second" line="444" loc="Φ.org.eolang.correctly-handles-same-name-attrs-simplified$calc.φ.α0" pos="6" ref="441"/>
//   </o>
// </o>
@XmirObject(name = "ω1calc", oname = "calc", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/runtime-tests.eo")
public final class EOω1calc extends PhDefault {
  public EOω1calc(final Phi sigma) {
    super(sigma);
    this.add("first", new AtFree(/* default */));
    this.add("second", new AtFree(/* default */));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = new PhMethod(rho, "first");
        ret_base = new PhLocated(ret_base, 443, 6, "Φ.org.eolang.correctly-handles-same-name-attrs-simplified$calc.φ.ρ");
      Phi ret = new PhMethod(ret_base, "plus");
        ret = new PhLocated(ret, 442, 4, "Φ.org.eolang.correctly-handles-same-name-attrs-simplified$calc.φ");
      ret = new PhCopy(ret);
        Phi ret_1 = new PhMethod(rho, "second");
          ret_1 = new PhLocated(ret_1, 444, 6, "Φ.org.eolang.correctly-handles-same-name-attrs-simplified$calc.φ.α0");
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
  }
}

// <o abstract="" ancestors="1" line="447" loc="Φ.org.eolang.correctly-handles-same-name-attrs-simplified$t1$t0$a0" name="correctly-handles-same-name-attrs-simplified$t1$t0$a0" parent="correctly-handles-same-name-attrs-simplified" pos="6"> 
//   <o base="build" line="448" loc="Φ.org.eolang.correctly-handles-same-name-attrs-simplified$t1$t0$a0.φ" name="@" pos="8" ref="449"> 
//     <o base="org.eolang.int" data="int" line="448" loc="Φ.org.eolang.correctly-handles-same-name-attrs-simplified$t1$t0$a0.φ.α0" pos="14">1</o>
//   </o>
//   <o base="correctly-handles-same-name-attrs-simplified$t1$t0$a0$build" cut="711" line="449" loc="Φ.org.eolang.correctly-handles-same-name-attrs-simplified$t1$t0$a0.build" name="build" pos="8" ref="449"/>
// </o>
@XmirObject(name = "ω1t1$t0$a0", oname = "ω1t1$t0$a0", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/runtime-tests.eo")
public final class EOω1t1$EOt0$EOa0 extends PhDefault {
  public EOω1t1$EOt0$EOa0(final Phi sigma) {
    super(sigma);
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new PhMethod(rho, "build");
        ret = new PhLocated(ret, 448, 8, "Φ.org.eolang.correctly-handles-same-name-attrs-simplified$t1$t0$a0.φ");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 448, 14, "Φ.org.eolang.correctly-handles-same-name-attrs-simplified$t1$t0$a0.φ.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>(1L));
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
    this.add("build", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new EOω2build(rho);
        ret = new PhLocated(ret, 449, 8, "Φ.org.eolang.correctly-handles-same-name-attrs-simplified$t1$t0$a0.build");
      return ret;
    })));
  }

// <o abstract="" ancestors="2" line="449" loc="Φ.org.eolang.correctly-handles-same-name-attrs-simplified$t1$t0$a0$build" name="correctly-handles-same-name-attrs-simplified$t1$t0$a0$build" original-name="build" parent="correctly-handles-same-name-attrs-simplified$t1$t0$a0" pos="8"> 
//   <o line="449" loc="Φ.org.eolang.correctly-handles-same-name-attrs-simplified$t1$t0$a0$build.x" name="x" pos="9"/>
//   <o base="x" line="450" loc="Φ.org.eolang.correctly-handles-same-name-attrs-simplified$t1$t0$a0$build.φ" name="@" pos="10" ref="449"/>
// </o>
@XmirObject(name = "ω2build", oname = "build", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/runtime-tests.eo")
public final class EOω2build extends PhDefault {
  public EOω2build(final Phi sigma) {
    super(sigma);
    this.add("x", new AtFree(/* default */));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new PhMethod(rho, "x");
        ret = new PhLocated(ret, 450, 10, "Φ.org.eolang.correctly-handles-same-name-attrs-simplified$t1$t0$a0$build.φ");
      return ret;
    })));
  }
}
}

// <o abstract="" ancestors="1" line="451" loc="Φ.org.eolang.correctly-handles-same-name-attrs-simplified$t1$t0$a1" name="correctly-handles-same-name-attrs-simplified$t1$t0$a1" parent="correctly-handles-same-name-attrs-simplified" pos="6"> 
//   <o base="build" line="452" loc="Φ.org.eolang.correctly-handles-same-name-attrs-simplified$t1$t0$a1.φ" name="@" pos="8" ref="453"> 
//     <o base="org.eolang.int" data="int" line="452" loc="Φ.org.eolang.correctly-handles-same-name-attrs-simplified$t1$t0$a1.φ.α0" pos="14">2</o>
//   </o>
//   <o base="correctly-handles-same-name-attrs-simplified$t1$t0$a1$build" cut="717" line="453" loc="Φ.org.eolang.correctly-handles-same-name-attrs-simplified$t1$t0$a1.build" name="build" pos="8" ref="453"/>
// </o>
@XmirObject(name = "ω1t1$t0$a1", oname = "ω1t1$t0$a1", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/runtime-tests.eo")
public final class EOω1t1$EOt0$EOa1 extends PhDefault {
  public EOω1t1$EOt0$EOa1(final Phi sigma) {
    super(sigma);
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new PhMethod(rho, "build");
        ret = new PhLocated(ret, 452, 8, "Φ.org.eolang.correctly-handles-same-name-attrs-simplified$t1$t0$a1.φ");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 452, 14, "Φ.org.eolang.correctly-handles-same-name-attrs-simplified$t1$t0$a1.φ.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>(2L));
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
    this.add("build", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new EOω2build(rho);
        ret = new PhLocated(ret, 453, 8, "Φ.org.eolang.correctly-handles-same-name-attrs-simplified$t1$t0$a1.build");
      return ret;
    })));
  }

// <o abstract="" ancestors="2" line="453" loc="Φ.org.eolang.correctly-handles-same-name-attrs-simplified$t1$t0$a1$build" name="correctly-handles-same-name-attrs-simplified$t1$t0$a1$build" original-name="build" parent="correctly-handles-same-name-attrs-simplified$t1$t0$a1" pos="8"> 
//   <o line="453" loc="Φ.org.eolang.correctly-handles-same-name-attrs-simplified$t1$t0$a1$build.y" name="y" pos="9"/>
//   <o base="y" line="454" loc="Φ.org.eolang.correctly-handles-same-name-attrs-simplified$t1$t0$a1$build.φ" name="@" pos="10" ref="453"/>
// </o>
@XmirObject(name = "ω2build", oname = "build", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/runtime-tests.eo")
public final class EOω2build extends PhDefault {
  public EOω2build(final Phi sigma) {
    super(sigma);
    this.add("y", new AtFree(/* default */));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new PhMethod(rho, "y");
        ret = new PhLocated(ret, 454, 10, "Φ.org.eolang.correctly-handles-same-name-attrs-simplified$t1$t0$a1$build.φ");
      return ret;
    })));
  }
}
}
}
