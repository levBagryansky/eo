
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT e24f541 2023-09-12T11:41:32) on 2023-10-03T10:45:38.539230Z; your changes will be discarded on the next build */
package EOorg.EOeolang;

import org.eolang.*;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

// <o abstract="" line="29" loc="Φ.org.eolang.writes-into-cage" name="writes-into-cage" original-name="writes-into-cage" pos="0"> 
//   <o base="writes-into-cage$a" cut="0" line="30" loc="Φ.org.eolang.writes-into-cage.a" name="a" pos="2" ref="30"/>
//   <o base="org.eolang.cage" line="31" loc="Φ.org.eolang.writes-into-cage.x" name="x" pos="2"> 
//     <o base="a" line="31" loc="Φ.org.eolang.writes-into-cage.x.α0" pos="7" ref="30"/>
//   </o>
//   <o base=".eq" line="32" loc="Φ.org.eolang.writes-into-cage.φ" name="@" pos="2"> 
//     <o base="org.eolang.seq" line="33" loc="Φ.org.eolang.writes-into-cage.φ.ρ" pos="4"> 
//       <o base=".write" line="34" loc="Φ.org.eolang.writes-into-cage.φ.ρ.α0" pos="7"> 
//         <o base="x" line="34" loc="Φ.org.eolang.writes-into-cage.φ.ρ.α0.ρ" pos="6" ref="31"/>
//         <o base="a" line="35" loc="Φ.org.eolang.writes-into-cage.φ.ρ.α0.α0" pos="8" ref="30"> 
//           <o base="org.eolang.int" data="int" line="35" loc="Φ.org.eolang.writes-into-cage.φ.ρ.α0.α0.α0" pos="10">7</o>
//         </o>
//       </o>
//       <o base=".z" line="36" loc="Φ.org.eolang.writes-into-cage.φ.ρ.α1" pos="7"> 
//         <o base="x" line="36" loc="Φ.org.eolang.writes-into-cage.φ.ρ.α1.ρ" pos="6" ref="31"/>
//       </o>
//     </o>
//     <o base="org.eolang.int" data="int" line="37" loc="Φ.org.eolang.writes-into-cage.φ.α0" pos="4">7</o>
//   </o>
// </o>
@XmirObject(name = "writes-into-cageTest", oname = "writes-into-cage", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/cage-tests.eo")
public final class EOwrites_into_cageTest extends PhDefault {
    
  public EOwrites_into_cageTest() {
    this.add("a", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new EOω1a(rho);
        ret = new PhLocated(ret, 30, 2, "Φ.org.eolang.writes-into-cage.a");
      return ret;
    })));
    this.add("x", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("cage").get();
        ret = new PhLocated(ret, 31, 2, "Φ.org.eolang.writes-into-cage.x");
      ret = new PhCopy(ret);
        Phi ret_1 = new PhMethod(rho, "a");
          ret_1 = new PhLocated(ret_1, 31, 7, "Φ.org.eolang.writes-into-cage.x.α0");
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = Phi.Φ.attr("org").get().attr("eolang").get().attr("seq").get();
        ret_base = new PhLocated(ret_base, 33, 4, "Φ.org.eolang.writes-into-cage.φ.ρ");
      ret_base = new PhCopy(ret_base);
        Phi ret_base_1_base = new PhMethod(rho, "x");
          ret_base_1_base = new PhLocated(ret_base_1_base, 34, 6, "Φ.org.eolang.writes-into-cage.φ.ρ.α0.ρ");
        Phi ret_base_1 = new PhMethod(ret_base_1_base, "write");
          ret_base_1 = new PhLocated(ret_base_1, 34, 7, "Φ.org.eolang.writes-into-cage.φ.ρ.α0");
        ret_base_1 = new PhCopy(ret_base_1);
          Phi ret_base_1_1 = new PhMethod(rho, "a");
            ret_base_1_1 = new PhLocated(ret_base_1_1, 35, 8, "Φ.org.eolang.writes-into-cage.φ.ρ.α0.α0");
          ret_base_1_1 = new PhCopy(ret_base_1_1);
            Phi ret_base_1_1_1 = new EOorg.EOeolang.EOint(Phi.Φ);
              ret_base_1_1_1 = new PhLocated(ret_base_1_1_1, 35, 10, "Φ.org.eolang.writes-into-cage.φ.ρ.α0.α0.α0");
              ret_base_1_1_1 = new PhWith(ret_base_1_1_1, "Δ", new Data.Value<>(7L));
            ret_base_1_1 = new PhWith(ret_base_1_1, 0, ret_base_1_1_1);
          ret_base_1 = new PhWith(ret_base_1, 0, ret_base_1_1);
        Phi ret_base_2_base = new PhMethod(rho, "x");
          ret_base_2_base = new PhLocated(ret_base_2_base, 36, 6, "Φ.org.eolang.writes-into-cage.φ.ρ.α1.ρ");
        Phi ret_base_2 = new PhMethod(ret_base_2_base, "z");
          ret_base_2 = new PhLocated(ret_base_2, 36, 7, "Φ.org.eolang.writes-into-cage.φ.ρ.α1");
        ret_base = new PhWith(ret_base, 0, ret_base_1);
        ret_base = new PhWith(ret_base, 1, ret_base_2);
      Phi ret = new PhMethod(ret_base, "eq");
        ret = new PhLocated(ret, 32, 2, "Φ.org.eolang.writes-into-cage.φ");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 37, 4, "Φ.org.eolang.writes-into-cage.φ.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>(7L));
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
  }

  @Test
  public void works() throws java.lang.Exception {
    Object obj = new Dataized(new EOwrites_into_cageTest()).take();
    if (obj instanceof String) {
      Assertions.fail(obj.toString());
    } else {
      Assertions.assertTrue((Boolean) obj);
    }
  }

// <o abstract="" ancestors="1" line="30" loc="Φ.org.eolang.writes-into-cage$a" name="writes-into-cage$a" original-name="a" parent="writes-into-cage" pos="2"> 
//   <o line="30" loc="Φ.org.eolang.writes-into-cage$a.z" name="z" pos="3"/>
// </o>
@XmirObject(name = "ω1a", oname = "a", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/cage-tests.eo")
public final class EOω1a extends PhDefault {
    
  public EOω1a(final Phi sigma) {
    super(sigma);
    this.add("z", new AtFree(/* default */));
  }
}
}
