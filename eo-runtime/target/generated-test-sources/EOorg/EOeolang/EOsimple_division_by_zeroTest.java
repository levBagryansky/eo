
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT b5a4c9a 2023-08-17T12:29:38) on 2023-08-18T14:42:30.920527Z; your changes will be discarded on the next build */
package EOorg.EOeolang;

import org.eolang.*;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

// <o abstract="" line="31" loc="Φ.org.eolang.simple-division-by-zero" name="simple-division-by-zero" original-name="simple-division-by-zero" pos="0"> 
//   <o base="org.eolang.try" line="32" loc="Φ.org.eolang.simple-division-by-zero.φ" name="@" pos="2"> 
//     <o base="simple-division-by-zero$t0$a0" cut="0" line="33" loc="Φ.org.eolang.simple-division-by-zero.φ.α0" pos="4" ref="33"/>
//     <o base="simple-division-by-zero$t0$a1" cut="4" line="35" loc="Φ.org.eolang.simple-division-by-zero.φ.α1" pos="4" ref="35"/>
//     <o base="simple-division-by-zero$t0$a2" cut="12" line="38" loc="Φ.org.eolang.simple-division-by-zero.φ.α2" pos="4" ref="38"/>
//   </o>
// </o>
@XmirObject(name = "simple-division-by-zeroTest", oname = "simple-division-by-zero", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/try-tests.eo")
public final class EOsimple_division_by_zeroTest extends PhDefault {
  public EOsimple_division_by_zeroTest() {
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("try").get();
        ret = new PhLocated(ret, 32, 2, "Φ.org.eolang.simple-division-by-zero.φ");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOω1t0$EOa0(rho);
          ret_1 = new PhLocated(ret_1, 33, 4, "Φ.org.eolang.simple-division-by-zero.φ.α0");
        Phi ret_2 = new EOω1t0$EOa1(rho);
          ret_2 = new PhLocated(ret_2, 35, 4, "Φ.org.eolang.simple-division-by-zero.φ.α1");
        Phi ret_3 = new EOω1t0$EOa2(rho);
          ret_3 = new PhLocated(ret_3, 38, 4, "Φ.org.eolang.simple-division-by-zero.φ.α2");
        ret = new PhWith(ret, 0, ret_1);
        ret = new PhWith(ret, 1, ret_2);
        ret = new PhWith(ret, 2, ret_3);
      return ret;
    })));
  }

  @Test
  public void works() throws java.lang.Exception {
    Object obj = new Dataized(new EOsimple_division_by_zeroTest()).take();
    if (obj instanceof String) {
      Assertions.fail(obj.toString());
    } else {
      Assertions.assertTrue((Boolean) obj);
    }
  }

// <o abstract="" ancestors="1" line="33" loc="Φ.org.eolang.simple-division-by-zero$t0$a0" name="simple-division-by-zero$t0$a0" parent="simple-division-by-zero" pos="4"> 
//   <o base=".div" line="34" loc="Φ.org.eolang.simple-division-by-zero$t0$a0.φ" name="@" pos="8"> 
//     <o base="org.eolang.int" data="int" line="34" loc="Φ.org.eolang.simple-division-by-zero$t0$a0.φ.ρ" pos="6">42</o>
//     <o base="org.eolang.int" data="int" line="34" loc="Φ.org.eolang.simple-division-by-zero$t0$a0.φ.α0" pos="13">0</o>
//   </o>
// </o>
@XmirObject(name = "ω1t0$a0", oname = "ω1t0$a0", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/try-tests.eo")
public final class EOω1t0$EOa0 extends PhDefault {
  public EOω1t0$EOa0(final Phi sigma) {
    super(sigma);
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = new EOorg.EOeolang.EOint(Phi.Φ);
        ret_base = new PhLocated(ret_base, 34, 6, "Φ.org.eolang.simple-division-by-zero$t0$a0.φ.ρ");
        ret_base = new PhWith(ret_base, "Δ", new Data.Value<>(42L));
      Phi ret = new PhMethod(ret_base, "div");
        ret = new PhLocated(ret, 34, 8, "Φ.org.eolang.simple-division-by-zero$t0$a0.φ");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 34, 13, "Φ.org.eolang.simple-division-by-zero$t0$a0.φ.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>(0L));
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
  }
}

// <o abstract="" ancestors="1" line="35" loc="Φ.org.eolang.simple-division-by-zero$t0$a1" name="simple-division-by-zero$t0$a1" parent="simple-division-by-zero" pos="4"> 
//   <o line="35" loc="Φ.org.eolang.simple-division-by-zero$t0$a1.e" name="e" pos="5"/>
//   <o base=".stdout" line="36" loc="Φ.org.eolang.simple-division-by-zero$t0$a1.φ" name="@" pos="11"> 
//     <o base=".io" line="36" loc="Φ.org.eolang.simple-division-by-zero$t0$a1.φ.ρ" pos="8"> 
//       <o base=".eolang" line="36" loc="Φ.org.eolang.simple-division-by-zero$t0$a1.φ.ρ.ρ" pos="6"> 
//         <o base=".org" line="36" loc="Φ.org.eolang.simple-division-by-zero$t0$a1.φ.ρ.ρ.ρ" pos="6"> 
//           <o base="Q" line="36" loc="Φ.org.eolang.simple-division-by-zero$t0$a1.φ.ρ.ρ.ρ.ρ" pos="6"/>
//         </o>
//       </o>
//     </o>
//     <o base="e" line="37" loc="Φ.org.eolang.simple-division-by-zero$t0$a1.φ.α0" pos="8" ref="35"/>
//   </o>
// </o>
@XmirObject(name = "ω1t0$a1", oname = "ω1t0$a1", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/try-tests.eo")
public final class EOω1t0$EOa1 extends PhDefault {
  public EOω1t0$EOa1(final Phi sigma) {
    super(sigma);
    this.add("e", new AtFree(/* default */));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base_base_base_base = Phi.Φ;
        ret_base_base_base_base = new PhLocated(ret_base_base_base_base, 36, 6, "Φ.org.eolang.simple-division-by-zero$t0$a1.φ.ρ.ρ.ρ.ρ");
      Phi ret_base_base_base = new PhMethod(ret_base_base_base_base, "org");
        ret_base_base_base = new PhLocated(ret_base_base_base, 36, 6, "Φ.org.eolang.simple-division-by-zero$t0$a1.φ.ρ.ρ.ρ");
      Phi ret_base_base = new PhMethod(ret_base_base_base, "eolang");
        ret_base_base = new PhLocated(ret_base_base, 36, 6, "Φ.org.eolang.simple-division-by-zero$t0$a1.φ.ρ.ρ");
      Phi ret_base = new PhMethod(ret_base_base, "io");
        ret_base = new PhLocated(ret_base, 36, 8, "Φ.org.eolang.simple-division-by-zero$t0$a1.φ.ρ");
      Phi ret = new PhMethod(ret_base, "stdout");
        ret = new PhLocated(ret, 36, 11, "Φ.org.eolang.simple-division-by-zero$t0$a1.φ");
      ret = new PhCopy(ret);
        Phi ret_1 = new PhMethod(rho, "e");
          ret_1 = new PhLocated(ret_1, 37, 8, "Φ.org.eolang.simple-division-by-zero$t0$a1.φ.α0");
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
  }
}

// <o abstract="" ancestors="1" line="38" loc="Φ.org.eolang.simple-division-by-zero$t0$a2" name="simple-division-by-zero$t0$a2" parent="simple-division-by-zero" pos="4"> 
//   <o base=".stdout" line="39" loc="Φ.org.eolang.simple-division-by-zero$t0$a2.φ" name="@" pos="11"> 
//     <o base=".io" line="39" loc="Φ.org.eolang.simple-division-by-zero$t0$a2.φ.ρ" pos="8"> 
//       <o base=".eolang" line="39" loc="Φ.org.eolang.simple-division-by-zero$t0$a2.φ.ρ.ρ" pos="6"> 
//         <o base=".org" line="39" loc="Φ.org.eolang.simple-division-by-zero$t0$a2.φ.ρ.ρ.ρ" pos="6"> 
//           <o base="Q" line="39" loc="Φ.org.eolang.simple-division-by-zero$t0$a2.φ.ρ.ρ.ρ.ρ" pos="6"/>
//         </o>
//       </o>
//     </o>
//     <o base="org.eolang.string" data="string" line="40" loc="Φ.org.eolang.simple-division-by-zero$t0$a2.φ.α0" pos="8">\nfinally</o>
//   </o>
// </o>
@XmirObject(name = "ω1t0$a2", oname = "ω1t0$a2", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/try-tests.eo")
public final class EOω1t0$EOa2 extends PhDefault {
  public EOω1t0$EOa2(final Phi sigma) {
    super(sigma);
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base_base_base_base = Phi.Φ;
        ret_base_base_base_base = new PhLocated(ret_base_base_base_base, 39, 6, "Φ.org.eolang.simple-division-by-zero$t0$a2.φ.ρ.ρ.ρ.ρ");
      Phi ret_base_base_base = new PhMethod(ret_base_base_base_base, "org");
        ret_base_base_base = new PhLocated(ret_base_base_base, 39, 6, "Φ.org.eolang.simple-division-by-zero$t0$a2.φ.ρ.ρ.ρ");
      Phi ret_base_base = new PhMethod(ret_base_base_base, "eolang");
        ret_base_base = new PhLocated(ret_base_base, 39, 6, "Φ.org.eolang.simple-division-by-zero$t0$a2.φ.ρ.ρ");
      Phi ret_base = new PhMethod(ret_base_base, "io");
        ret_base = new PhLocated(ret_base, 39, 8, "Φ.org.eolang.simple-division-by-zero$t0$a2.φ.ρ");
      Phi ret = new PhMethod(ret_base, "stdout");
        ret = new PhLocated(ret, 39, 11, "Φ.org.eolang.simple-division-by-zero$t0$a2.φ");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOstring(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 40, 8, "Φ.org.eolang.simple-division-by-zero$t0$a2.φ.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>("\nfinally"));
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
  }
}
}
