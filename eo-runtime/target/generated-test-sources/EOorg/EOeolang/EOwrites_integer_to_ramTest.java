
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT b5a4c9a 2023-08-17T12:29:38) on 2023-08-18T14:42:30.920527Z; your changes will be discarded on the next build */
package EOorg.EOeolang;

import org.eolang.*;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

// <o abstract="" line="42" loc="Φ.org.eolang.writes-integer-to-ram" name="writes-integer-to-ram" original-name="writes-integer-to-ram" pos="0"> 
//   <o base="org.eolang.ram" line="43" loc="Φ.org.eolang.writes-integer-to-ram.r" name="r" pos="2"> 
//     <o base="org.eolang.int" data="int" line="43" loc="Φ.org.eolang.writes-integer-to-ram.r.α0" pos="6">1024</o>
//   </o>
//   <o base=".as-bytes" line="44" loc="Φ.org.eolang.writes-integer-to-ram.b" name="b" pos="3"> 
//     <o base="org.eolang.int" data="int" line="44" loc="Φ.org.eolang.writes-integer-to-ram.b.ρ" pos="2">3</o>
//   </o>
//   <o base=".write" line="45" loc="Φ.org.eolang.writes-integer-to-ram.w" name="w" pos="3"> 
//     <o base="r" line="45" loc="Φ.org.eolang.writes-integer-to-ram.w.ρ" pos="2" ref="43"/>
//     <o base="org.eolang.int" data="int" line="45" loc="Φ.org.eolang.writes-integer-to-ram.w.α0" pos="10">0</o>
//     <o base="b" line="45" loc="Φ.org.eolang.writes-integer-to-ram.w.α1" pos="12" ref="44"/>
//   </o>
//   <o base="org.eolang.hamcrest.assert-that" line="46" loc="Φ.org.eolang.writes-integer-to-ram.φ" name="@" pos="2"> 
//     <o base=".and" line="47" loc="Φ.org.eolang.writes-integer-to-ram.φ.α0" pos="4"> 
//       <o base=".eq" line="48" loc="Φ.org.eolang.writes-integer-to-ram.φ.α0.ρ" pos="7"> 
//         <o base="w" line="48" loc="Φ.org.eolang.writes-integer-to-ram.φ.α0.ρ.ρ" pos="6" ref="45"/>
//         <o base="org.eolang.bool" data="bool" line="48" loc="Φ.org.eolang.writes-integer-to-ram.φ.α0.ρ.α0" pos="11">TRUE</o>
//       </o>
//       <o base=".eq" line="49" loc="Φ.org.eolang.writes-integer-to-ram.φ.α0.α0" pos="26"> 
//         <o base=".as-int" line="49" loc="Φ.org.eolang.writes-integer-to-ram.φ.α0.α0.ρ" pos="19"> 
//           <o base="writes-integer-to-ram$t3$t0$t1$t0$generated-scope-59c71ccd-b68a-4068-b96e-5fb649a2c43b" cut="32" line="49" loc="Φ.org.eolang.writes-integer-to-ram.φ.α0.α0.ρ.generated-scope-59c71ccd-b68a-4068-b96e-5fb649a2c43b" name="generated-scope-59c71ccd-b68a-4068-b96e-5fb649a2c43b" pos="8" ref="49"> 
//             <o as="r" base="r" level="1" loc="Φ.org.eolang.writes-integer-to-ram.φ.α0.α0.ρ.generated-scope-59c71ccd-b68a-4068-b96e-5fb649a2c43b.α0" ref="43"/>
//           </o>
//         </o>
//         <o base="org.eolang.int" data="int" line="49" loc="Φ.org.eolang.writes-integer-to-ram.φ.α0.α0.α0" pos="30">3</o>
//       </o>
//     </o>
//     <o base=".equal-to" line="50" loc="Φ.org.eolang.writes-integer-to-ram.φ.α1" pos="5"> 
//       <o base="$" line="50" loc="Φ.org.eolang.writes-integer-to-ram.φ.α1.ρ" pos="4"/>
//       <o base="org.eolang.bool" data="bool" line="50" loc="Φ.org.eolang.writes-integer-to-ram.φ.α1.α0" pos="15">TRUE</o>
//     </o>
//   </o>
// </o>
@XmirObject(name = "writes-integer-to-ramTest", oname = "writes-integer-to-ram", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/ram-tests.eo")
public final class EOwrites_integer_to_ramTest extends PhDefault {
  public EOwrites_integer_to_ramTest() {
    this.add("r", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("ram").get();
        ret = new PhLocated(ret, 43, 2, "Φ.org.eolang.writes-integer-to-ram.r");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 43, 6, "Φ.org.eolang.writes-integer-to-ram.r.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>(1024L));
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
    this.add("b", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = new EOorg.EOeolang.EOint(Phi.Φ);
        ret_base = new PhLocated(ret_base, 44, 2, "Φ.org.eolang.writes-integer-to-ram.b.ρ");
        ret_base = new PhWith(ret_base, "Δ", new Data.Value<>(3L));
      Phi ret = new PhMethod(ret_base, "as-bytes");
        ret = new PhLocated(ret, 44, 3, "Φ.org.eolang.writes-integer-to-ram.b");
      return ret;
    })));
    this.add("w", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = new PhMethod(rho, "r");
        ret_base = new PhLocated(ret_base, 45, 2, "Φ.org.eolang.writes-integer-to-ram.w.ρ");
      Phi ret = new PhMethod(ret_base, "write");
        ret = new PhLocated(ret, 45, 3, "Φ.org.eolang.writes-integer-to-ram.w");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 45, 10, "Φ.org.eolang.writes-integer-to-ram.w.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>(0L));
        Phi ret_2 = new PhMethod(rho, "b");
          ret_2 = new PhLocated(ret_2, 45, 12, "Φ.org.eolang.writes-integer-to-ram.w.α1");
        ret = new PhWith(ret, 0, ret_1);
        ret = new PhWith(ret, 1, ret_2);
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("hamcrest").get().attr("assert-that").get();
        ret = new PhLocated(ret, 46, 2, "Φ.org.eolang.writes-integer-to-ram.φ");
      ret = new PhCopy(ret);
        Phi ret_1_base_base = new PhMethod(rho, "w");
          ret_1_base_base = new PhLocated(ret_1_base_base, 48, 6, "Φ.org.eolang.writes-integer-to-ram.φ.α0.ρ.ρ");
        Phi ret_1_base = new PhMethod(ret_1_base_base, "eq");
          ret_1_base = new PhLocated(ret_1_base, 48, 7, "Φ.org.eolang.writes-integer-to-ram.φ.α0.ρ");
        ret_1_base = new PhCopy(ret_1_base);
          Phi ret_1_base_1 = new EOorg.EOeolang.EObool(Phi.Φ);
            ret_1_base_1 = new PhLocated(ret_1_base_1, 48, 11, "Φ.org.eolang.writes-integer-to-ram.φ.α0.ρ.α0");
            ret_1_base_1 = new PhWith(ret_1_base_1, "Δ", new Data.Value<>(Boolean.TRUE));
          ret_1_base = new PhWith(ret_1_base, 0, ret_1_base_1);
        Phi ret_1 = new PhMethod(ret_1_base, "and");
          ret_1 = new PhLocated(ret_1, 47, 4, "Φ.org.eolang.writes-integer-to-ram.φ.α0");
        ret_1 = new PhCopy(ret_1);
          Phi ret_1_1_base_base = new EOω1t3$EOt0$EOt1$EOt0$EOgenerated_scope_59c71ccd_b68a_4068_b96e_5fb649a2c43b(rho);
            ret_1_1_base_base = new PhLocated(ret_1_1_base_base, 49, 8, "Φ.org.eolang.writes-integer-to-ram.φ.α0.α0.ρ.generated-scope-59c71ccd-b68a-4068-b96e-5fb649a2c43b");
          Phi ret_1_1_base = new PhMethod(ret_1_1_base_base, "as-int");
            ret_1_1_base = new PhLocated(ret_1_1_base, 49, 19, "Φ.org.eolang.writes-integer-to-ram.φ.α0.α0.ρ");
          Phi ret_1_1 = new PhMethod(ret_1_1_base, "eq");
            ret_1_1 = new PhLocated(ret_1_1, 49, 26, "Φ.org.eolang.writes-integer-to-ram.φ.α0.α0");
          ret_1_1 = new PhCopy(ret_1_1);
            Phi ret_1_1_1 = new EOorg.EOeolang.EOint(Phi.Φ);
              ret_1_1_1 = new PhLocated(ret_1_1_1, 49, 30, "Φ.org.eolang.writes-integer-to-ram.φ.α0.α0.α0");
              ret_1_1_1 = new PhWith(ret_1_1_1, "Δ", new Data.Value<>(3L));
            ret_1_1 = new PhWith(ret_1_1, 0, ret_1_1_1);
          ret_1 = new PhWith(ret_1, 0, ret_1_1);
        Phi ret_2_base = rho;
          ret_2_base = new PhLocated(ret_2_base, 50, 4, "Φ.org.eolang.writes-integer-to-ram.φ.α1.ρ");
        Phi ret_2 = new PhMethod(ret_2_base, "equal-to");
          ret_2 = new PhLocated(ret_2, 50, 5, "Φ.org.eolang.writes-integer-to-ram.φ.α1");
        ret_2 = new PhCopy(ret_2);
          Phi ret_2_1 = new EOorg.EOeolang.EObool(Phi.Φ);
            ret_2_1 = new PhLocated(ret_2_1, 50, 15, "Φ.org.eolang.writes-integer-to-ram.φ.α1.α0");
            ret_2_1 = new PhWith(ret_2_1, "Δ", new Data.Value<>(Boolean.TRUE));
          ret_2 = new PhWith(ret_2, 0, ret_2_1);
        ret = new PhWith(ret, 0, ret_1);
        ret = new PhWith(ret, 1, ret_2);
      return ret;
    })));
  }

  @Test
  public void works() throws java.lang.Exception {
    Object obj = new Dataized(new EOwrites_integer_to_ramTest()).take();
    if (obj instanceof String) {
      Assertions.fail(obj.toString());
    } else {
      Assertions.assertTrue((Boolean) obj);
    }
  }

// <o abstract="" ancestors="1" line="49" loc="Φ.org.eolang.writes-integer-to-ram$t3$t0$t1$t0$generated-scope-59c71ccd-b68a-4068-b96e-5fb649a2c43b" name="writes-integer-to-ram$t3$t0$t1$t0$generated-scope-59c71ccd-b68a-4068-b96e-5fb649a2c43b" original-name="generated-scope-59c71ccd-b68a-4068-b96e-5fb649a2c43b" parent="writes-integer-to-ram" pos="8"> 
//   <o base=".slice" line="49" loc="Φ.org.eolang.writes-integer-to-ram$t3$t0$t1$t0$generated-scope-59c71ccd-b68a-4068-b96e-5fb649a2c43b.org.eolang.scope-59c71ccd-b68a-4068-b96e-5fb649a2c43b" name="org.eolang.scope-59c71ccd-b68a-4068-b96e-5fb649a2c43b" pos="8" scope="scope-59c71ccd-b68a-4068-b96e-5fb649a2c43b"> 
//     <o base="r" line="49" loc="Φ.org.eolang.writes-integer-to-ram$t3$t0$t1$t0$generated-scope-59c71ccd-b68a-4068-b96e-5fb649a2c43b.org.eolang.scope-59c71ccd-b68a-4068-b96e-5fb649a2c43b.ρ" pos="7" ref="49.43.463" scope="scope-59c71ccd-b68a-4068-b96e-5fb649a2c43b"/>
//     <o base="org.eolang.int" data="int" line="49" loc="Φ.org.eolang.writes-integer-to-ram$t3$t0$t1$t0$generated-scope-59c71ccd-b68a-4068-b96e-5fb649a2c43b.org.eolang.scope-59c71ccd-b68a-4068-b96e-5fb649a2c43b.α0" pos="15" scope="scope-59c71ccd-b68a-4068-b96e-5fb649a2c43b">0</o>
//     <o base="org.eolang.int" data="int" line="49" loc="Φ.org.eolang.writes-integer-to-ram$t3$t0$t1$t0$generated-scope-59c71ccd-b68a-4068-b96e-5fb649a2c43b.org.eolang.scope-59c71ccd-b68a-4068-b96e-5fb649a2c43b.α1" pos="17" scope="scope-59c71ccd-b68a-4068-b96e-5fb649a2c43b">8</o>
//   </o>
//   <o base="org.eolang.scope-59c71ccd-b68a-4068-b96e-5fb649a2c43b" line="49" loc="Φ.org.eolang.writes-integer-to-ram$t3$t0$t1$t0$generated-scope-59c71ccd-b68a-4068-b96e-5fb649a2c43b.φ" name="@" pos="8" ref="49"/>
//   <o level="1" line="49.43.463" loc="Φ.org.eolang.writes-integer-to-ram$t3$t0$t1$t0$generated-scope-59c71ccd-b68a-4068-b96e-5fb649a2c43b.r" name="r"/>
// </o>
@XmirObject(name = "ω1t3$t0$t1$t0$generated-scope-59c71ccd-b68a-4068-b96e-5fb649a2c43b", oname = "generated-scope-59c71ccd-b68a-4068-b96e-5fb649a2c43b", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/ram-tests.eo")
public final class EOω1t3$EOt0$EOt1$EOt0$EOgenerated_scope_59c71ccd_b68a_4068_b96e_5fb649a2c43b extends PhDefault {
  public EOω1t3$EOt0$EOt1$EOt0$EOgenerated_scope_59c71ccd_b68a_4068_b96e_5fb649a2c43b(final Phi sigma) {
    super(sigma);
    this.add("org.eolang.scope-59c71ccd-b68a-4068-b96e-5fb649a2c43b", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = new PhMethod(new PhMethod(rho, "σ"), "r");
        ret_base = new PhLocated(ret_base, 49, 7, "Φ.org.eolang.writes-integer-to-ram$t3$t0$t1$t0$generated-scope-59c71ccd-b68a-4068-b96e-5fb649a2c43b.org.eolang.scope-59c71ccd-b68a-4068-b96e-5fb649a2c43b.ρ");
      Phi ret = new PhMethod(ret_base, "slice");
        ret = new PhLocated(ret, 49, 8, "Φ.org.eolang.writes-integer-to-ram$t3$t0$t1$t0$generated-scope-59c71ccd-b68a-4068-b96e-5fb649a2c43b.org.eolang.scope-59c71ccd-b68a-4068-b96e-5fb649a2c43b");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 49, 15, "Φ.org.eolang.writes-integer-to-ram$t3$t0$t1$t0$generated-scope-59c71ccd-b68a-4068-b96e-5fb649a2c43b.org.eolang.scope-59c71ccd-b68a-4068-b96e-5fb649a2c43b.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>(0L));
        Phi ret_2 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_2 = new PhLocated(ret_2, 49, 17, "Φ.org.eolang.writes-integer-to-ram$t3$t0$t1$t0$generated-scope-59c71ccd-b68a-4068-b96e-5fb649a2c43b.org.eolang.scope-59c71ccd-b68a-4068-b96e-5fb649a2c43b.α1");
          ret_2 = new PhWith(ret_2, "Δ", new Data.Value<>(8L));
        ret = new PhWith(ret, 0, ret_1);
        ret = new PhWith(ret, 1, ret_2);
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new PhMethod(rho, "org.eolang.scope-59c71ccd-b68a-4068-b96e-5fb649a2c43b");
        ret = new PhLocated(ret, 49, 8, "Φ.org.eolang.writes-integer-to-ram$t3$t0$t1$t0$generated-scope-59c71ccd-b68a-4068-b96e-5fb649a2c43b.φ");
      return ret;
    })));
  }
}
}
