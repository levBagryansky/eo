
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT e24f541 2023-09-12T11:41:32) on 2023-10-03T10:45:38.539230Z; your changes will be discarded on the next build */
package EOorg.EOeolang;

import org.eolang.*;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

// <o abstract="" line="146" loc="Φ.org.eolang.supports-escape-sequences-unicode" name="supports-escape-sequences-unicode" original-name="supports-escape-sequences-unicode" pos="0"> 
//   <o base=".eq" line="147" loc="Φ.org.eolang.supports-escape-sequences-unicode.φ" name="@" pos="2"> 
//     <o base="org.eolang.string" data="string" line="148" loc="Φ.org.eolang.supports-escape-sequences-unicode.φ.ρ" pos="4">\u0424</o>
//     <o base="org.eolang.string" data="string" line="149" loc="Φ.org.eolang.supports-escape-sequences-unicode.φ.α0" pos="4">\u0424</o>
//   </o>
// </o>
@XmirObject(name = "supports-escape-sequences-unicodeTest", oname = "supports-escape-sequences-unicode", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/string-tests.eo")
public final class EOsupports_escape_sequences_unicodeTest extends PhDefault {
    
  public EOsupports_escape_sequences_unicodeTest() {
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = new EOorg.EOeolang.EOstring(Phi.Φ);
        ret_base = new PhLocated(ret_base, 148, 4, "Φ.org.eolang.supports-escape-sequences-unicode.φ.ρ");
        ret_base = new PhWith(ret_base, "Δ", new Data.Value<>("\u0424"));
      Phi ret = new PhMethod(ret_base, "eq");
        ret = new PhLocated(ret, 147, 2, "Φ.org.eolang.supports-escape-sequences-unicode.φ");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOstring(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 149, 4, "Φ.org.eolang.supports-escape-sequences-unicode.φ.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>("\u0424"));
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
  }

  @Test
  public void works() throws java.lang.Exception {
    Object obj = new Dataized(new EOsupports_escape_sequences_unicodeTest()).take();
    if (obj instanceof String) {
      Assertions.fail(obj.toString());
    } else {
      Assertions.assertTrue((Boolean) obj);
    }
  }
}
