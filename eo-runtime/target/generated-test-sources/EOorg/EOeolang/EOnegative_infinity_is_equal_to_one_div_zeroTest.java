
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT b5a4c9a 2023-08-17T12:29:38) on 2023-08-18T14:42:30.920527Z; your changes will be discarded on the next build */
package EOorg.EOeolang;

import org.eolang.*;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

// <o abstract="" line="31" loc="Φ.org.eolang.negative-infinity-is-equal-to-one-div-zero" name="negative-infinity-is-equal-to-one-div-zero" original-name="negative-infinity-is-equal-to-one-div-zero" pos="0"> 
//   <o base="org.eolang.hamcrest.assert-that" line="32" loc="Φ.org.eolang.negative-infinity-is-equal-to-one-div-zero.φ" name="@" pos="2"> 
//     <o base="org.eolang.negative-infinity" line="33" loc="Φ.org.eolang.negative-infinity-is-equal-to-one-div-zero.φ.α0" pos="4"/>
//     <o base=".equal-to" line="34" loc="Φ.org.eolang.negative-infinity-is-equal-to-one-div-zero.φ.α1" pos="5"> 
//       <o base="$" line="34" loc="Φ.org.eolang.negative-infinity-is-equal-to-one-div-zero.φ.α1.ρ" pos="4"/>
//       <o base="negative-infinity-is-equal-to-one-div-zero$t0$t1$generated-scope-ef888b0b-e9b2-4f1b-84de-f11bc1731703" cut="2" line="34" loc="Φ.org.eolang.negative-infinity-is-equal-to-one-div-zero.φ.α1.generated-scope-ef888b0b-e9b2-4f1b-84de-f11bc1731703" name="generated-scope-ef888b0b-e9b2-4f1b-84de-f11bc1731703" pos="20" ref="34"/>
//     </o>
//   </o>
// </o>
@XmirObject(name = "negative-infinity-is-equal-to-one-div-zeroTest", oname = "negative-infinity-is-equal-to-one-div-zero", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/negative-infinity-tests.eo")
public final class EOnegative_infinity_is_equal_to_one_div_zeroTest extends PhDefault {
  public EOnegative_infinity_is_equal_to_one_div_zeroTest() {
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("hamcrest").get().attr("assert-that").get();
        ret = new PhLocated(ret, 32, 2, "Φ.org.eolang.negative-infinity-is-equal-to-one-div-zero.φ");
      ret = new PhCopy(ret);
        Phi ret_1 = Phi.Φ.attr("org").get().attr("eolang").get().attr("negative-infinity").get();
          ret_1 = new PhLocated(ret_1, 33, 4, "Φ.org.eolang.negative-infinity-is-equal-to-one-div-zero.φ.α0");
        Phi ret_2_base = rho;
          ret_2_base = new PhLocated(ret_2_base, 34, 4, "Φ.org.eolang.negative-infinity-is-equal-to-one-div-zero.φ.α1.ρ");
        Phi ret_2 = new PhMethod(ret_2_base, "equal-to");
          ret_2 = new PhLocated(ret_2, 34, 5, "Φ.org.eolang.negative-infinity-is-equal-to-one-div-zero.φ.α1");
        ret_2 = new PhCopy(ret_2);
          Phi ret_2_1 = new EOω1t0$EOt1$EOgenerated_scope_ef888b0b_e9b2_4f1b_84de_f11bc1731703(rho);
            ret_2_1 = new PhLocated(ret_2_1, 34, 20, "Φ.org.eolang.negative-infinity-is-equal-to-one-div-zero.φ.α1.generated-scope-ef888b0b-e9b2-4f1b-84de-f11bc1731703");
          ret_2 = new PhWith(ret_2, 0, ret_2_1);
        ret = new PhWith(ret, 0, ret_1);
        ret = new PhWith(ret, 1, ret_2);
      return ret;
    })));
  }

  @Test
  public void works() throws java.lang.Exception {
    Object obj = new Dataized(new EOnegative_infinity_is_equal_to_one_div_zeroTest()).take();
    if (obj instanceof String) {
      Assertions.fail(obj.toString());
    } else {
      Assertions.assertTrue((Boolean) obj);
    }
  }

// <o abstract="" ancestors="1" line="34" loc="Φ.org.eolang.negative-infinity-is-equal-to-one-div-zero$t0$t1$generated-scope-ef888b0b-e9b2-4f1b-84de-f11bc1731703" name="negative-infinity-is-equal-to-one-div-zero$t0$t1$generated-scope-ef888b0b-e9b2-4f1b-84de-f11bc1731703" original-name="generated-scope-ef888b0b-e9b2-4f1b-84de-f11bc1731703" parent="negative-infinity-is-equal-to-one-div-zero" pos="20"> 
//   <o base=".div" line="34" loc="Φ.org.eolang.negative-infinity-is-equal-to-one-div-zero$t0$t1$generated-scope-ef888b0b-e9b2-4f1b-84de-f11bc1731703.org.eolang.scope-ef888b0b-e9b2-4f1b-84de-f11bc1731703" name="org.eolang.scope-ef888b0b-e9b2-4f1b-84de-f11bc1731703" pos="20" scope="scope-ef888b0b-e9b2-4f1b-84de-f11bc1731703"> 
//     <o base="org.eolang.float" data="float" line="34" loc="Φ.org.eolang.negative-infinity-is-equal-to-one-div-zero$t0$t1$generated-scope-ef888b0b-e9b2-4f1b-84de-f11bc1731703.org.eolang.scope-ef888b0b-e9b2-4f1b-84de-f11bc1731703.ρ" pos="16" scope="scope-ef888b0b-e9b2-4f1b-84de-f11bc1731703">-1.0</o>
//     <o base="org.eolang.float" data="float" line="34" loc="Φ.org.eolang.negative-infinity-is-equal-to-one-div-zero$t0$t1$generated-scope-ef888b0b-e9b2-4f1b-84de-f11bc1731703.org.eolang.scope-ef888b0b-e9b2-4f1b-84de-f11bc1731703.α0" pos="25" scope="scope-ef888b0b-e9b2-4f1b-84de-f11bc1731703">0.0</o>
//   </o>
//   <o base="org.eolang.scope-ef888b0b-e9b2-4f1b-84de-f11bc1731703" line="34" loc="Φ.org.eolang.negative-infinity-is-equal-to-one-div-zero$t0$t1$generated-scope-ef888b0b-e9b2-4f1b-84de-f11bc1731703.φ" name="@" pos="20" ref="34"/>
// </o>
@XmirObject(name = "ω1t0$t1$generated-scope-ef888b0b-e9b2-4f1b-84de-f11bc1731703", oname = "generated-scope-ef888b0b-e9b2-4f1b-84de-f11bc1731703", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/negative-infinity-tests.eo")
public final class EOω1t0$EOt1$EOgenerated_scope_ef888b0b_e9b2_4f1b_84de_f11bc1731703 extends PhDefault {
  public EOω1t0$EOt1$EOgenerated_scope_ef888b0b_e9b2_4f1b_84de_f11bc1731703(final Phi sigma) {
    super(sigma);
    this.add("org.eolang.scope-ef888b0b-e9b2-4f1b-84de-f11bc1731703", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = new EOorg.EOeolang.EOfloat(Phi.Φ);
        ret_base = new PhLocated(ret_base, 34, 16, "Φ.org.eolang.negative-infinity-is-equal-to-one-div-zero$t0$t1$generated-scope-ef888b0b-e9b2-4f1b-84de-f11bc1731703.org.eolang.scope-ef888b0b-e9b2-4f1b-84de-f11bc1731703.ρ");
        ret_base = new PhWith(ret_base, "Δ", new Data.Value<>(-1.0d));
      Phi ret = new PhMethod(ret_base, "div");
        ret = new PhLocated(ret, 34, 20, "Φ.org.eolang.negative-infinity-is-equal-to-one-div-zero$t0$t1$generated-scope-ef888b0b-e9b2-4f1b-84de-f11bc1731703.org.eolang.scope-ef888b0b-e9b2-4f1b-84de-f11bc1731703");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOfloat(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 34, 25, "Φ.org.eolang.negative-infinity-is-equal-to-one-div-zero$t0$t1$generated-scope-ef888b0b-e9b2-4f1b-84de-f11bc1731703.org.eolang.scope-ef888b0b-e9b2-4f1b-84de-f11bc1731703.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>(0.0d));
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new PhMethod(rho, "org.eolang.scope-ef888b0b-e9b2-4f1b-84de-f11bc1731703");
        ret = new PhLocated(ret, 34, 20, "Φ.org.eolang.negative-infinity-is-equal-to-one-div-zero$t0$t1$generated-scope-ef888b0b-e9b2-4f1b-84de-f11bc1731703.φ");
      return ret;
    })));
  }
}
}
