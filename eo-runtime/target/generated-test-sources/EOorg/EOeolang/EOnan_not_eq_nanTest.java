
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT e24f541 2023-09-12T11:41:32) on 2023-10-03T10:45:38.539230Z; your changes will be discarded on the next build */
package EOorg.EOeolang;

import org.eolang.*;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

// <o abstract="" line="35" loc="Φ.org.eolang.nan-not-eq-nan" name="nan-not-eq-nan" original-name="nan-not-eq-nan" pos="0"> 
//   <o base="org.eolang.nan" const="" line="36" loc="Φ.org.eolang.nan-not-eq-nan.not-a-number" name="not-a-number" pos="2"/>
//   <o base=".not" line="37" loc="Φ.org.eolang.nan-not-eq-nan.φ" name="@" pos="2"> 
//     <o base=".eq" line="38" loc="Φ.org.eolang.nan-not-eq-nan.φ.ρ" pos="4"> 
//       <o base="not-a-number" line="39" loc="Φ.org.eolang.nan-not-eq-nan.φ.ρ.ρ" pos="6" ref="36"/>
//       <o base="not-a-number" line="40" loc="Φ.org.eolang.nan-not-eq-nan.φ.ρ.α0" pos="6" ref="36"/>
//     </o>
//   </o>
// </o>
@XmirObject(name = "nan-not-eq-nanTest", oname = "nan-not-eq-nan", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/nan-tests.eo")
public final class EOnan_not_eq_nanTest extends PhDefault {
    
  public EOnan_not_eq_nanTest() {
    this.add("not-a-number", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("nan").get();
        ret = new PhLocated(ret, 36, 2, "Φ.org.eolang.nan-not-eq-nan.not-a-number");
      ret = new PhConst(ret);
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base_base = new PhMethod(rho, "not-a-number");
        ret_base_base = new PhLocated(ret_base_base, 39, 6, "Φ.org.eolang.nan-not-eq-nan.φ.ρ.ρ");
      Phi ret_base = new PhMethod(ret_base_base, "eq");
        ret_base = new PhLocated(ret_base, 38, 4, "Φ.org.eolang.nan-not-eq-nan.φ.ρ");
      ret_base = new PhCopy(ret_base);
        Phi ret_base_1 = new PhMethod(rho, "not-a-number");
          ret_base_1 = new PhLocated(ret_base_1, 40, 6, "Φ.org.eolang.nan-not-eq-nan.φ.ρ.α0");
        ret_base = new PhWith(ret_base, 0, ret_base_1);
      Phi ret = new PhMethod(ret_base, "not");
        ret = new PhLocated(ret, 37, 2, "Φ.org.eolang.nan-not-eq-nan.φ");
      return ret;
    })));
  }

  @Test
  public void works() throws java.lang.Exception {
    Object obj = new Dataized(new EOnan_not_eq_nanTest()).take();
    if (obj instanceof String) {
      Assertions.fail(obj.toString());
    } else {
      Assertions.assertTrue((Boolean) obj);
    }
  }
}
