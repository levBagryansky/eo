
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT e24f541 2023-09-12T11:41:32) on 2023-10-03T10:45:38.539230Z; your changes will be discarded on the next build */
package EOorg.EOeolang;

import org.eolang.*;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

// <o abstract="" line="46" loc="Φ.org.eolang.makes-object-a-constant" name="makes-object-a-constant" original-name="makes-object-a-constant" pos="0"> 
//   <o base="makes-object-a-constant$foo" cut="20" line="47" loc="Φ.org.eolang.makes-object-a-constant.foo" name="foo" pos="2" ref="47"/>
//   <o base=".@" const="" line="51" loc="Φ.org.eolang.makes-object-a-constant.f" name="f" pos="5"> 
//     <o base="foo" line="51" loc="Φ.org.eolang.makes-object-a-constant.f.ρ" pos="2" ref="47"/>
//   </o>
//   <o base=".eq" line="52" loc="Φ.org.eolang.makes-object-a-constant.φ" name="@" pos="2"> 
//     <o base="f" line="53" loc="Φ.org.eolang.makes-object-a-constant.φ.ρ" pos="4" ref="51"/>
//     <o base="f" line="54" loc="Φ.org.eolang.makes-object-a-constant.φ.α0" pos="4" ref="51"/>
//   </o>
// </o>
@XmirObject(name = "makes-object-a-constantTest", oname = "makes-object-a-constant", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/runtime-tests.eo")
public final class EOmakes_object_a_constantTest extends PhDefault {
    
  public EOmakes_object_a_constantTest() {
    this.add("foo", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new EOω1foo(rho);
        ret = new PhLocated(ret, 47, 2, "Φ.org.eolang.makes-object-a-constant.foo");
      return ret;
    })));
    this.add("f", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = new PhMethod(rho, "foo");
        ret_base = new PhLocated(ret_base, 51, 2, "Φ.org.eolang.makes-object-a-constant.f.ρ");
      Phi ret = new PhMethod(ret_base, "φ");
        ret = new PhLocated(ret, 51, 5, "Φ.org.eolang.makes-object-a-constant.f");
      ret = new PhConst(ret);
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = new PhMethod(rho, "f");
        ret_base = new PhLocated(ret_base, 53, 4, "Φ.org.eolang.makes-object-a-constant.φ.ρ");
      Phi ret = new PhMethod(ret_base, "eq");
        ret = new PhLocated(ret, 52, 2, "Φ.org.eolang.makes-object-a-constant.φ");
      ret = new PhCopy(ret);
        Phi ret_1 = new PhMethod(rho, "f");
          ret_1 = new PhLocated(ret_1, 54, 4, "Φ.org.eolang.makes-object-a-constant.φ.α0");
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
  }

  @Test
  public void works() throws java.lang.Exception {
    Object obj = new Dataized(new EOmakes_object_a_constantTest()).take();
    if (obj instanceof String) {
      Assertions.fail(obj.toString());
    } else {
      Assertions.assertTrue((Boolean) obj);
    }
  }

// <o abstract="" ancestors="1" line="47" loc="Φ.org.eolang.makes-object-a-constant$foo" name="makes-object-a-constant$foo" original-name="foo" parent="makes-object-a-constant" pos="2"> 
//   <o base=".times" line="48" loc="Φ.org.eolang.makes-object-a-constant$foo.φ" name="@" pos="4"> 
//     <o base="org.eolang.int" data="int" line="49" loc="Φ.org.eolang.makes-object-a-constant$foo.φ.ρ" pos="6">50</o>
//     <o base="org.eolang.int" data="int" line="50" loc="Φ.org.eolang.makes-object-a-constant$foo.φ.α0" pos="6">50</o>
//   </o>
// </o>
@XmirObject(name = "ω1foo", oname = "foo", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/runtime-tests.eo")
public final class EOω1foo extends PhDefault {
    
  public EOω1foo(final Phi sigma) {
    super(sigma);
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = new EOorg.EOeolang.EOint(Phi.Φ);
        ret_base = new PhLocated(ret_base, 49, 6, "Φ.org.eolang.makes-object-a-constant$foo.φ.ρ");
        ret_base = new PhWith(ret_base, "Δ", new Data.Value<>(50L));
      Phi ret = new PhMethod(ret_base, "times");
        ret = new PhLocated(ret, 48, 4, "Φ.org.eolang.makes-object-a-constant$foo.φ");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 50, 6, "Φ.org.eolang.makes-object-a-constant$foo.φ.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>(50L));
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
  }
}
}
