
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT b5a4c9a 2023-08-17T12:29:38) on 2023-08-18T14:42:30.920527Z; your changes will be discarded on the next build */
package EOorg.EOeolang.EOio;

import org.eolang.*;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

// <o abstract="" line="32" loc="Φ.org.eolang.io.prints-string-to-console" name="prints-string-to-console" original-name="prints-string-to-console" pos="0"> 
//   <o base="org.eolang.io.stdout" line="33" loc="Φ.org.eolang.io.prints-string-to-console.φ" name="@" pos="2"> 
//     <o base="org.eolang.txt.sprintf" line="34" loc="Φ.org.eolang.io.prints-string-to-console.φ.α0" pos="4"> 
//       <o base="org.eolang.string" data="string" line="35" loc="Φ.org.eolang.io.prints-string-to-console.φ.α0.α0" pos="6">This is the random number %f, %s!\n</o>
//       <o base=".pseudo" line="36" loc="Φ.org.eolang.io.prints-string-to-console.φ.α0.α1" pos="12"> 
//         <o base="org.eolang.math.random" line="36" loc="Φ.org.eolang.io.prints-string-to-console.φ.α0.α1.ρ" pos="6"/>
//       </o>
//       <o base="org.eolang.string" data="string" line="37" loc="Φ.org.eolang.io.prints-string-to-console.φ.α0.α2" pos="6">Jeff</o>
//     </o>
//   </o>
// </o>
@XmirObject(name = "prints-string-to-consoleTest", oname = "prints-string-to-console", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/io/stdout-tests.eo")
public final class EOprints_string_to_consoleTest extends PhDefault {
  public EOprints_string_to_consoleTest() {
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("io").get().attr("stdout").get();
        ret = new PhLocated(ret, 33, 2, "Φ.org.eolang.io.prints-string-to-console.φ");
      ret = new PhCopy(ret);
        Phi ret_1 = Phi.Φ.attr("org").get().attr("eolang").get().attr("txt").get().attr("sprintf").get();
          ret_1 = new PhLocated(ret_1, 34, 4, "Φ.org.eolang.io.prints-string-to-console.φ.α0");
        ret_1 = new PhCopy(ret_1);
          Phi ret_1_1 = new EOorg.EOeolang.EOstring(Phi.Φ);
            ret_1_1 = new PhLocated(ret_1_1, 35, 6, "Φ.org.eolang.io.prints-string-to-console.φ.α0.α0");
            ret_1_1 = new PhWith(ret_1_1, "Δ", new Data.Value<>("This is the random number %f, %s!\n"));
          Phi ret_1_2_base = Phi.Φ.attr("org").get().attr("eolang").get().attr("math").get().attr("random").get();
            ret_1_2_base = new PhLocated(ret_1_2_base, 36, 6, "Φ.org.eolang.io.prints-string-to-console.φ.α0.α1.ρ");
          Phi ret_1_2 = new PhMethod(ret_1_2_base, "pseudo");
            ret_1_2 = new PhLocated(ret_1_2, 36, 12, "Φ.org.eolang.io.prints-string-to-console.φ.α0.α1");
          Phi ret_1_3 = new EOorg.EOeolang.EOstring(Phi.Φ);
            ret_1_3 = new PhLocated(ret_1_3, 37, 6, "Φ.org.eolang.io.prints-string-to-console.φ.α0.α2");
            ret_1_3 = new PhWith(ret_1_3, "Δ", new Data.Value<>("Jeff"));
          ret_1 = new PhWith(ret_1, 0, ret_1_1);
          ret_1 = new PhWith(ret_1, 1, ret_1_2);
          ret_1 = new PhWith(ret_1, 2, ret_1_3);
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
  }

  @Test
  public void works() throws java.lang.Exception {
    Object obj = new Dataized(new EOprints_string_to_consoleTest()).take();
    if (obj instanceof String) {
      Assertions.fail(obj.toString());
    } else {
      Assertions.assertTrue((Boolean) obj);
    }
  }
}
