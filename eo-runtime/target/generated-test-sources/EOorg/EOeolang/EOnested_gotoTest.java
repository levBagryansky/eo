
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT e24f541 2023-09-12T11:41:32) on 2023-10-03T10:45:38.539230Z; your changes will be discarded on the next build */
package EOorg.EOeolang;

import org.eolang.*;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

// <o abstract="" line="104" loc="Φ.org.eolang.nested-goto" name="nested-goto" original-name="nested-goto" pos="0"> 
//   <o base=".eq" line="105" loc="Φ.org.eolang.nested-goto.φ" name="@" pos="2"> 
//     <o base="org.eolang.goto" line="106" loc="Φ.org.eolang.nested-goto.φ.ρ" pos="4"> 
//       <o base="nested-goto$t0$t0$a0" cut="128" line="107" loc="Φ.org.eolang.nested-goto.φ.ρ.α0" pos="6" ref="107"/>
//     </o>
//     <o base="org.eolang.int" data="int" line="113" loc="Φ.org.eolang.nested-goto.φ.α0" pos="4">42</o>
//   </o>
// </o>
@XmirObject(name = "nested-gotoTest", oname = "nested-goto", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/goto-tests.eo")
public final class EOnested_gotoTest extends PhDefault {
    
  public EOnested_gotoTest() {
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = Phi.Φ.attr("org").get().attr("eolang").get().attr("goto").get();
        ret_base = new PhLocated(ret_base, 106, 4, "Φ.org.eolang.nested-goto.φ.ρ");
      ret_base = new PhCopy(ret_base);
        Phi ret_base_1 = new EOω1t0$EOt0$EOa0(rho);
          ret_base_1 = new PhLocated(ret_base_1, 107, 6, "Φ.org.eolang.nested-goto.φ.ρ.α0");
        ret_base = new PhWith(ret_base, 0, ret_base_1);
      Phi ret = new PhMethod(ret_base, "eq");
        ret = new PhLocated(ret, 105, 2, "Φ.org.eolang.nested-goto.φ");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 113, 4, "Φ.org.eolang.nested-goto.φ.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>(42L));
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
  }

  @Test
  public void works() throws java.lang.Exception {
    Object obj = new Dataized(new EOnested_gotoTest()).take();
    if (obj instanceof String) {
      Assertions.fail(obj.toString());
    } else {
      Assertions.assertTrue((Boolean) obj);
    }
  }

// <o abstract="" ancestors="1" line="107" loc="Φ.org.eolang.nested-goto$t0$t0$a0" name="nested-goto$t0$t0$a0" parent="nested-goto" pos="6"> 
//   <o line="107" loc="Φ.org.eolang.nested-goto$t0$t0$a0.g1" name="g1" pos="7"/>
//   <o base="org.eolang.seq" line="108" loc="Φ.org.eolang.nested-goto$t0$t0$a0.φ" name="@" pos="8"> 
//     <o base="org.eolang.goto" line="109" loc="Φ.org.eolang.nested-goto$t0$t0$a0.φ.α0" pos="10"> 
//       <o base="nested-goto$t0$t0$a0$t1$t0$a0" cut="129" line="110" loc="Φ.org.eolang.nested-goto$t0$t0$a0.φ.α0.α0" pos="12" ref="110"> 
//         <o as="g1" base="g1" level="1" loc="Φ.org.eolang.nested-goto$t0$t0$a0.φ.α0.α0.α0" ref="107"/>
//       </o>
//     </o>
//     <o base="org.eolang.int" data="int" line="112" loc="Φ.org.eolang.nested-goto$t0$t0$a0.φ.α1" pos="10">7</o>
//   </o>
// </o>
@XmirObject(name = "ω1t0$t0$a0", oname = "ω1t0$t0$a0", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/goto-tests.eo")
public final class EOω1t0$EOt0$EOa0 extends PhDefault {
    
  public EOω1t0$EOt0$EOa0(final Phi sigma) {
    super(sigma);
    this.add("g1", new AtFree(/* default */));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("seq").get();
        ret = new PhLocated(ret, 108, 8, "Φ.org.eolang.nested-goto$t0$t0$a0.φ");
      ret = new PhCopy(ret);
        Phi ret_1 = Phi.Φ.attr("org").get().attr("eolang").get().attr("goto").get();
          ret_1 = new PhLocated(ret_1, 109, 10, "Φ.org.eolang.nested-goto$t0$t0$a0.φ.α0");
        ret_1 = new PhCopy(ret_1);
          Phi ret_1_1 = new EOω2t1$EOt0$EOa0(rho);
            ret_1_1 = new PhLocated(ret_1_1, 110, 12, "Φ.org.eolang.nested-goto$t0$t0$a0.φ.α0.α0");
          ret_1 = new PhWith(ret_1, 0, ret_1_1);
        Phi ret_2 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_2 = new PhLocated(ret_2, 112, 10, "Φ.org.eolang.nested-goto$t0$t0$a0.φ.α1");
          ret_2 = new PhWith(ret_2, "Δ", new Data.Value<>(7L));
        ret = new PhWith(ret, 0, ret_1);
        ret = new PhWith(ret, 1, ret_2);
      return ret;
    })));
  }

// <o abstract="" ancestors="2" line="110" loc="Φ.org.eolang.nested-goto$t0$t0$a0$t1$t0$a0" name="nested-goto$t0$t0$a0$t1$t0$a0" parent="nested-goto$t0$t0$a0" pos="12"> 
//   <o line="110" loc="Φ.org.eolang.nested-goto$t0$t0$a0$t1$t0$a0.g2" name="g2" pos="13"/>
//   <o base=".forward" line="111" loc="Φ.org.eolang.nested-goto$t0$t0$a0$t1$t0$a0.φ" name="@" pos="16"> 
//     <o base="g1" line="111" loc="Φ.org.eolang.nested-goto$t0$t0$a0$t1$t0$a0.φ.ρ" pos="14" ref="110.107.462"/>
//     <o base="org.eolang.int" data="int" line="111" loc="Φ.org.eolang.nested-goto$t0$t0$a0$t1$t0$a0.φ.α0" pos="25">42</o>
//   </o>
//   <o level="1" line="110.107.462" loc="Φ.org.eolang.nested-goto$t0$t0$a0$t1$t0$a0.g1" name="g1"/>
// </o>
@XmirObject(name = "ω2t1$t0$a0", oname = "ω2t1$t0$a0", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/goto-tests.eo")
public final class EOω2t1$EOt0$EOa0 extends PhDefault {
    
  public EOω2t1$EOt0$EOa0(final Phi sigma) {
    super(sigma);
    this.add("g2", new AtFree(/* default */));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = new PhMethod(new PhMethod(rho, "σ"), "g1");
        ret_base = new PhLocated(ret_base, 111, 14, "Φ.org.eolang.nested-goto$t0$t0$a0$t1$t0$a0.φ.ρ");
      Phi ret = new PhMethod(ret_base, "forward");
        ret = new PhLocated(ret, 111, 16, "Φ.org.eolang.nested-goto$t0$t0$a0$t1$t0$a0.φ");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 111, 25, "Φ.org.eolang.nested-goto$t0$t0$a0$t1$t0$a0.φ.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>(42L));
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
  }
}
}
}
