
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT e24f541 2023-09-12T11:41:32) on 2023-10-03T10:45:38.539230Z; your changes will be discarded on the next build */
package EOorg.EOeolang;

import org.eolang.*;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

// <o abstract="" line="229" loc="Φ.org.eolang.calling-caged-function" name="calling-caged-function" original-name="calling-caged-function" pos="0"> 
//   <o base="org.eolang.cage" line="230" loc="Φ.org.eolang.calling-caged-function.h" name="h" pos="2"> 
//     <o base="org.eolang.int" data="int" line="230" loc="Φ.org.eolang.calling-caged-function.h.α0" pos="7">0</o>
//   </o>
//   <o base="calling-caged-function$func" cut="339" line="231" loc="Φ.org.eolang.calling-caged-function.func" name="func" pos="2" ref="231"/>
//   <o base="org.eolang.nop" line="233" loc="Φ.org.eolang.calling-caged-function.φ" name="@" pos="2"> 
//     <o base=".eq" line="234" loc="Φ.org.eolang.calling-caged-function.φ.α0" pos="4"> 
//       <o base="org.eolang.seq" line="235" loc="Φ.org.eolang.calling-caged-function.φ.α0.ρ" pos="6"> 
//         <o base=".write" line="236" loc="Φ.org.eolang.calling-caged-function.φ.α0.ρ.α0" pos="9"> 
//           <o base="h" line="236" loc="Φ.org.eolang.calling-caged-function.φ.α0.ρ.α0.ρ" pos="8" ref="230"/>
//           <o base="func" line="236" loc="Φ.org.eolang.calling-caged-function.φ.α0.ρ.α0.α0" pos="16" ref="231"/>
//         </o>
//         <o base=".@" line="237" loc="Φ.org.eolang.calling-caged-function.φ.α0.ρ.α1" pos="9"> 
//           <o base="h" line="237" loc="Φ.org.eolang.calling-caged-function.φ.α0.ρ.α1.ρ" pos="8" ref="230"/>
//           <o base="org.eolang.int" data="int" line="237" loc="Φ.org.eolang.calling-caged-function.φ.α0.ρ.α1.α0" pos="12">8</o>
//         </o>
//       </o>
//       <o base="org.eolang.int" data="int" line="238" loc="Φ.org.eolang.calling-caged-function.φ.α0.α0" pos="6">10</o>
//     </o>
//   </o>
// </o>
@XmirObject(name = "calling-caged-functionTest", oname = "calling-caged-function", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/runtime-tests.eo")
public final class EOcalling_caged_functionTest extends PhDefault {
    
  public EOcalling_caged_functionTest() {
    this.add("h", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("cage").get();
        ret = new PhLocated(ret, 230, 2, "Φ.org.eolang.calling-caged-function.h");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 230, 7, "Φ.org.eolang.calling-caged-function.h.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>(0L));
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
    this.add("func", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new EOω1func(rho);
        ret = new PhLocated(ret, 231, 2, "Φ.org.eolang.calling-caged-function.func");
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("nop").get();
        ret = new PhLocated(ret, 233, 2, "Φ.org.eolang.calling-caged-function.φ");
      ret = new PhCopy(ret);
        Phi ret_1_base = Phi.Φ.attr("org").get().attr("eolang").get().attr("seq").get();
          ret_1_base = new PhLocated(ret_1_base, 235, 6, "Φ.org.eolang.calling-caged-function.φ.α0.ρ");
        ret_1_base = new PhCopy(ret_1_base);
          Phi ret_1_base_1_base = new PhMethod(rho, "h");
            ret_1_base_1_base = new PhLocated(ret_1_base_1_base, 236, 8, "Φ.org.eolang.calling-caged-function.φ.α0.ρ.α0.ρ");
          Phi ret_1_base_1 = new PhMethod(ret_1_base_1_base, "write");
            ret_1_base_1 = new PhLocated(ret_1_base_1, 236, 9, "Φ.org.eolang.calling-caged-function.φ.α0.ρ.α0");
          ret_1_base_1 = new PhCopy(ret_1_base_1);
            Phi ret_1_base_1_1 = new PhMethod(rho, "func");
              ret_1_base_1_1 = new PhLocated(ret_1_base_1_1, 236, 16, "Φ.org.eolang.calling-caged-function.φ.α0.ρ.α0.α0");
            ret_1_base_1 = new PhWith(ret_1_base_1, 0, ret_1_base_1_1);
          Phi ret_1_base_2_base = new PhMethod(rho, "h");
            ret_1_base_2_base = new PhLocated(ret_1_base_2_base, 237, 8, "Φ.org.eolang.calling-caged-function.φ.α0.ρ.α1.ρ");
          Phi ret_1_base_2 = new PhMethod(ret_1_base_2_base, "φ");
            ret_1_base_2 = new PhLocated(ret_1_base_2, 237, 9, "Φ.org.eolang.calling-caged-function.φ.α0.ρ.α1");
          ret_1_base_2 = new PhCopy(ret_1_base_2);
            Phi ret_1_base_2_1 = new EOorg.EOeolang.EOint(Phi.Φ);
              ret_1_base_2_1 = new PhLocated(ret_1_base_2_1, 237, 12, "Φ.org.eolang.calling-caged-function.φ.α0.ρ.α1.α0");
              ret_1_base_2_1 = new PhWith(ret_1_base_2_1, "Δ", new Data.Value<>(8L));
            ret_1_base_2 = new PhWith(ret_1_base_2, 0, ret_1_base_2_1);
          ret_1_base = new PhWith(ret_1_base, 0, ret_1_base_1);
          ret_1_base = new PhWith(ret_1_base, 1, ret_1_base_2);
        Phi ret_1 = new PhMethod(ret_1_base, "eq");
          ret_1 = new PhLocated(ret_1, 234, 4, "Φ.org.eolang.calling-caged-function.φ.α0");
        ret_1 = new PhCopy(ret_1);
          Phi ret_1_1 = new EOorg.EOeolang.EOint(Phi.Φ);
            ret_1_1 = new PhLocated(ret_1_1, 238, 6, "Φ.org.eolang.calling-caged-function.φ.α0.α0");
            ret_1_1 = new PhWith(ret_1_1, "Δ", new Data.Value<>(10L));
          ret_1 = new PhWith(ret_1, 0, ret_1_1);
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
  }

  @Test
  public void works() throws java.lang.Exception {
    Object obj = new Dataized(new EOcalling_caged_functionTest()).take();
    if (obj instanceof String) {
      Assertions.fail(obj.toString());
    } else {
      Assertions.assertTrue((Boolean) obj);
    }
  }

// <o abstract="" ancestors="1" line="231" loc="Φ.org.eolang.calling-caged-function$func" name="calling-caged-function$func" original-name="func" parent="calling-caged-function" pos="2"> 
//   <o line="231" loc="Φ.org.eolang.calling-caged-function$func.x" name="x" pos="3"/>
//   <o base=".plus" line="232" loc="Φ.org.eolang.calling-caged-function$func.φ" name="@" pos="5"> 
//     <o base="org.eolang.int" data="int" line="232" loc="Φ.org.eolang.calling-caged-function$func.φ.ρ" pos="4">2</o>
//     <o base="x" line="232" loc="Φ.org.eolang.calling-caged-function$func.φ.α0" pos="11" ref="231"/>
//   </o>
// </o>
@XmirObject(name = "ω1func", oname = "func", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/runtime-tests.eo")
public final class EOω1func extends PhDefault {
    
  public EOω1func(final Phi sigma) {
    super(sigma);
    this.add("x", new AtFree(/* default */));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = new EOorg.EOeolang.EOint(Phi.Φ);
        ret_base = new PhLocated(ret_base, 232, 4, "Φ.org.eolang.calling-caged-function$func.φ.ρ");
        ret_base = new PhWith(ret_base, "Δ", new Data.Value<>(2L));
      Phi ret = new PhMethod(ret_base, "plus");
        ret = new PhLocated(ret, 232, 5, "Φ.org.eolang.calling-caged-function$func.φ");
      ret = new PhCopy(ret);
        Phi ret_1 = new PhMethod(rho, "x");
          ret_1 = new PhLocated(ret_1, 232, 11, "Φ.org.eolang.calling-caged-function$func.φ.α0");
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
  }
}
}
