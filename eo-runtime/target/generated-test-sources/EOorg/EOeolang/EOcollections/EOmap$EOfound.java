
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT b5a4c9a 2023-08-17T12:29:38) on 2023-08-18T14:42:30.920527Z; your changes will be discarded on the next build */
package EOorg.EOeolang.EOcollections;

import org.eolang.*;

// <o abstract="" ancestors="1" line="75" loc="Φ.org.eolang.collections.map$found" name="map$found" original-name="found" parent="map" pos="2"> 
//   <o line="77" loc="Φ.org.eolang.collections.map$found.key" name="key" pos="3"/>
//   <o base="org.eolang.collections.multimap" const="" line="78" loc="Φ.org.eolang.collections.map$found.mmp" name="mmp" pos="4"> 
//     <o base="org.eolang.tuple" data="tuple" line="78" loc="Φ.org.eolang.collections.map$found.mmp.α0" pos="13"/>
//   </o>
//   <o base="org.eolang.math.number" const="" line="79" loc="Φ.org.eolang.collections.map$found.num" name="num" pos="4"> 
//     <o base=".as-hash" line="79" loc="Φ.org.eolang.collections.map$found.num.α0" pos="15" scope="scope-9a83aa70-a24b-442d-be99-1e89e6b82dd1"> 
//       <o base="key" line="79" loc="Φ.org.eolang.collections.map$found.num.α0.ρ" pos="12" ref="77" scope="scope-9a83aa70-a24b-442d-be99-1e89e6b82dd1"/>
//     </o>
//   </o>
//   <o base=".if" line="80" loc="Φ.org.eolang.collections.map$found.φ" name="@" pos="4"> 
//     <o base=".eq" line="81" loc="Φ.org.eolang.collections.map$found.φ.ρ" pos="6"> 
//       <o base=".length" line="82" loc="Φ.org.eolang.collections.map$found.φ.ρ.ρ" pos="9"> 
//         <o base="m" line="82" loc="Φ.org.eolang.collections.map$found.φ.ρ.ρ.ρ" pos="8" ref="75.31.475"/>
//       </o>
//       <o base="org.eolang.int" data="int" line="83" loc="Φ.org.eolang.collections.map$found.φ.ρ.α0" pos="8">0</o>
//     </o>
//     <o base="org.eolang.tuple" data="tuple" line="84" loc="Φ.org.eolang.collections.map$found.φ.α0" pos="6"/>
//     <o base=".find-in-list" line="85" loc="Φ.org.eolang.collections.map$found.φ.α1" pos="9"> 
//       <o base="mmp" line="85" loc="Φ.org.eolang.collections.map$found.φ.α1.ρ" pos="6" ref="78"/>
//       <o base="key" line="85" loc="Φ.org.eolang.collections.map$found.φ.α1.α0" pos="23" ref="77"/>
//       <o base="map$found$t3$t2$generated-scope-58fee117-fd1a-48bc-a9fa-1cf161ce8884" cut="79" line="85" loc="Φ.org.eolang.collections.map$found.φ.α1.generated-scope-58fee117-fd1a-48bc-a9fa-1cf161ce8884" name="generated-scope-58fee117-fd1a-48bc-a9fa-1cf161ce8884" pos="29" ref="85"> 
//         <o as="num" base="num" level="1" loc="Φ.org.eolang.collections.map$found.φ.α1.generated-scope-58fee117-fd1a-48bc-a9fa-1cf161ce8884.α0" ref="79"/>
//         <o as="m" base="m" level="2" loc="Φ.org.eolang.collections.map$found.φ.α1.generated-scope-58fee117-fd1a-48bc-a9fa-1cf161ce8884.α1" ref="75.31.475"/>
//       </o>
//     </o>
//   </o>
//   <o level="1" line="75.31.475" loc="Φ.org.eolang.collections.map$found.m" name="m"/>
// </o>
@XmirObject(name = "map$found", oname = "found", source = "/home/tardis3/eo/eo-runtime/target/eo-test/3-pull/org/eolang/collections/map.eo")
public final class EOmap$EOfound extends PhDefault {
  public EOmap$EOfound(final Phi sigma) {
    super(sigma);
    this.add("key", new AtFree(/* default */));
    this.add("mmp", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("collections").get().attr("multimap").get();
        ret = new PhLocated(ret, 78, 4, "Φ.org.eolang.collections.map$found.mmp");
      ret = new PhCopy(ret);
        Phi ret_1 = Phi.Φ.attr("org").get().attr("eolang").get().attr("tuple").get();
          ret_1 = new PhLocated(ret_1, 78, 13, "Φ.org.eolang.collections.map$found.mmp.α0");
          Phi[] ret_1_a = new Phi[0];
          ret_1 = new PhWith(new PhCopy(ret_1), "Δ", new Data.Value<Phi[]>(ret_1_a));
        ret = new PhWith(ret, 0, ret_1);
      ret = new PhConst(ret);
      return ret;
    })));
    this.add("num", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("math").get().attr("number").get();
        ret = new PhLocated(ret, 79, 4, "Φ.org.eolang.collections.map$found.num");
      ret = new PhCopy(ret);
        Phi ret_1_base = new PhMethod(rho, "key");
          ret_1_base = new PhLocated(ret_1_base, 79, 12, "Φ.org.eolang.collections.map$found.num.α0.ρ");
        Phi ret_1 = new PhMethod(ret_1_base, "as-hash");
          ret_1 = new PhLocated(ret_1, 79, 15, "Φ.org.eolang.collections.map$found.num.α0");
        ret = new PhWith(ret, 0, ret_1);
      ret = new PhConst(ret);
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base_base_base = new PhMethod(new PhMethod(rho, "σ"), "m");
        ret_base_base_base = new PhLocated(ret_base_base_base, 82, 8, "Φ.org.eolang.collections.map$found.φ.ρ.ρ.ρ");
      Phi ret_base_base = new PhMethod(ret_base_base_base, "length");
        ret_base_base = new PhLocated(ret_base_base, 82, 9, "Φ.org.eolang.collections.map$found.φ.ρ.ρ");
      Phi ret_base = new PhMethod(ret_base_base, "eq");
        ret_base = new PhLocated(ret_base, 81, 6, "Φ.org.eolang.collections.map$found.φ.ρ");
      ret_base = new PhCopy(ret_base);
        Phi ret_base_1 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_base_1 = new PhLocated(ret_base_1, 83, 8, "Φ.org.eolang.collections.map$found.φ.ρ.α0");
          ret_base_1 = new PhWith(ret_base_1, "Δ", new Data.Value<>(0L));
        ret_base = new PhWith(ret_base, 0, ret_base_1);
      Phi ret = new PhMethod(ret_base, "if");
        ret = new PhLocated(ret, 80, 4, "Φ.org.eolang.collections.map$found.φ");
      ret = new PhCopy(ret);
        Phi ret_1 = Phi.Φ.attr("org").get().attr("eolang").get().attr("tuple").get();
          ret_1 = new PhLocated(ret_1, 84, 6, "Φ.org.eolang.collections.map$found.φ.α0");
          Phi[] ret_1_a = new Phi[0];
          ret_1 = new PhWith(new PhCopy(ret_1), "Δ", new Data.Value<Phi[]>(ret_1_a));
        Phi ret_2_base = new PhMethod(rho, "mmp");
          ret_2_base = new PhLocated(ret_2_base, 85, 6, "Φ.org.eolang.collections.map$found.φ.α1.ρ");
        Phi ret_2 = new PhMethod(ret_2_base, "find-in-list");
          ret_2 = new PhLocated(ret_2, 85, 9, "Φ.org.eolang.collections.map$found.φ.α1");
        ret_2 = new PhCopy(ret_2);
          Phi ret_2_1 = new PhMethod(rho, "key");
            ret_2_1 = new PhLocated(ret_2_1, 85, 23, "Φ.org.eolang.collections.map$found.φ.α1.α0");
          Phi ret_2_2 = new EOmap$EOfound$EOt3$EOt2$EOgenerated_scope_58fee117_fd1a_48bc_a9fa_1cf161ce8884(rho);
            ret_2_2 = new PhLocated(ret_2_2, 85, 29, "Φ.org.eolang.collections.map$found.φ.α1.generated-scope-58fee117-fd1a-48bc-a9fa-1cf161ce8884");
          ret_2 = new PhWith(ret_2, 0, ret_2_1);
          ret_2 = new PhWith(ret_2, 1, ret_2_2);
        ret = new PhWith(ret, 0, ret_1);
        ret = new PhWith(ret, 1, ret_2);
      return ret;
    })));
  }
}
