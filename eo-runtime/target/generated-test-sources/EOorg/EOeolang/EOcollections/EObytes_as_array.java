
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT b5a4c9a 2023-08-17T12:29:38) on 2023-08-18T14:42:30.920527Z; your changes will be discarded on the next build */
package EOorg.EOeolang.EOcollections;

import org.eolang.*;

// <o abstract="" line="28" loc="Φ.org.eolang.collections.bytes-as-array" name="bytes-as-array" original-name="bytes-as-array" pos="0"> 
//   <o line="28" loc="Φ.org.eolang.collections.bytes-as-array.b" name="b" pos="1"/>
//   <o base="slice-byte" line="29" loc="Φ.org.eolang.collections.bytes-as-array.φ" name="@" pos="2" ref="32"> 
//     <o base="org.eolang.tuple" data="tuple" line="30" loc="Φ.org.eolang.collections.bytes-as-array.φ.α0" pos="4"/>
//     <o base="org.eolang.int" data="int" line="31" loc="Φ.org.eolang.collections.bytes-as-array.φ.α1" pos="4">0</o>
//   </o>
//   <o base="bytes-as-array$slice-byte" cut="4" line="32" loc="Φ.org.eolang.collections.bytes-as-array.slice-byte" name="slice-byte" pos="2" ref="32"> 
//     <o as="b" base="b" level="1" loc="Φ.org.eolang.collections.bytes-as-array.slice-byte.α0" ref="28"/>
//   </o>
// </o>
@XmirObject(name = "bytes-as-array", oname = "bytes-as-array", source = "/home/tardis3/eo/eo-runtime/target/eo-test/3-pull/org/eolang/collections/bytes-as-array.eo")
public final class EObytes_as_array extends PhDefault {
  public EObytes_as_array(final Phi sigma) {
    super(sigma);
    this.add("b", new AtFree(/* default */));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new PhMethod(rho, "slice-byte");
        ret = new PhLocated(ret, 29, 2, "Φ.org.eolang.collections.bytes-as-array.φ");
      ret = new PhCopy(ret);
        Phi ret_1 = Phi.Φ.attr("org").get().attr("eolang").get().attr("tuple").get();
          ret_1 = new PhLocated(ret_1, 30, 4, "Φ.org.eolang.collections.bytes-as-array.φ.α0");
          Phi[] ret_1_a = new Phi[0];
          ret_1 = new PhWith(new PhCopy(ret_1), "Δ", new Data.Value<Phi[]>(ret_1_a));
        Phi ret_2 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_2 = new PhLocated(ret_2, 31, 4, "Φ.org.eolang.collections.bytes-as-array.φ.α1");
          ret_2 = new PhWith(ret_2, "Δ", new Data.Value<>(0L));
        ret = new PhWith(ret, 0, ret_1);
        ret = new PhWith(ret, 1, ret_2);
      return ret;
    })));
    this.add("slice-byte", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new EObytes_as_array$EOslice_byte(rho);
        ret = new PhLocated(ret, 32, 2, "Φ.org.eolang.collections.bytes-as-array.slice-byte");
      return ret;
    })));
  }
}
