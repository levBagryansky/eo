
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT b5a4c9a 2023-08-17T12:29:38) on 2023-08-18T14:42:30.920527Z; your changes will be discarded on the next build */
package EOorg.EOeolang.EOcollections;

import org.eolang.*;

// <o abstract="" ancestors="1" line="87" loc="Φ.org.eolang.collections.map$without" name="map$without" original-name="without" parent="map" pos="2"> 
//   <o line="89" loc="Φ.org.eolang.collections.map$without.key" name="key" pos="3"/>
//   <o base="org.eolang.collections.multimap" const="" line="90" loc="Φ.org.eolang.collections.map$without.mmp" name="mmp" pos="4"> 
//     <o base="org.eolang.tuple" data="tuple" line="90" loc="Φ.org.eolang.collections.map$without.mmp.α0" pos="13"/>
//   </o>
//   <o base=".concat-all-arrays" const="" line="91" loc="Φ.org.eolang.collections.map$without.caa" name="caa" pos="7"> 
//     <o base="mmp" line="91" loc="Φ.org.eolang.collections.map$without.caa.ρ" pos="4" ref="90"/>
//     <o base="m" line="91" loc="Φ.org.eolang.collections.map$without.caa.α0" pos="26" ref="87.31.478"/>
//   </o>
//   <o base=".without-in-list" const="" line="92" loc="Φ.org.eolang.collections.map$without.arr" name="arr" pos="7"> 
//     <o base="mmp" line="92" loc="Φ.org.eolang.collections.map$without.arr.ρ" pos="4" ref="90"/>
//     <o base="key" line="92" loc="Φ.org.eolang.collections.map$without.arr.α0" pos="24" ref="89"/>
//     <o base="caa" line="92" loc="Φ.org.eolang.collections.map$without.arr.α1" pos="28" ref="91"/>
//   </o>
//   <o base=".pairs-to-hash" const="" line="93" loc="Φ.org.eolang.collections.map$without.harr" name="harr" pos="7"> 
//     <o base="mmp" line="93" loc="Φ.org.eolang.collections.map$without.harr.ρ" pos="4" ref="90"/>
//     <o base="arr" line="93" loc="Φ.org.eolang.collections.map$without.harr.α0" pos="22" ref="92"/>
//   </o>
//   <o base=".rebuild" const="" line="94" loc="Φ.org.eolang.collections.map$without.table" name="table" pos="7"> 
//     <o base="mmp" line="94" loc="Φ.org.eolang.collections.map$without.table.ρ" pos="4" ref="90"/>
//     <o base="harr" line="94" loc="Φ.org.eolang.collections.map$without.table.α0" pos="16" ref="93"/>
//     <o base="arr" line="94" loc="Φ.org.eolang.collections.map$without.table.α1" pos="21" ref="92"/>
//   </o>
//   <o base="map" line="95" loc="Φ.org.eolang.collections.map$without.mp" name="mp" pos="4" ref="31"> 
//     <o base="table" line="95" loc="Φ.org.eolang.collections.map$without.mp.α0" pos="8" ref="94"/>
//   </o>
//   <o base="org.eolang.seq" line="96" loc="Φ.org.eolang.collections.map$without.φ" name="@" pos="4"> 
//     <o base=".write" line="97" loc="Φ.org.eolang.collections.map$without.φ.α0" pos="26"> 
//       <o base=".elements-amount" line="97" loc="Φ.org.eolang.collections.map$without.φ.α0.ρ" pos="9" scope="scope-be0ca248-3cc5-4ee0-98a3-fbe46178f3da"> 
//         <o base="mp" line="97" loc="Φ.org.eolang.collections.map$without.φ.α0.ρ.ρ" pos="7" ref="95" scope="scope-be0ca248-3cc5-4ee0-98a3-fbe46178f3da"/>
//       </o>
//       <o base=".length" line="97" loc="Φ.org.eolang.collections.map$without.φ.α0.α0" pos="37" scope="scope-5f47bcda-cf3c-4b3d-9e37-cb2a60b16035"> 
//         <o base="arr" line="97" loc="Φ.org.eolang.collections.map$without.φ.α0.α0.ρ" pos="34" ref="92" scope="scope-5f47bcda-cf3c-4b3d-9e37-cb2a60b16035"/>
//       </o>
//     </o>
//     <o base="mp" line="98" loc="Φ.org.eolang.collections.map$without.φ.α1" pos="6" ref="95"/>
//   </o>
//   <o level="1" line="87.31.478" loc="Φ.org.eolang.collections.map$without.m" name="m"/>
// </o>
@XmirObject(name = "map$without", oname = "without", source = "/home/tardis3/eo/eo-runtime/target/eo-test/3-pull/org/eolang/collections/map.eo")
public final class EOmap$EOwithout extends PhDefault {
  public EOmap$EOwithout(final Phi sigma) {
    super(sigma);
    this.add("key", new AtFree(/* default */));
    this.add("mmp", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("collections").get().attr("multimap").get();
        ret = new PhLocated(ret, 90, 4, "Φ.org.eolang.collections.map$without.mmp");
      ret = new PhCopy(ret);
        Phi ret_1 = Phi.Φ.attr("org").get().attr("eolang").get().attr("tuple").get();
          ret_1 = new PhLocated(ret_1, 90, 13, "Φ.org.eolang.collections.map$without.mmp.α0");
          Phi[] ret_1_a = new Phi[0];
          ret_1 = new PhWith(new PhCopy(ret_1), "Δ", new Data.Value<Phi[]>(ret_1_a));
        ret = new PhWith(ret, 0, ret_1);
      ret = new PhConst(ret);
      return ret;
    })));
    this.add("caa", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = new PhMethod(rho, "mmp");
        ret_base = new PhLocated(ret_base, 91, 4, "Φ.org.eolang.collections.map$without.caa.ρ");
      Phi ret = new PhMethod(ret_base, "concat-all-arrays");
        ret = new PhLocated(ret, 91, 7, "Φ.org.eolang.collections.map$without.caa");
      ret = new PhCopy(ret);
        Phi ret_1 = new PhMethod(new PhMethod(rho, "σ"), "m");
          ret_1 = new PhLocated(ret_1, 91, 26, "Φ.org.eolang.collections.map$without.caa.α0");
        ret = new PhWith(ret, 0, ret_1);
      ret = new PhConst(ret);
      return ret;
    })));
    this.add("arr", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = new PhMethod(rho, "mmp");
        ret_base = new PhLocated(ret_base, 92, 4, "Φ.org.eolang.collections.map$without.arr.ρ");
      Phi ret = new PhMethod(ret_base, "without-in-list");
        ret = new PhLocated(ret, 92, 7, "Φ.org.eolang.collections.map$without.arr");
      ret = new PhCopy(ret);
        Phi ret_1 = new PhMethod(rho, "key");
          ret_1 = new PhLocated(ret_1, 92, 24, "Φ.org.eolang.collections.map$without.arr.α0");
        Phi ret_2 = new PhMethod(rho, "caa");
          ret_2 = new PhLocated(ret_2, 92, 28, "Φ.org.eolang.collections.map$without.arr.α1");
        ret = new PhWith(ret, 0, ret_1);
        ret = new PhWith(ret, 1, ret_2);
      ret = new PhConst(ret);
      return ret;
    })));
    this.add("harr", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = new PhMethod(rho, "mmp");
        ret_base = new PhLocated(ret_base, 93, 4, "Φ.org.eolang.collections.map$without.harr.ρ");
      Phi ret = new PhMethod(ret_base, "pairs-to-hash");
        ret = new PhLocated(ret, 93, 7, "Φ.org.eolang.collections.map$without.harr");
      ret = new PhCopy(ret);
        Phi ret_1 = new PhMethod(rho, "arr");
          ret_1 = new PhLocated(ret_1, 93, 22, "Φ.org.eolang.collections.map$without.harr.α0");
        ret = new PhWith(ret, 0, ret_1);
      ret = new PhConst(ret);
      return ret;
    })));
    this.add("table", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = new PhMethod(rho, "mmp");
        ret_base = new PhLocated(ret_base, 94, 4, "Φ.org.eolang.collections.map$without.table.ρ");
      Phi ret = new PhMethod(ret_base, "rebuild");
        ret = new PhLocated(ret, 94, 7, "Φ.org.eolang.collections.map$without.table");
      ret = new PhCopy(ret);
        Phi ret_1 = new PhMethod(rho, "harr");
          ret_1 = new PhLocated(ret_1, 94, 16, "Φ.org.eolang.collections.map$without.table.α0");
        Phi ret_2 = new PhMethod(rho, "arr");
          ret_2 = new PhLocated(ret_2, 94, 21, "Φ.org.eolang.collections.map$without.table.α1");
        ret = new PhWith(ret, 0, ret_1);
        ret = new PhWith(ret, 1, ret_2);
      ret = new PhConst(ret);
      return ret;
    })));
    this.add("mp", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("collections").get().attr("map").get();
        ret = new PhLocated(ret, 95, 4, "Φ.org.eolang.collections.map$without.mp");
      ret = new PhCopy(ret);
        Phi ret_1 = new PhMethod(rho, "table");
          ret_1 = new PhLocated(ret_1, 95, 8, "Φ.org.eolang.collections.map$without.mp.α0");
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("seq").get();
        ret = new PhLocated(ret, 96, 4, "Φ.org.eolang.collections.map$without.φ");
      ret = new PhCopy(ret);
        Phi ret_1_base_base = new PhMethod(rho, "mp");
          ret_1_base_base = new PhLocated(ret_1_base_base, 97, 7, "Φ.org.eolang.collections.map$without.φ.α0.ρ.ρ");
        Phi ret_1_base = new PhMethod(ret_1_base_base, "elements-amount");
          ret_1_base = new PhLocated(ret_1_base, 97, 9, "Φ.org.eolang.collections.map$without.φ.α0.ρ");
        Phi ret_1 = new PhMethod(ret_1_base, "write");
          ret_1 = new PhLocated(ret_1, 97, 26, "Φ.org.eolang.collections.map$without.φ.α0");
        ret_1 = new PhCopy(ret_1);
          Phi ret_1_1_base = new PhMethod(rho, "arr");
            ret_1_1_base = new PhLocated(ret_1_1_base, 97, 34, "Φ.org.eolang.collections.map$without.φ.α0.α0.ρ");
          Phi ret_1_1 = new PhMethod(ret_1_1_base, "length");
            ret_1_1 = new PhLocated(ret_1_1, 97, 37, "Φ.org.eolang.collections.map$without.φ.α0.α0");
          ret_1 = new PhWith(ret_1, 0, ret_1_1);
        Phi ret_2 = new PhMethod(rho, "mp");
          ret_2 = new PhLocated(ret_2, 98, 6, "Φ.org.eolang.collections.map$without.φ.α1");
        ret = new PhWith(ret, 0, ret_1);
        ret = new PhWith(ret, 1, ret_2);
      return ret;
    })));
  }
}
