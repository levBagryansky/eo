
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT b5a4c9a 2023-08-17T12:29:38) on 2023-08-18T14:42:30.920527Z; your changes will be discarded on the next build */
package EOorg.EOeolang.EOcollections;

import org.eolang.*;

// <o abstract="" ancestors="1" line="33" loc="Φ.org.eolang.collections.multimap$keys" name="multimap$keys" original-name="keys" parent="multimap" pos="2"> 
//   <o base=".concat-all-arrays" const="" line="35" loc="Φ.org.eolang.collections.multimap$keys.caa" name="caa" pos="5"> 
//     <o base="^" line="35" loc="Φ.org.eolang.collections.multimap$keys.caa.ρ" pos="4"/>
//     <o base="m" line="35" loc="Φ.org.eolang.collections.multimap$keys.caa.α0" pos="24" ref="33.30.502"/>
//   </o>
//   <o base=".mapped" line="36" loc="Φ.org.eolang.collections.multimap$keys.φ" name="@" pos="4"> 
//     <o base="org.eolang.collections.list" line="37" loc="Φ.org.eolang.collections.multimap$keys.φ.ρ" pos="6"> 
//       <o base="caa" line="38" loc="Φ.org.eolang.collections.multimap$keys.φ.ρ.α0" pos="8" ref="35"/>
//     </o>
//     <o base="multimap$keys$t1$a1" cut="8" line="39" loc="Φ.org.eolang.collections.multimap$keys.φ.α0" pos="6" ref="39"> 
//       <o as="m" base="m" level="2" loc="Φ.org.eolang.collections.multimap$keys.φ.α0.α0" ref="33.30.502"/>
//     </o>
//   </o>
//   <o level="1" line="33.30.502" loc="Φ.org.eolang.collections.multimap$keys.m" name="m"/>
// </o>
@XmirObject(name = "multimap$keys", oname = "keys", source = "/home/tardis3/eo/eo-runtime/target/eo-test/3-pull/org/eolang/collections/multimap.eo")
public final class EOmultimap$EOkeys extends PhDefault {
  public EOmultimap$EOkeys(final Phi sigma) {
    super(sigma);
    this.add("caa", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = new PhMethod(rho, "ρ");
        ret_base = new PhLocated(ret_base, 35, 4, "Φ.org.eolang.collections.multimap$keys.caa.ρ");
      Phi ret = new PhMethod(ret_base, "concat-all-arrays");
        ret = new PhLocated(ret, 35, 5, "Φ.org.eolang.collections.multimap$keys.caa");
      ret = new PhCopy(ret);
        Phi ret_1 = new PhMethod(new PhMethod(rho, "σ"), "m");
          ret_1 = new PhLocated(ret_1, 35, 24, "Φ.org.eolang.collections.multimap$keys.caa.α0");
        ret = new PhWith(ret, 0, ret_1);
      ret = new PhConst(ret);
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = Phi.Φ.attr("org").get().attr("eolang").get().attr("collections").get().attr("list").get();
        ret_base = new PhLocated(ret_base, 37, 6, "Φ.org.eolang.collections.multimap$keys.φ.ρ");
      ret_base = new PhCopy(ret_base);
        Phi ret_base_1 = new PhMethod(rho, "caa");
          ret_base_1 = new PhLocated(ret_base_1, 38, 8, "Φ.org.eolang.collections.multimap$keys.φ.ρ.α0");
        ret_base = new PhWith(ret_base, 0, ret_base_1);
      Phi ret = new PhMethod(ret_base, "mapped");
        ret = new PhLocated(ret, 36, 4, "Φ.org.eolang.collections.multimap$keys.φ");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOmultimap$EOkeys$EOt1$EOa1(rho);
          ret_1 = new PhLocated(ret_1, 39, 6, "Φ.org.eolang.collections.multimap$keys.φ.α0");
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
  }
}
