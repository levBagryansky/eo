
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT b5a4c9a 2023-08-17T12:29:38) on 2023-08-18T14:42:30.920527Z; your changes will be discarded on the next build */
package EOorg.EOeolang.EOcollections;

import org.eolang.*;

// <o abstract="" ancestors="1" line="337" loc="Φ.org.eolang.collections.list$head" name="list$head" original-name="head" parent="list" pos="2"> 
//   <o line="339" loc="Φ.org.eolang.collections.list$head.i" name="i" pos="3"/>
//   <o base="i" const="" line="340" loc="Φ.org.eolang.collections.list$head.index" name="index" pos="4" ref="339"/>
//   <o base=".if" line="342" loc="Φ.org.eolang.collections.list$head.φ" name="@" pos="4"> 
//     <o base=".lte" line="343" loc="Φ.org.eolang.collections.list$head.φ.ρ" pos="11"> 
//       <o base="index" line="343" loc="Φ.org.eolang.collections.list$head.φ.ρ.ρ" pos="6" ref="340"/>
//       <o base="org.eolang.int" data="int" line="343" loc="Φ.org.eolang.collections.list$head.φ.ρ.α0" pos="16">0</o>
//     </o>
//     <o base="list" line="344" loc="Φ.org.eolang.collections.list$head.φ.α0" pos="6" ref="28"> 
//       <o base="org.eolang.tuple" data="tuple" line="344" loc="Φ.org.eolang.collections.list$head.φ.α0.α0" pos="11"/>
//     </o>
//     <o base=".if" line="345" loc="Φ.org.eolang.collections.list$head.φ.α1" pos="6"> 
//       <o base=".gte" line="346" loc="Φ.org.eolang.collections.list$head.φ.α1.ρ" pos="13"> 
//         <o base="index" line="346" loc="Φ.org.eolang.collections.list$head.φ.α1.ρ.ρ" pos="8" ref="340"/>
//         <o base=".length" line="346" loc="Φ.org.eolang.collections.list$head.φ.α1.ρ.α0" pos="20" scope="scope-a7f541f1-daf7-4133-8ad6-7a828a02ffc9"> 
//           <o base="^" line="346" loc="Φ.org.eolang.collections.list$head.φ.α1.ρ.α0.ρ" pos="19" scope="scope-a7f541f1-daf7-4133-8ad6-7a828a02ffc9"/>
//         </o>
//       </o>
//       <o base="^" line="347" loc="Φ.org.eolang.collections.list$head.φ.α1.α0" pos="8"/>
//       <o base=".reducedi" line="348" loc="Φ.org.eolang.collections.list$head.φ.α1.α1" pos="9"> 
//         <o base="^" line="348" loc="Φ.org.eolang.collections.list$head.φ.α1.α1.ρ" pos="8"/>
//         <o base="list" line="349" loc="Φ.org.eolang.collections.list$head.φ.α1.α1.α0" pos="10" ref="28"> 
//           <o base="org.eolang.tuple" data="tuple" line="349" loc="Φ.org.eolang.collections.list$head.φ.α1.α1.α0.α0" pos="15"/>
//         </o>
//         <o base="list$head$t2$t2$t2$a2" cut="480" line="350" loc="Φ.org.eolang.collections.list$head.φ.α1.α1.α1" pos="10" ref="350"> 
//           <o as="index" base="index" level="1" loc="Φ.org.eolang.collections.list$head.φ.α1.α1.α1.α0" ref="340"/>
//         </o>
//       </o>
//     </o>
//   </o>
// </o>
@XmirObject(name = "list$head", oname = "head", source = "/home/tardis3/eo/eo-runtime/target/eo-test/3-pull/org/eolang/collections/list.eo")
public final class EOlist$EOhead extends PhDefault {
  public EOlist$EOhead(final Phi sigma) {
    super(sigma);
    this.add("i", new AtFree(/* default */));
    this.add("index", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new PhMethod(rho, "i");
        ret = new PhLocated(ret, 340, 4, "Φ.org.eolang.collections.list$head.index");
      ret = new PhConst(ret);
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base_base = new PhMethod(rho, "index");
        ret_base_base = new PhLocated(ret_base_base, 343, 6, "Φ.org.eolang.collections.list$head.φ.ρ.ρ");
      Phi ret_base = new PhMethod(ret_base_base, "lte");
        ret_base = new PhLocated(ret_base, 343, 11, "Φ.org.eolang.collections.list$head.φ.ρ");
      ret_base = new PhCopy(ret_base);
        Phi ret_base_1 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_base_1 = new PhLocated(ret_base_1, 343, 16, "Φ.org.eolang.collections.list$head.φ.ρ.α0");
          ret_base_1 = new PhWith(ret_base_1, "Δ", new Data.Value<>(0L));
        ret_base = new PhWith(ret_base, 0, ret_base_1);
      Phi ret = new PhMethod(ret_base, "if");
        ret = new PhLocated(ret, 342, 4, "Φ.org.eolang.collections.list$head.φ");
      ret = new PhCopy(ret);
        Phi ret_1 = Phi.Φ.attr("org").get().attr("eolang").get().attr("collections").get().attr("list").get();
          ret_1 = new PhLocated(ret_1, 344, 6, "Φ.org.eolang.collections.list$head.φ.α0");
        ret_1 = new PhCopy(ret_1);
          Phi ret_1_1 = Phi.Φ.attr("org").get().attr("eolang").get().attr("tuple").get();
            ret_1_1 = new PhLocated(ret_1_1, 344, 11, "Φ.org.eolang.collections.list$head.φ.α0.α0");
            Phi[] ret_1_1_a = new Phi[0];
            ret_1_1 = new PhWith(new PhCopy(ret_1_1), "Δ", new Data.Value<Phi[]>(ret_1_1_a));
          ret_1 = new PhWith(ret_1, 0, ret_1_1);
        Phi ret_2_base_base = new PhMethod(rho, "index");
          ret_2_base_base = new PhLocated(ret_2_base_base, 346, 8, "Φ.org.eolang.collections.list$head.φ.α1.ρ.ρ");
        Phi ret_2_base = new PhMethod(ret_2_base_base, "gte");
          ret_2_base = new PhLocated(ret_2_base, 346, 13, "Φ.org.eolang.collections.list$head.φ.α1.ρ");
        ret_2_base = new PhCopy(ret_2_base);
          Phi ret_2_base_1_base = new PhMethod(rho, "ρ");
            ret_2_base_1_base = new PhLocated(ret_2_base_1_base, 346, 19, "Φ.org.eolang.collections.list$head.φ.α1.ρ.α0.ρ");
          Phi ret_2_base_1 = new PhMethod(ret_2_base_1_base, "length");
            ret_2_base_1 = new PhLocated(ret_2_base_1, 346, 20, "Φ.org.eolang.collections.list$head.φ.α1.ρ.α0");
          ret_2_base = new PhWith(ret_2_base, 0, ret_2_base_1);
        Phi ret_2 = new PhMethod(ret_2_base, "if");
          ret_2 = new PhLocated(ret_2, 345, 6, "Φ.org.eolang.collections.list$head.φ.α1");
        ret_2 = new PhCopy(ret_2);
          Phi ret_2_1 = new PhMethod(rho, "ρ");
            ret_2_1 = new PhLocated(ret_2_1, 347, 8, "Φ.org.eolang.collections.list$head.φ.α1.α0");
          Phi ret_2_2_base = new PhMethod(rho, "ρ");
            ret_2_2_base = new PhLocated(ret_2_2_base, 348, 8, "Φ.org.eolang.collections.list$head.φ.α1.α1.ρ");
          Phi ret_2_2 = new PhMethod(ret_2_2_base, "reducedi");
            ret_2_2 = new PhLocated(ret_2_2, 348, 9, "Φ.org.eolang.collections.list$head.φ.α1.α1");
          ret_2_2 = new PhCopy(ret_2_2);
            Phi ret_2_2_1 = Phi.Φ.attr("org").get().attr("eolang").get().attr("collections").get().attr("list").get();
              ret_2_2_1 = new PhLocated(ret_2_2_1, 349, 10, "Φ.org.eolang.collections.list$head.φ.α1.α1.α0");
            ret_2_2_1 = new PhCopy(ret_2_2_1);
              Phi ret_2_2_1_1 = Phi.Φ.attr("org").get().attr("eolang").get().attr("tuple").get();
                ret_2_2_1_1 = new PhLocated(ret_2_2_1_1, 349, 15, "Φ.org.eolang.collections.list$head.φ.α1.α1.α0.α0");
                Phi[] ret_2_2_1_1_a = new Phi[0];
                ret_2_2_1_1 = new PhWith(new PhCopy(ret_2_2_1_1), "Δ", new Data.Value<Phi[]>(ret_2_2_1_1_a));
              ret_2_2_1 = new PhWith(ret_2_2_1, 0, ret_2_2_1_1);
            Phi ret_2_2_2 = new EOlist$EOhead$EOt2$EOt2$EOt2$EOa2(rho);
              ret_2_2_2 = new PhLocated(ret_2_2_2, 350, 10, "Φ.org.eolang.collections.list$head.φ.α1.α1.α1");
            ret_2_2 = new PhWith(ret_2_2, 0, ret_2_2_1);
            ret_2_2 = new PhWith(ret_2_2, 1, ret_2_2_2);
          ret_2 = new PhWith(ret_2, 0, ret_2_1);
          ret_2 = new PhWith(ret_2, 1, ret_2_2);
        ret = new PhWith(ret, 0, ret_1);
        ret = new PhWith(ret, 1, ret_2);
      return ret;
    })));
  }
}
