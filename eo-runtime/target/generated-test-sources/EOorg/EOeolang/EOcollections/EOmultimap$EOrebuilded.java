
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT b5a4c9a 2023-08-17T12:29:38) on 2023-08-18T14:42:30.920527Z; your changes will be discarded on the next build */
package EOorg.EOeolang.EOcollections;

import org.eolang.*;

// <o abstract="" ancestors="1" line="113" loc="Φ.org.eolang.collections.multimap$rebuilded" name="multimap$rebuilded" original-name="rebuilded" parent="multimap" pos="2"> 
//   <o line="115" loc="Φ.org.eolang.collections.multimap$rebuilded.harr" name="harr" pos="3"/>
//   <o line="115" loc="Φ.org.eolang.collections.multimap$rebuilded.arr" name="arr" pos="8"/>
//   <o base=".mappedi" const="" line="116" loc="Φ.org.eolang.collections.multimap$rebuilded.comparable-pairs" name="comparable-pairs" pos="4"> 
//     <o base="org.eolang.collections.list" line="117" loc="Φ.org.eolang.collections.multimap$rebuilded.comparable-pairs.ρ" pos="6"> 
//       <o base="arr" line="118" loc="Φ.org.eolang.collections.multimap$rebuilded.comparable-pairs.ρ.α0" pos="8" ref="115"/>
//     </o>
//     <o base="multimap$rebuilded$t2$a1" cut="147" line="119" loc="Φ.org.eolang.collections.multimap$rebuilded.comparable-pairs.α0" pos="6" ref="119"> 
//       <o as="harr" base="harr" level="1" loc="Φ.org.eolang.collections.multimap$rebuilded.comparable-pairs.α0.α0" ref="115"/>
//       <o as="arr" base="arr" level="1" loc="Φ.org.eolang.collections.multimap$rebuilded.comparable-pairs.α0.α1" ref="115"/>
//       <o as="comparable-pair" base="comparable-pair" level="1" loc="Φ.org.eolang.collections.multimap$rebuilded.comparable-pairs.α0.α2" ref="150"/>
//     </o>
//   </o>
//   <o base=".sorted" const="" line="125" loc="Φ.org.eolang.collections.multimap$rebuilded.sorted-pairs" name="sorted-pairs" pos="4"> 
//     <o base="org.eolang.collections.list" line="126" loc="Φ.org.eolang.collections.multimap$rebuilded.sorted-pairs.ρ" pos="6"> 
//       <o base="comparable-pairs" line="127" loc="Φ.org.eolang.collections.multimap$rebuilded.sorted-pairs.ρ.α0" pos="8" ref="116"/>
//     </o>
//   </o>
//   <o base="org.eolang.memory" line="128" loc="Φ.org.eolang.collections.multimap$rebuilded.curr-hash" name="curr-hash" pos="4"> 
//     <o base="org.eolang.int" data="int" line="128" loc="Φ.org.eolang.collections.multimap$rebuilded.curr-hash.α0" pos="11">0</o>
//   </o>
//   <o base=".reducedi" const="" line="129" loc="Φ.org.eolang.collections.multimap$rebuilded.almost-res" name="almost-res" pos="4"> 
//     <o base="org.eolang.collections.list" line="130" loc="Φ.org.eolang.collections.multimap$rebuilded.almost-res.ρ" pos="6"> 
//       <o base="sorted-pairs" line="131" loc="Φ.org.eolang.collections.multimap$rebuilded.almost-res.ρ.α0" pos="8" ref="125"/>
//     </o>
//     <o base="org.eolang.tuple" data="tuple" line="132" loc="Φ.org.eolang.collections.multimap$rebuilded.almost-res.α0" pos="6"/>
//     <o base="multimap$rebuilded$t5$a2" cut="172" line="133" loc="Φ.org.eolang.collections.multimap$rebuilded.almost-res.α1" pos="6" ref="133"> 
//       <o as="sorted-pairs" base="sorted-pairs" level="1" loc="Φ.org.eolang.collections.multimap$rebuilded.almost-res.α1.α0" ref="125"/>
//       <o as="curr-hash" base="curr-hash" level="1" loc="Φ.org.eolang.collections.multimap$rebuilded.almost-res.α1.α1" ref="128"/>
//       <o as="fill-to-size" base="fill-to-size" level="1" loc="Φ.org.eolang.collections.multimap$rebuilded.almost-res.α1.α2" ref="158"/>
//       <o as="create-array-by-hash" base="create-array-by-hash" level="1" loc="Φ.org.eolang.collections.multimap$rebuilded.almost-res.α1.α3" ref="166"/>
//     </o>
//   </o>
//   <o base="fill-to-size" line="145" loc="Φ.org.eolang.collections.multimap$rebuilded.φ" name="@" pos="4" ref="158"> 
//     <o base="almost-res" line="146" loc="Φ.org.eolang.collections.multimap$rebuilded.φ.α0" pos="6" ref="129"/>
//     <o base=".length" line="147" loc="Φ.org.eolang.collections.multimap$rebuilded.φ.α1" pos="6"> 
//       <o base="sorted-pairs" line="148" loc="Φ.org.eolang.collections.multimap$rebuilded.φ.α1.ρ" pos="8" ref="125"/>
//     </o>
//   </o>
//   <o base="multimap$rebuilded$comparable-pair" cut="215" line="150" loc="Φ.org.eolang.collections.multimap$rebuilded.comparable-pair" name="comparable-pair" pos="4" ref="150"/>
//   <o base="multimap$rebuilded$fill-to-size" cut="227" line="158" loc="Φ.org.eolang.collections.multimap$rebuilded.fill-to-size" name="fill-to-size" pos="4" ref="158"> 
//     <o as="arr" base="arr" level="1" loc="Φ.org.eolang.collections.multimap$rebuilded.fill-to-size.α0" ref="115"/>
//   </o>
//   <o base="multimap$rebuilded$create-array-by-hash" cut="244" line="166" loc="Φ.org.eolang.collections.multimap$rebuilded.create-array-by-hash" name="create-array-by-hash" pos="4" ref="166"> 
//     <o as="arr" base="arr" level="1" loc="Φ.org.eolang.collections.multimap$rebuilded.create-array-by-hash.α0" ref="115"/>
//   </o>
// </o>
@XmirObject(name = "multimap$rebuilded", oname = "rebuilded", source = "/home/tardis3/eo/eo-runtime/target/eo-test/3-pull/org/eolang/collections/multimap.eo")
public final class EOmultimap$EOrebuilded extends PhDefault {
  public EOmultimap$EOrebuilded(final Phi sigma) {
    super(sigma);
    this.add("harr", new AtFree(/* default */));
    this.add("arr", new AtFree(/* default */));
    this.add("comparable-pairs", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = Phi.Φ.attr("org").get().attr("eolang").get().attr("collections").get().attr("list").get();
        ret_base = new PhLocated(ret_base, 117, 6, "Φ.org.eolang.collections.multimap$rebuilded.comparable-pairs.ρ");
      ret_base = new PhCopy(ret_base);
        Phi ret_base_1 = new PhMethod(rho, "arr");
          ret_base_1 = new PhLocated(ret_base_1, 118, 8, "Φ.org.eolang.collections.multimap$rebuilded.comparable-pairs.ρ.α0");
        ret_base = new PhWith(ret_base, 0, ret_base_1);
      Phi ret = new PhMethod(ret_base, "mappedi");
        ret = new PhLocated(ret, 116, 4, "Φ.org.eolang.collections.multimap$rebuilded.comparable-pairs");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOmultimap$EOrebuilded$EOt2$EOa1(rho);
          ret_1 = new PhLocated(ret_1, 119, 6, "Φ.org.eolang.collections.multimap$rebuilded.comparable-pairs.α0");
        ret = new PhWith(ret, 0, ret_1);
      ret = new PhConst(ret);
      return ret;
    })));
    this.add("sorted-pairs", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = Phi.Φ.attr("org").get().attr("eolang").get().attr("collections").get().attr("list").get();
        ret_base = new PhLocated(ret_base, 126, 6, "Φ.org.eolang.collections.multimap$rebuilded.sorted-pairs.ρ");
      ret_base = new PhCopy(ret_base);
        Phi ret_base_1 = new PhMethod(rho, "comparable-pairs");
          ret_base_1 = new PhLocated(ret_base_1, 127, 8, "Φ.org.eolang.collections.multimap$rebuilded.sorted-pairs.ρ.α0");
        ret_base = new PhWith(ret_base, 0, ret_base_1);
      Phi ret = new PhMethod(ret_base, "sorted");
        ret = new PhLocated(ret, 125, 4, "Φ.org.eolang.collections.multimap$rebuilded.sorted-pairs");
      ret = new PhConst(ret);
      return ret;
    })));
    this.add("curr-hash", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("memory").get();
        ret = new PhLocated(ret, 128, 4, "Φ.org.eolang.collections.multimap$rebuilded.curr-hash");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 128, 11, "Φ.org.eolang.collections.multimap$rebuilded.curr-hash.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>(0L));
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
    this.add("almost-res", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = Phi.Φ.attr("org").get().attr("eolang").get().attr("collections").get().attr("list").get();
        ret_base = new PhLocated(ret_base, 130, 6, "Φ.org.eolang.collections.multimap$rebuilded.almost-res.ρ");
      ret_base = new PhCopy(ret_base);
        Phi ret_base_1 = new PhMethod(rho, "sorted-pairs");
          ret_base_1 = new PhLocated(ret_base_1, 131, 8, "Φ.org.eolang.collections.multimap$rebuilded.almost-res.ρ.α0");
        ret_base = new PhWith(ret_base, 0, ret_base_1);
      Phi ret = new PhMethod(ret_base, "reducedi");
        ret = new PhLocated(ret, 129, 4, "Φ.org.eolang.collections.multimap$rebuilded.almost-res");
      ret = new PhCopy(ret);
        Phi ret_1 = Phi.Φ.attr("org").get().attr("eolang").get().attr("tuple").get();
          ret_1 = new PhLocated(ret_1, 132, 6, "Φ.org.eolang.collections.multimap$rebuilded.almost-res.α0");
          Phi[] ret_1_a = new Phi[0];
          ret_1 = new PhWith(new PhCopy(ret_1), "Δ", new Data.Value<Phi[]>(ret_1_a));
        Phi ret_2 = new EOmultimap$EOrebuilded$EOt5$EOa2(rho);
          ret_2 = new PhLocated(ret_2, 133, 6, "Φ.org.eolang.collections.multimap$rebuilded.almost-res.α1");
        ret = new PhWith(ret, 0, ret_1);
        ret = new PhWith(ret, 1, ret_2);
      ret = new PhConst(ret);
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new PhMethod(rho, "fill-to-size");
        ret = new PhLocated(ret, 145, 4, "Φ.org.eolang.collections.multimap$rebuilded.φ");
      ret = new PhCopy(ret);
        Phi ret_1 = new PhMethod(rho, "almost-res");
          ret_1 = new PhLocated(ret_1, 146, 6, "Φ.org.eolang.collections.multimap$rebuilded.φ.α0");
        Phi ret_2_base = new PhMethod(rho, "sorted-pairs");
          ret_2_base = new PhLocated(ret_2_base, 148, 8, "Φ.org.eolang.collections.multimap$rebuilded.φ.α1.ρ");
        Phi ret_2 = new PhMethod(ret_2_base, "length");
          ret_2 = new PhLocated(ret_2, 147, 6, "Φ.org.eolang.collections.multimap$rebuilded.φ.α1");
        ret = new PhWith(ret, 0, ret_1);
        ret = new PhWith(ret, 1, ret_2);
      return ret;
    })));
    this.add("comparable-pair", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new EOmultimap$EOrebuilded$EOcomparable_pair(rho);
        ret = new PhLocated(ret, 150, 4, "Φ.org.eolang.collections.multimap$rebuilded.comparable-pair");
      return ret;
    })));
    this.add("fill-to-size", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new EOmultimap$EOrebuilded$EOfill_to_size(rho);
        ret = new PhLocated(ret, 158, 4, "Φ.org.eolang.collections.multimap$rebuilded.fill-to-size");
      return ret;
    })));
    this.add("create-array-by-hash", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new EOmultimap$EOrebuilded$EOcreate_array_by_hash(rho);
        ret = new PhLocated(ret, 166, 4, "Φ.org.eolang.collections.multimap$rebuilded.create-array-by-hash");
      return ret;
    })));
  }
}
