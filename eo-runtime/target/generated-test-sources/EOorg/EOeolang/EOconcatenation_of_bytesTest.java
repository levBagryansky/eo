
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT e24f541 2023-09-12T11:41:32) on 2023-10-03T10:45:38.539230Z; your changes will be discarded on the next build */
package EOorg.EOeolang;

import org.eolang.*;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

// <o abstract="" line="296" loc="Φ.org.eolang.concatenation-of-bytes" name="concatenation-of-bytes" original-name="concatenation-of-bytes" pos="0"> 
//   <o base="org.eolang.bytes" data="bytes" line="297" loc="Φ.org.eolang.concatenation-of-bytes.a" name="a" pos="2">02 EF D4 05 5E 78 3A</o>
//   <o base="org.eolang.bytes" data="bytes" line="298" loc="Φ.org.eolang.concatenation-of-bytes.b" name="b" pos="2">12 33 C1 B5 5E 71 55</o>
//   <o base=".eq" line="299" loc="Φ.org.eolang.concatenation-of-bytes.φ" name="@" pos="2"> 
//     <o base=".concat" line="300" loc="Φ.org.eolang.concatenation-of-bytes.φ.ρ" pos="5"> 
//       <o base="a" line="300" loc="Φ.org.eolang.concatenation-of-bytes.φ.ρ.ρ" pos="4" ref="297"/>
//       <o base="b" line="300" loc="Φ.org.eolang.concatenation-of-bytes.φ.ρ.α0" pos="13" ref="298"/>
//     </o>
//     <o base="org.eolang.bytes" data="bytes" line="301" loc="Φ.org.eolang.concatenation-of-bytes.φ.α0" pos="4">02 EF D4 05 5E 78 3A 12 33 C1 B5 5E 71 55</o>
//   </o>
// </o>
@XmirObject(name = "concatenation-of-bytesTest", oname = "concatenation-of-bytes", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/bytes-tests.eo")
public final class EOconcatenation_of_bytesTest extends PhDefault {
    
  public EOconcatenation_of_bytesTest() {
    this.add("a", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new EOorg.EOeolang.EObytes(Phi.Φ);
        ret = new PhLocated(ret, 297, 2, "Φ.org.eolang.concatenation-of-bytes.a");
        ret = new PhWith(ret, "Δ", new Data.Value<>(new byte[] {(byte) 0x02, (byte) 0xEF, (byte) 0xD4, (byte) 0x05, (byte) 0x5E, (byte) 0x78, (byte) 0x3A}));
      return ret;
    })));
    this.add("b", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new EOorg.EOeolang.EObytes(Phi.Φ);
        ret = new PhLocated(ret, 298, 2, "Φ.org.eolang.concatenation-of-bytes.b");
        ret = new PhWith(ret, "Δ", new Data.Value<>(new byte[] {(byte) 0x12, (byte) 0x33, (byte) 0xC1, (byte) 0xB5, (byte) 0x5E, (byte) 0x71, (byte) 0x55}));
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base_base = new PhMethod(rho, "a");
        ret_base_base = new PhLocated(ret_base_base, 300, 4, "Φ.org.eolang.concatenation-of-bytes.φ.ρ.ρ");
      Phi ret_base = new PhMethod(ret_base_base, "concat");
        ret_base = new PhLocated(ret_base, 300, 5, "Φ.org.eolang.concatenation-of-bytes.φ.ρ");
      ret_base = new PhCopy(ret_base);
        Phi ret_base_1 = new PhMethod(rho, "b");
          ret_base_1 = new PhLocated(ret_base_1, 300, 13, "Φ.org.eolang.concatenation-of-bytes.φ.ρ.α0");
        ret_base = new PhWith(ret_base, 0, ret_base_1);
      Phi ret = new PhMethod(ret_base, "eq");
        ret = new PhLocated(ret, 299, 2, "Φ.org.eolang.concatenation-of-bytes.φ");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EObytes(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 301, 4, "Φ.org.eolang.concatenation-of-bytes.φ.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>(new byte[] {(byte) 0x02, (byte) 0xEF, (byte) 0xD4, (byte) 0x05, (byte) 0x5E, (byte) 0x78, (byte) 0x3A, (byte) 0x12, (byte) 0x33, (byte) 0xC1, (byte) 0xB5, (byte) 0x5E, (byte) 0x71, (byte) 0x55}));
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
  }

  @Test
  public void works() throws java.lang.Exception {
    Object obj = new Dataized(new EOconcatenation_of_bytesTest()).take();
    if (obj instanceof String) {
      Assertions.fail(obj.toString());
    } else {
      Assertions.assertTrue((Boolean) obj);
    }
  }
}
