
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT e24f541 2023-09-12T11:41:32) on 2023-10-03T10:45:38.539230Z; your changes will be discarded on the next build */
package EOorg.EOeolang;

import org.eolang.*;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

// <o abstract="" line="40" loc="Φ.org.eolang.switch-strings-case" name="switch-strings-case" original-name="switch-strings-case" pos="0"> 
//   <o base="org.eolang.memory" line="41" loc="Φ.org.eolang.switch-strings-case.password" name="password" pos="2"> 
//     <o base="org.eolang.string" data="string" line="41" loc="Φ.org.eolang.switch-strings-case.password.α0" pos="9">swordfish</o>
//   </o>
//   <o base=".eq" line="42" loc="Φ.org.eolang.switch-strings-case.φ" name="@" pos="2"> 
//     <o base="org.eolang.switch" line="43" loc="Φ.org.eolang.switch-strings-case.φ.ρ" pos="4"> 
//       <o base="org.eolang.tuple" data="tuple" line="44" loc="Φ.org.eolang.switch-strings-case.φ.ρ.α0" pos="6"> 
//         <o base=".eq" line="45" loc="Φ.org.eolang.switch-strings-case.φ.ρ.α0.α0" pos="16"> 
//           <o base="password" line="45" loc="Φ.org.eolang.switch-strings-case.φ.ρ.α0.α0.ρ" pos="8" ref="41"/>
//           <o base="org.eolang.string" data="string" line="45" loc="Φ.org.eolang.switch-strings-case.φ.ρ.α0.α0.α0" pos="20">swordfish</o>
//         </o>
//         <o base="org.eolang.string" data="string" line="46" loc="Φ.org.eolang.switch-strings-case.φ.ρ.α0.α1" pos="8">password is correct!</o>
//       </o>
//       <o base="org.eolang.tuple" data="tuple" line="47" loc="Φ.org.eolang.switch-strings-case.φ.ρ.α1" pos="6"> 
//         <o base=".eq" line="48" loc="Φ.org.eolang.switch-strings-case.φ.ρ.α1.α0" pos="16"> 
//           <o base="password" line="48" loc="Φ.org.eolang.switch-strings-case.φ.ρ.α1.α0.ρ" pos="8" ref="41"/>
//           <o base="org.eolang.string" data="string" line="48" loc="Φ.org.eolang.switch-strings-case.φ.ρ.α1.α0.α0" pos="20"/>
//         </o>
//         <o base="org.eolang.string" data="string" line="49" loc="Φ.org.eolang.switch-strings-case.φ.ρ.α1.α1" pos="8">empty password is not allowed</o>
//       </o>
//       <o base="org.eolang.tuple" data="tuple" line="50" loc="Φ.org.eolang.switch-strings-case.φ.ρ.α2" pos="6"> 
//         <o base="org.eolang.bool" data="bool" line="51" loc="Φ.org.eolang.switch-strings-case.φ.ρ.α2.α0" pos="8">FALSE</o>
//         <o base="org.eolang.string" data="string" line="52" loc="Φ.org.eolang.switch-strings-case.φ.ρ.α2.α1" pos="8">password is wrong</o>
//       </o>
//     </o>
//     <o base="org.eolang.string" data="string" line="53" loc="Φ.org.eolang.switch-strings-case.φ.α0" pos="4">password is correct!</o>
//   </o>
// </o>
@XmirObject(name = "switch-strings-caseTest", oname = "switch-strings-case", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/switch-tests.eo")
public final class EOswitch_strings_caseTest extends PhDefault {
    
  public EOswitch_strings_caseTest() {
    this.add("password", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("memory").get();
        ret = new PhLocated(ret, 41, 2, "Φ.org.eolang.switch-strings-case.password");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOstring(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 41, 9, "Φ.org.eolang.switch-strings-case.password.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>("swordfish"));
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = Phi.Φ.attr("org").get().attr("eolang").get().attr("switch").get();
        ret_base = new PhLocated(ret_base, 43, 4, "Φ.org.eolang.switch-strings-case.φ.ρ");
      ret_base = new PhCopy(ret_base);
        Phi ret_base_1 = Phi.Φ.attr("org").get().attr("eolang").get().attr("tuple").get();
          ret_base_1 = new PhLocated(ret_base_1, 44, 6, "Φ.org.eolang.switch-strings-case.φ.ρ.α0");
          Phi[] ret_base_1_a = new Phi[2];
          Phi ret_base_1_a0_base = new PhMethod(rho, "password");
            ret_base_1_a0_base = new PhLocated(ret_base_1_a0_base, 45, 8, "Φ.org.eolang.switch-strings-case.φ.ρ.α0.α0.ρ");
          Phi ret_base_1_a0 = new PhMethod(ret_base_1_a0_base, "eq");
            ret_base_1_a0 = new PhLocated(ret_base_1_a0, 45, 16, "Φ.org.eolang.switch-strings-case.φ.ρ.α0.α0");
          ret_base_1_a0 = new PhCopy(ret_base_1_a0);
            Phi ret_base_1_a0_1 = new EOorg.EOeolang.EOstring(Phi.Φ);
              ret_base_1_a0_1 = new PhLocated(ret_base_1_a0_1, 45, 20, "Φ.org.eolang.switch-strings-case.φ.ρ.α0.α0.α0");
              ret_base_1_a0_1 = new PhWith(ret_base_1_a0_1, "Δ", new Data.Value<>("swordfish"));
            ret_base_1_a0 = new PhWith(ret_base_1_a0, 0, ret_base_1_a0_1);
          ret_base_1_a[0] = ret_base_1_a0;
          Phi ret_base_1_a1 = new EOorg.EOeolang.EOstring(Phi.Φ);
            ret_base_1_a1 = new PhLocated(ret_base_1_a1, 46, 8, "Φ.org.eolang.switch-strings-case.φ.ρ.α0.α1");
            ret_base_1_a1 = new PhWith(ret_base_1_a1, "Δ", new Data.Value<>("password is correct!"));
          ret_base_1_a[1] = ret_base_1_a1;
          ret_base_1 = new PhWith(new PhCopy(ret_base_1), "Δ", new Data.Value<Phi[]>(ret_base_1_a));
        Phi ret_base_2 = Phi.Φ.attr("org").get().attr("eolang").get().attr("tuple").get();
          ret_base_2 = new PhLocated(ret_base_2, 47, 6, "Φ.org.eolang.switch-strings-case.φ.ρ.α1");
          Phi[] ret_base_2_a = new Phi[2];
          Phi ret_base_2_a0_base = new PhMethod(rho, "password");
            ret_base_2_a0_base = new PhLocated(ret_base_2_a0_base, 48, 8, "Φ.org.eolang.switch-strings-case.φ.ρ.α1.α0.ρ");
          Phi ret_base_2_a0 = new PhMethod(ret_base_2_a0_base, "eq");
            ret_base_2_a0 = new PhLocated(ret_base_2_a0, 48, 16, "Φ.org.eolang.switch-strings-case.φ.ρ.α1.α0");
          ret_base_2_a0 = new PhCopy(ret_base_2_a0);
            Phi ret_base_2_a0_1 = new EOorg.EOeolang.EOstring(Phi.Φ);
              ret_base_2_a0_1 = new PhLocated(ret_base_2_a0_1, 48, 20, "Φ.org.eolang.switch-strings-case.φ.ρ.α1.α0.α0");
              ret_base_2_a0_1 = new PhWith(ret_base_2_a0_1, "Δ", new Data.Value<>(""));
            ret_base_2_a0 = new PhWith(ret_base_2_a0, 0, ret_base_2_a0_1);
          ret_base_2_a[0] = ret_base_2_a0;
          Phi ret_base_2_a1 = new EOorg.EOeolang.EOstring(Phi.Φ);
            ret_base_2_a1 = new PhLocated(ret_base_2_a1, 49, 8, "Φ.org.eolang.switch-strings-case.φ.ρ.α1.α1");
            ret_base_2_a1 = new PhWith(ret_base_2_a1, "Δ", new Data.Value<>("empty password is not allowed"));
          ret_base_2_a[1] = ret_base_2_a1;
          ret_base_2 = new PhWith(new PhCopy(ret_base_2), "Δ", new Data.Value<Phi[]>(ret_base_2_a));
        Phi ret_base_3 = Phi.Φ.attr("org").get().attr("eolang").get().attr("tuple").get();
          ret_base_3 = new PhLocated(ret_base_3, 50, 6, "Φ.org.eolang.switch-strings-case.φ.ρ.α2");
          Phi[] ret_base_3_a = new Phi[2];
          Phi ret_base_3_a0 = new EOorg.EOeolang.EObool(Phi.Φ);
            ret_base_3_a0 = new PhLocated(ret_base_3_a0, 51, 8, "Φ.org.eolang.switch-strings-case.φ.ρ.α2.α0");
            ret_base_3_a0 = new PhWith(ret_base_3_a0, "Δ", new Data.Value<>(Boolean.FALSE));
          ret_base_3_a[0] = ret_base_3_a0;
          Phi ret_base_3_a1 = new EOorg.EOeolang.EOstring(Phi.Φ);
            ret_base_3_a1 = new PhLocated(ret_base_3_a1, 52, 8, "Φ.org.eolang.switch-strings-case.φ.ρ.α2.α1");
            ret_base_3_a1 = new PhWith(ret_base_3_a1, "Δ", new Data.Value<>("password is wrong"));
          ret_base_3_a[1] = ret_base_3_a1;
          ret_base_3 = new PhWith(new PhCopy(ret_base_3), "Δ", new Data.Value<Phi[]>(ret_base_3_a));
        ret_base = new PhWith(ret_base, 0, ret_base_1);
        ret_base = new PhWith(ret_base, 1, ret_base_2);
        ret_base = new PhWith(ret_base, 2, ret_base_3);
      Phi ret = new PhMethod(ret_base, "eq");
        ret = new PhLocated(ret, 42, 2, "Φ.org.eolang.switch-strings-case.φ");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOstring(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 53, 4, "Φ.org.eolang.switch-strings-case.φ.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>("password is correct!"));
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
  }

  @Test
  public void works() throws java.lang.Exception {
    Object obj = new Dataized(new EOswitch_strings_caseTest()).take();
    if (obj instanceof String) {
      Assertions.fail(obj.toString());
    } else {
      Assertions.assertTrue((Boolean) obj);
    }
  }
}
