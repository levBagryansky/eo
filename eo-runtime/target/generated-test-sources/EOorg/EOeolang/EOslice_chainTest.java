
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT e24f541 2023-09-12T11:41:32) on 2023-10-03T10:45:38.539230Z; your changes will be discarded on the next build */
package EOorg.EOeolang;

import org.eolang.*;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

// <o abstract="" line="78" loc="Φ.org.eolang.slice-chain" name="slice-chain" original-name="slice-chain" pos="0"> 
//   <o base="org.eolang.ram" line="79" loc="Φ.org.eolang.slice-chain.r" name="r" pos="2"> 
//     <o base="org.eolang.int" data="int" line="79" loc="Φ.org.eolang.slice-chain.r.α0" pos="6">1024</o>
//   </o>
//   <o base="slice-chain$cut-hello" cut="105" line="80" loc="Φ.org.eolang.slice-chain.cut-hello" name="cut-hello" pos="2" ref="80"> 
//     <o as="r" base="r" level="1" loc="Φ.org.eolang.slice-chain.cut-hello.α0" ref="79"/>
//   </o>
//   <o base=".eq" line="88" loc="Φ.org.eolang.slice-chain.φ" name="@" pos="2"> 
//     <o base="cut-hello" line="89" loc="Φ.org.eolang.slice-chain.φ.ρ" pos="4" ref="80"/>
//     <o base="org.eolang.string" data="string" line="90" loc="Φ.org.eolang.slice-chain.φ.α0" pos="4">H</o>
//   </o>
// </o>
@XmirObject(name = "slice-chainTest", oname = "slice-chain", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/ram-tests.eo")
public final class EOslice_chainTest extends PhDefault {
    
  public EOslice_chainTest() {
    this.add("r", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("ram").get();
        ret = new PhLocated(ret, 79, 2, "Φ.org.eolang.slice-chain.r");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 79, 6, "Φ.org.eolang.slice-chain.r.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>(1024L));
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
    this.add("cut-hello", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new EOω1cut_hello(rho);
        ret = new PhLocated(ret, 80, 2, "Φ.org.eolang.slice-chain.cut-hello");
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = new PhMethod(rho, "cut-hello");
        ret_base = new PhLocated(ret_base, 89, 4, "Φ.org.eolang.slice-chain.φ.ρ");
      Phi ret = new PhMethod(ret_base, "eq");
        ret = new PhLocated(ret, 88, 2, "Φ.org.eolang.slice-chain.φ");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOstring(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 90, 4, "Φ.org.eolang.slice-chain.φ.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>("H"));
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
  }

  @Test
  public void works() throws java.lang.Exception {
    Object obj = new Dataized(new EOslice_chainTest()).take();
    if (obj instanceof String) {
      Assertions.fail(obj.toString());
    } else {
      Assertions.assertTrue((Boolean) obj);
    }
  }

// <o abstract="" ancestors="1" line="80" loc="Φ.org.eolang.slice-chain$cut-hello" name="slice-chain$cut-hello" original-name="cut-hello" parent="slice-chain" pos="2"> 
//   <o base="org.eolang.seq" line="81" loc="Φ.org.eolang.slice-chain$cut-hello.φ" name="@" pos="4"> 
//     <o base=".write" line="82" loc="Φ.org.eolang.slice-chain$cut-hello.φ.α0" pos="6"> 
//       <o base="s" cut="3" line="83" loc="Φ.org.eolang.slice-chain$cut-hello.φ.α0.ρ" ref="83"/>
//       <o base=".as-bytes" line="84" loc="Φ.org.eolang.slice-chain$cut-hello.φ.α0.α0" pos="23"> 
//         <o base="org.eolang.string" data="string" line="84" loc="Φ.org.eolang.slice-chain$cut-hello.φ.α0.α0.ρ" pos="8">Hello, world!</o>
//       </o>
//     </o>
//     <o base=".slice" line="87" loc="Φ.org.eolang.slice-chain$cut-hello.φ.α1" pos="6"> 
//       <o base=".slice" line="86" loc="Φ.org.eolang.slice-chain$cut-hello.φ.α1.ρ" pos="6"> 
//         <o base=".slice" line="85" loc="Φ.org.eolang.slice-chain$cut-hello.φ.α1.ρ.ρ" pos="7"> 
//           <o base="s" line="85" loc="Φ.org.eolang.slice-chain$cut-hello.φ.α1.ρ.ρ.ρ" pos="6" ref="83"/>
//           <o base="org.eolang.int" data="int" line="85" loc="Φ.org.eolang.slice-chain$cut-hello.φ.α1.ρ.ρ.α0" pos="14">0</o>
//           <o base="org.eolang.int" data="int" line="85" loc="Φ.org.eolang.slice-chain$cut-hello.φ.α1.ρ.ρ.α1" pos="16">5</o>
//         </o>
//         <o base="org.eolang.int" data="int" line="86" loc="Φ.org.eolang.slice-chain$cut-hello.φ.α1.ρ.α0" pos="13">0</o>
//         <o base="org.eolang.int" data="int" line="86" loc="Φ.org.eolang.slice-chain$cut-hello.φ.α1.ρ.α1" pos="15">4</o>
//       </o>
//       <o base="org.eolang.int" data="int" line="87" loc="Φ.org.eolang.slice-chain$cut-hello.φ.α1.α0" pos="13">0</o>
//       <o base="org.eolang.int" data="int" line="87" loc="Φ.org.eolang.slice-chain$cut-hello.φ.α1.α1" pos="15">1</o>
//     </o>
//   </o>
//   <o base=".slice" line="83" loc="Φ.org.eolang.slice-chain$cut-hello.s" name="s" pos="9"> 
//     <o base="r" line="83" loc="Φ.org.eolang.slice-chain$cut-hello.s.ρ" pos="8" ref="80.79.459"/>
//     <o base="org.eolang.int" data="int" line="83" loc="Φ.org.eolang.slice-chain$cut-hello.s.α0" pos="16">200</o>
//     <o base="org.eolang.int" data="int" line="83" loc="Φ.org.eolang.slice-chain$cut-hello.s.α1" pos="20">13</o>
//   </o>
//   <o level="1" line="80.79.459" loc="Φ.org.eolang.slice-chain$cut-hello.r" name="r"/>
// </o>
@XmirObject(name = "ω1cut-hello", oname = "cut-hello", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/ram-tests.eo")
public final class EOω1cut_hello extends PhDefault {
    
  public EOω1cut_hello(final Phi sigma) {
    super(sigma);
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("seq").get();
        ret = new PhLocated(ret, 81, 4, "Φ.org.eolang.slice-chain$cut-hello.φ");
      ret = new PhCopy(ret);
        Phi ret_1_base = new PhMethod(rho, "s");
        Phi ret_1 = new PhMethod(ret_1_base, "write");
          ret_1 = new PhLocated(ret_1, 82, 6, "Φ.org.eolang.slice-chain$cut-hello.φ.α0");
        ret_1 = new PhCopy(ret_1);
          Phi ret_1_1_base = new EOorg.EOeolang.EOstring(Phi.Φ);
            ret_1_1_base = new PhLocated(ret_1_1_base, 84, 8, "Φ.org.eolang.slice-chain$cut-hello.φ.α0.α0.ρ");
            ret_1_1_base = new PhWith(ret_1_1_base, "Δ", new Data.Value<>("Hello, world!"));
          Phi ret_1_1 = new PhMethod(ret_1_1_base, "as-bytes");
            ret_1_1 = new PhLocated(ret_1_1, 84, 23, "Φ.org.eolang.slice-chain$cut-hello.φ.α0.α0");
          ret_1 = new PhWith(ret_1, 0, ret_1_1);
        Phi ret_2_base_base_base = new PhMethod(rho, "s");
          ret_2_base_base_base = new PhLocated(ret_2_base_base_base, 85, 6, "Φ.org.eolang.slice-chain$cut-hello.φ.α1.ρ.ρ.ρ");
        Phi ret_2_base_base = new PhMethod(ret_2_base_base_base, "slice");
          ret_2_base_base = new PhLocated(ret_2_base_base, 85, 7, "Φ.org.eolang.slice-chain$cut-hello.φ.α1.ρ.ρ");
        ret_2_base_base = new PhCopy(ret_2_base_base);
          Phi ret_2_base_base_1 = new EOorg.EOeolang.EOint(Phi.Φ);
            ret_2_base_base_1 = new PhLocated(ret_2_base_base_1, 85, 14, "Φ.org.eolang.slice-chain$cut-hello.φ.α1.ρ.ρ.α0");
            ret_2_base_base_1 = new PhWith(ret_2_base_base_1, "Δ", new Data.Value<>(0L));
          Phi ret_2_base_base_2 = new EOorg.EOeolang.EOint(Phi.Φ);
            ret_2_base_base_2 = new PhLocated(ret_2_base_base_2, 85, 16, "Φ.org.eolang.slice-chain$cut-hello.φ.α1.ρ.ρ.α1");
            ret_2_base_base_2 = new PhWith(ret_2_base_base_2, "Δ", new Data.Value<>(5L));
          ret_2_base_base = new PhWith(ret_2_base_base, 0, ret_2_base_base_1);
          ret_2_base_base = new PhWith(ret_2_base_base, 1, ret_2_base_base_2);
        Phi ret_2_base = new PhMethod(ret_2_base_base, "slice");
          ret_2_base = new PhLocated(ret_2_base, 86, 6, "Φ.org.eolang.slice-chain$cut-hello.φ.α1.ρ");
        ret_2_base = new PhCopy(ret_2_base);
          Phi ret_2_base_1 = new EOorg.EOeolang.EOint(Phi.Φ);
            ret_2_base_1 = new PhLocated(ret_2_base_1, 86, 13, "Φ.org.eolang.slice-chain$cut-hello.φ.α1.ρ.α0");
            ret_2_base_1 = new PhWith(ret_2_base_1, "Δ", new Data.Value<>(0L));
          Phi ret_2_base_2 = new EOorg.EOeolang.EOint(Phi.Φ);
            ret_2_base_2 = new PhLocated(ret_2_base_2, 86, 15, "Φ.org.eolang.slice-chain$cut-hello.φ.α1.ρ.α1");
            ret_2_base_2 = new PhWith(ret_2_base_2, "Δ", new Data.Value<>(4L));
          ret_2_base = new PhWith(ret_2_base, 0, ret_2_base_1);
          ret_2_base = new PhWith(ret_2_base, 1, ret_2_base_2);
        Phi ret_2 = new PhMethod(ret_2_base, "slice");
          ret_2 = new PhLocated(ret_2, 87, 6, "Φ.org.eolang.slice-chain$cut-hello.φ.α1");
        ret_2 = new PhCopy(ret_2);
          Phi ret_2_1 = new EOorg.EOeolang.EOint(Phi.Φ);
            ret_2_1 = new PhLocated(ret_2_1, 87, 13, "Φ.org.eolang.slice-chain$cut-hello.φ.α1.α0");
            ret_2_1 = new PhWith(ret_2_1, "Δ", new Data.Value<>(0L));
          Phi ret_2_2 = new EOorg.EOeolang.EOint(Phi.Φ);
            ret_2_2 = new PhLocated(ret_2_2, 87, 15, "Φ.org.eolang.slice-chain$cut-hello.φ.α1.α1");
            ret_2_2 = new PhWith(ret_2_2, "Δ", new Data.Value<>(1L));
          ret_2 = new PhWith(ret_2, 0, ret_2_1);
          ret_2 = new PhWith(ret_2, 1, ret_2_2);
        ret = new PhWith(ret, 0, ret_1);
        ret = new PhWith(ret, 1, ret_2);
      return ret;
    })));
    this.add("s", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = new PhMethod(new PhMethod(rho, "σ"), "r");
        ret_base = new PhLocated(ret_base, 83, 8, "Φ.org.eolang.slice-chain$cut-hello.s.ρ");
      Phi ret = new PhMethod(ret_base, "slice");
        ret = new PhLocated(ret, 83, 9, "Φ.org.eolang.slice-chain$cut-hello.s");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 83, 16, "Φ.org.eolang.slice-chain$cut-hello.s.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>(200L));
        Phi ret_2 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_2 = new PhLocated(ret_2, 83, 20, "Φ.org.eolang.slice-chain$cut-hello.s.α1");
          ret_2 = new PhWith(ret_2, "Δ", new Data.Value<>(13L));
        ret = new PhWith(ret, 0, ret_1);
        ret = new PhWith(ret, 1, ret_2);
      return ret;
    })));
  }
}
}
