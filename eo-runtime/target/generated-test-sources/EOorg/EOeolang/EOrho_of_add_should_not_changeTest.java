
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT e24f541 2023-09-12T11:41:32) on 2023-10-03T10:45:38.539230Z; your changes will be discarded on the next build */
package EOorg.EOeolang;

import org.eolang.*;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

// <o abstract="" line="117" loc="Φ.org.eolang.rho-of-add-should-not-change" name="rho-of-add-should-not-change" original-name="rho-of-add-should-not-change" pos="0"> 
//   <o base="org.eolang.memory" line="118" loc="Φ.org.eolang.rho-of-add-should-not-change.f1" name="f1" pos="2"> 
//     <o base="org.eolang.int" data="int" line="118" loc="Φ.org.eolang.rho-of-add-should-not-change.f1.α0" pos="9">0</o>
//   </o>
//   <o base="org.eolang.cage" line="119" loc="Φ.org.eolang.rho-of-add-should-not-change.f2" name="f2" pos="2"> 
//     <o base="org.eolang.int" data="int" line="119" loc="Φ.org.eolang.rho-of-add-should-not-change.f2.α0" pos="7">0</o>
//   </o>
//   <o base="org.eolang.memory" line="120" loc="Φ.org.eolang.rho-of-add-should-not-change.f0" name="f0" pos="2"> 
//     <o base="org.eolang.int" data="int" line="120" loc="Φ.org.eolang.rho-of-add-should-not-change.f0.α0" pos="9">0</o>
//   </o>
//   <o base="org.eolang.nop" line="121" loc="Φ.org.eolang.rho-of-add-should-not-change.φ" name="@" pos="2"> 
//     <o base="org.eolang.seq" line="122" loc="Φ.org.eolang.rho-of-add-should-not-change.φ.α0" pos="4"> 
//       <o base=".write" line="123" loc="Φ.org.eolang.rho-of-add-should-not-change.φ.α0.α0" pos="8"> 
//         <o base="f0" line="123" loc="Φ.org.eolang.rho-of-add-should-not-change.φ.α0.α0.ρ" pos="6" ref="120"/>
//         <o base="org.eolang.int" data="int" line="123" loc="Φ.org.eolang.rho-of-add-should-not-change.φ.α0.α0.α0" pos="15">0</o>
//       </o>
//       <o base=".write" line="124" loc="Φ.org.eolang.rho-of-add-should-not-change.φ.α0.α1" pos="8"> 
//         <o base="f1" line="124" loc="Φ.org.eolang.rho-of-add-should-not-change.φ.α0.α1.ρ" pos="6" ref="118"/>
//         <o base="org.eolang.int" data="int" line="124" loc="Φ.org.eolang.rho-of-add-should-not-change.φ.α0.α1.α0" pos="15">1</o>
//       </o>
//       <o base=".write" line="125" loc="Φ.org.eolang.rho-of-add-should-not-change.φ.α0.α2" pos="8"> 
//         <o base="f2" line="125" loc="Φ.org.eolang.rho-of-add-should-not-change.φ.α0.α2.ρ" pos="6" ref="119"/>
//         <o base="rho-of-add-should-not-change$t3$t0$t2$generated-scope-9f6ed44c-f4a7-4436-9e2e-6d83c1f2e3bf" cut="134" line="125" loc="Φ.org.eolang.rho-of-add-should-not-change.φ.α0.α2.generated-scope-9f6ed44c-f4a7-4436-9e2e-6d83c1f2e3bf" name="generated-scope-9f6ed44c-f4a7-4436-9e2e-6d83c1f2e3bf" pos="18" ref="125"> 
//           <o as="f1" base="f1" level="1" loc="Φ.org.eolang.rho-of-add-should-not-change.φ.α0.α2.generated-scope-9f6ed44c-f4a7-4436-9e2e-6d83c1f2e3bf.α0" ref="118"/>
//           <o as="f0" base="f0" level="1" loc="Φ.org.eolang.rho-of-add-should-not-change.φ.α0.α2.generated-scope-9f6ed44c-f4a7-4436-9e2e-6d83c1f2e3bf.α1" ref="120"/>
//         </o>
//       </o>
//       <o base=".write" line="126" loc="Φ.org.eolang.rho-of-add-should-not-change.φ.α0.α3" pos="8"> 
//         <o base="f1" line="126" loc="Φ.org.eolang.rho-of-add-should-not-change.φ.α0.α3.ρ" pos="6" ref="118"/>
//         <o base="f2" line="126" loc="Φ.org.eolang.rho-of-add-should-not-change.φ.α0.α3.α0" pos="15" ref="119"/>
//       </o>
//       <o base="org.eolang.bool" data="bool" line="127" loc="Φ.org.eolang.rho-of-add-should-not-change.φ.α0.α4" pos="6">TRUE</o>
//     </o>
//   </o>
// </o>
@XmirObject(name = "rho-of-add-should-not-changeTest", oname = "rho-of-add-should-not-change", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/runtime-tests.eo")
public final class EOrho_of_add_should_not_changeTest extends PhDefault {
    
  public EOrho_of_add_should_not_changeTest() {
    this.add("f1", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("memory").get();
        ret = new PhLocated(ret, 118, 2, "Φ.org.eolang.rho-of-add-should-not-change.f1");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 118, 9, "Φ.org.eolang.rho-of-add-should-not-change.f1.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>(0L));
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
    this.add("f2", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("cage").get();
        ret = new PhLocated(ret, 119, 2, "Φ.org.eolang.rho-of-add-should-not-change.f2");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 119, 7, "Φ.org.eolang.rho-of-add-should-not-change.f2.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>(0L));
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
    this.add("f0", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("memory").get();
        ret = new PhLocated(ret, 120, 2, "Φ.org.eolang.rho-of-add-should-not-change.f0");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 120, 9, "Φ.org.eolang.rho-of-add-should-not-change.f0.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>(0L));
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("nop").get();
        ret = new PhLocated(ret, 121, 2, "Φ.org.eolang.rho-of-add-should-not-change.φ");
      ret = new PhCopy(ret);
        Phi ret_1 = Phi.Φ.attr("org").get().attr("eolang").get().attr("seq").get();
          ret_1 = new PhLocated(ret_1, 122, 4, "Φ.org.eolang.rho-of-add-should-not-change.φ.α0");
        ret_1 = new PhCopy(ret_1);
          Phi ret_1_1_base = new PhMethod(rho, "f0");
            ret_1_1_base = new PhLocated(ret_1_1_base, 123, 6, "Φ.org.eolang.rho-of-add-should-not-change.φ.α0.α0.ρ");
          Phi ret_1_1 = new PhMethod(ret_1_1_base, "write");
            ret_1_1 = new PhLocated(ret_1_1, 123, 8, "Φ.org.eolang.rho-of-add-should-not-change.φ.α0.α0");
          ret_1_1 = new PhCopy(ret_1_1);
            Phi ret_1_1_1 = new EOorg.EOeolang.EOint(Phi.Φ);
              ret_1_1_1 = new PhLocated(ret_1_1_1, 123, 15, "Φ.org.eolang.rho-of-add-should-not-change.φ.α0.α0.α0");
              ret_1_1_1 = new PhWith(ret_1_1_1, "Δ", new Data.Value<>(0L));
            ret_1_1 = new PhWith(ret_1_1, 0, ret_1_1_1);
          Phi ret_1_2_base = new PhMethod(rho, "f1");
            ret_1_2_base = new PhLocated(ret_1_2_base, 124, 6, "Φ.org.eolang.rho-of-add-should-not-change.φ.α0.α1.ρ");
          Phi ret_1_2 = new PhMethod(ret_1_2_base, "write");
            ret_1_2 = new PhLocated(ret_1_2, 124, 8, "Φ.org.eolang.rho-of-add-should-not-change.φ.α0.α1");
          ret_1_2 = new PhCopy(ret_1_2);
            Phi ret_1_2_1 = new EOorg.EOeolang.EOint(Phi.Φ);
              ret_1_2_1 = new PhLocated(ret_1_2_1, 124, 15, "Φ.org.eolang.rho-of-add-should-not-change.φ.α0.α1.α0");
              ret_1_2_1 = new PhWith(ret_1_2_1, "Δ", new Data.Value<>(1L));
            ret_1_2 = new PhWith(ret_1_2, 0, ret_1_2_1);
          Phi ret_1_3_base = new PhMethod(rho, "f2");
            ret_1_3_base = new PhLocated(ret_1_3_base, 125, 6, "Φ.org.eolang.rho-of-add-should-not-change.φ.α0.α2.ρ");
          Phi ret_1_3 = new PhMethod(ret_1_3_base, "write");
            ret_1_3 = new PhLocated(ret_1_3, 125, 8, "Φ.org.eolang.rho-of-add-should-not-change.φ.α0.α2");
          ret_1_3 = new PhCopy(ret_1_3);
            Phi ret_1_3_1 = new EOω1t3$EOt0$EOt2$EOgenerated_scope_9f6ed44c_f4a7_4436_9e2e_6d83c1f2e3bf(rho);
              ret_1_3_1 = new PhLocated(ret_1_3_1, 125, 18, "Φ.org.eolang.rho-of-add-should-not-change.φ.α0.α2.generated-scope-9f6ed44c-f4a7-4436-9e2e-6d83c1f2e3bf");
            ret_1_3 = new PhWith(ret_1_3, 0, ret_1_3_1);
          Phi ret_1_4_base = new PhMethod(rho, "f1");
            ret_1_4_base = new PhLocated(ret_1_4_base, 126, 6, "Φ.org.eolang.rho-of-add-should-not-change.φ.α0.α3.ρ");
          Phi ret_1_4 = new PhMethod(ret_1_4_base, "write");
            ret_1_4 = new PhLocated(ret_1_4, 126, 8, "Φ.org.eolang.rho-of-add-should-not-change.φ.α0.α3");
          ret_1_4 = new PhCopy(ret_1_4);
            Phi ret_1_4_1 = new PhMethod(rho, "f2");
              ret_1_4_1 = new PhLocated(ret_1_4_1, 126, 15, "Φ.org.eolang.rho-of-add-should-not-change.φ.α0.α3.α0");
            ret_1_4 = new PhWith(ret_1_4, 0, ret_1_4_1);
          Phi ret_1_5 = new EOorg.EOeolang.EObool(Phi.Φ);
            ret_1_5 = new PhLocated(ret_1_5, 127, 6, "Φ.org.eolang.rho-of-add-should-not-change.φ.α0.α4");
            ret_1_5 = new PhWith(ret_1_5, "Δ", new Data.Value<>(Boolean.TRUE));
          ret_1 = new PhWith(ret_1, 0, ret_1_1);
          ret_1 = new PhWith(ret_1, 1, ret_1_2);
          ret_1 = new PhWith(ret_1, 2, ret_1_3);
          ret_1 = new PhWith(ret_1, 3, ret_1_4);
          ret_1 = new PhWith(ret_1, 4, ret_1_5);
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
  }

  @Test
  public void works() throws java.lang.Exception {
    Object obj = new Dataized(new EOrho_of_add_should_not_changeTest()).take();
    if (obj instanceof String) {
      Assertions.fail(obj.toString());
    } else {
      Assertions.assertTrue((Boolean) obj);
    }
  }

// <o abstract="" ancestors="1" line="125" loc="Φ.org.eolang.rho-of-add-should-not-change$t3$t0$t2$generated-scope-9f6ed44c-f4a7-4436-9e2e-6d83c1f2e3bf" name="rho-of-add-should-not-change$t3$t0$t2$generated-scope-9f6ed44c-f4a7-4436-9e2e-6d83c1f2e3bf" original-name="generated-scope-9f6ed44c-f4a7-4436-9e2e-6d83c1f2e3bf" parent="rho-of-add-should-not-change" pos="18"> 
//   <o base=".plus" line="125" loc="Φ.org.eolang.rho-of-add-should-not-change$t3$t0$t2$generated-scope-9f6ed44c-f4a7-4436-9e2e-6d83c1f2e3bf.org.eolang.scope-9f6ed44c-f4a7-4436-9e2e-6d83c1f2e3bf" name="org.eolang.scope-9f6ed44c-f4a7-4436-9e2e-6d83c1f2e3bf" pos="18" scope="scope-9f6ed44c-f4a7-4436-9e2e-6d83c1f2e3bf"> 
//     <o base="f0" line="125" loc="Φ.org.eolang.rho-of-add-should-not-change$t3$t0$t2$generated-scope-9f6ed44c-f4a7-4436-9e2e-6d83c1f2e3bf.org.eolang.scope-9f6ed44c-f4a7-4436-9e2e-6d83c1f2e3bf.ρ" pos="16" ref="125.120.459" scope="scope-9f6ed44c-f4a7-4436-9e2e-6d83c1f2e3bf"/>
//     <o base="f1" line="125" loc="Φ.org.eolang.rho-of-add-should-not-change$t3$t0$t2$generated-scope-9f6ed44c-f4a7-4436-9e2e-6d83c1f2e3bf.org.eolang.scope-9f6ed44c-f4a7-4436-9e2e-6d83c1f2e3bf.α0" pos="24" ref="125.118.459" scope="scope-9f6ed44c-f4a7-4436-9e2e-6d83c1f2e3bf"/>
//   </o>
//   <o base="org.eolang.scope-9f6ed44c-f4a7-4436-9e2e-6d83c1f2e3bf" line="125" loc="Φ.org.eolang.rho-of-add-should-not-change$t3$t0$t2$generated-scope-9f6ed44c-f4a7-4436-9e2e-6d83c1f2e3bf.φ" name="@" pos="18" ref="125"/>
//   <o level="1" line="125.118.459" loc="Φ.org.eolang.rho-of-add-should-not-change$t3$t0$t2$generated-scope-9f6ed44c-f4a7-4436-9e2e-6d83c1f2e3bf.f1" name="f1"/>
//   <o level="1" line="125.120.459" loc="Φ.org.eolang.rho-of-add-should-not-change$t3$t0$t2$generated-scope-9f6ed44c-f4a7-4436-9e2e-6d83c1f2e3bf.f0" name="f0"/>
// </o>
@XmirObject(name = "ω1t3$t0$t2$generated-scope-9f6ed44c-f4a7-4436-9e2e-6d83c1f2e3bf", oname = "generated-scope-9f6ed44c-f4a7-4436-9e2e-6d83c1f2e3bf", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/runtime-tests.eo")
public final class EOω1t3$EOt0$EOt2$EOgenerated_scope_9f6ed44c_f4a7_4436_9e2e_6d83c1f2e3bf extends PhDefault {
    
  public EOω1t3$EOt0$EOt2$EOgenerated_scope_9f6ed44c_f4a7_4436_9e2e_6d83c1f2e3bf(final Phi sigma) {
    super(sigma);
    this.add("org.eolang.scope-9f6ed44c-f4a7-4436-9e2e-6d83c1f2e3bf", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = new PhMethod(new PhMethod(rho, "σ"), "f0");
        ret_base = new PhLocated(ret_base, 125, 16, "Φ.org.eolang.rho-of-add-should-not-change$t3$t0$t2$generated-scope-9f6ed44c-f4a7-4436-9e2e-6d83c1f2e3bf.org.eolang.scope-9f6ed44c-f4a7-4436-9e2e-6d83c1f2e3bf.ρ");
      Phi ret = new PhMethod(ret_base, "plus");
        ret = new PhLocated(ret, 125, 18, "Φ.org.eolang.rho-of-add-should-not-change$t3$t0$t2$generated-scope-9f6ed44c-f4a7-4436-9e2e-6d83c1f2e3bf.org.eolang.scope-9f6ed44c-f4a7-4436-9e2e-6d83c1f2e3bf");
      ret = new PhCopy(ret);
        Phi ret_1 = new PhMethod(new PhMethod(rho, "σ"), "f1");
          ret_1 = new PhLocated(ret_1, 125, 24, "Φ.org.eolang.rho-of-add-should-not-change$t3$t0$t2$generated-scope-9f6ed44c-f4a7-4436-9e2e-6d83c1f2e3bf.org.eolang.scope-9f6ed44c-f4a7-4436-9e2e-6d83c1f2e3bf.α0");
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new PhMethod(rho, "org.eolang.scope-9f6ed44c-f4a7-4436-9e2e-6d83c1f2e3bf");
        ret = new PhLocated(ret, 125, 18, "Φ.org.eolang.rho-of-add-should-not-change$t3$t0$t2$generated-scope-9f6ed44c-f4a7-4436-9e2e-6d83c1f2e3bf.φ");
      return ret;
    })));
  }
}
}
