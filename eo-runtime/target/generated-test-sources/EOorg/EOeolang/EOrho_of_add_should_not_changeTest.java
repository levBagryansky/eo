
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT b5a4c9a 2023-08-17T12:29:38) on 2023-08-18T14:42:30.920527Z; your changes will be discarded on the next build */
package EOorg.EOeolang;

import org.eolang.*;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

// <o abstract="" line="122" loc="Φ.org.eolang.rho-of-add-should-not-change" name="rho-of-add-should-not-change" original-name="rho-of-add-should-not-change" pos="0"> 
//   <o base="org.eolang.memory" line="123" loc="Φ.org.eolang.rho-of-add-should-not-change.f1" name="f1" pos="2"> 
//     <o base="org.eolang.int" data="int" line="123" loc="Φ.org.eolang.rho-of-add-should-not-change.f1.α0" pos="9">0</o>
//   </o>
//   <o base="org.eolang.cage" line="124" loc="Φ.org.eolang.rho-of-add-should-not-change.f2" name="f2" pos="2"> 
//     <o base="org.eolang.int" data="int" line="124" loc="Φ.org.eolang.rho-of-add-should-not-change.f2.α0" pos="7">0</o>
//   </o>
//   <o base="org.eolang.memory" line="125" loc="Φ.org.eolang.rho-of-add-should-not-change.f0" name="f0" pos="2"> 
//     <o base="org.eolang.int" data="int" line="125" loc="Φ.org.eolang.rho-of-add-should-not-change.f0.α0" pos="9">0</o>
//   </o>
//   <o base="org.eolang.nop" line="126" loc="Φ.org.eolang.rho-of-add-should-not-change.φ" name="@" pos="2"> 
//     <o base="org.eolang.hamcrest.assert-that" line="127" loc="Φ.org.eolang.rho-of-add-should-not-change.φ.α0" pos="4"> 
//       <o base="org.eolang.seq" line="128" loc="Φ.org.eolang.rho-of-add-should-not-change.φ.α0.α0" pos="6"> 
//         <o base=".write" line="129" loc="Φ.org.eolang.rho-of-add-should-not-change.φ.α0.α0.α0" pos="10"> 
//           <o base="f0" line="129" loc="Φ.org.eolang.rho-of-add-should-not-change.φ.α0.α0.α0.ρ" pos="8" ref="125"/>
//           <o base="org.eolang.int" data="int" line="129" loc="Φ.org.eolang.rho-of-add-should-not-change.φ.α0.α0.α0.α0" pos="17">0</o>
//         </o>
//         <o base=".write" line="130" loc="Φ.org.eolang.rho-of-add-should-not-change.φ.α0.α0.α1" pos="10"> 
//           <o base="f1" line="130" loc="Φ.org.eolang.rho-of-add-should-not-change.φ.α0.α0.α1.ρ" pos="8" ref="123"/>
//           <o base="org.eolang.int" data="int" line="130" loc="Φ.org.eolang.rho-of-add-should-not-change.φ.α0.α0.α1.α0" pos="17">1</o>
//         </o>
//         <o base=".write" line="131" loc="Φ.org.eolang.rho-of-add-should-not-change.φ.α0.α0.α2" pos="10"> 
//           <o base="f2" line="131" loc="Φ.org.eolang.rho-of-add-should-not-change.φ.α0.α0.α2.ρ" pos="8" ref="124"/>
//           <o base="rho-of-add-should-not-change$t3$t0$t0$t2$generated-scope-e3b4088e-0842-4267-b5b5-7453d4316b41" cut="151" line="131" loc="Φ.org.eolang.rho-of-add-should-not-change.φ.α0.α0.α2.generated-scope-e3b4088e-0842-4267-b5b5-7453d4316b41" name="generated-scope-e3b4088e-0842-4267-b5b5-7453d4316b41" pos="20" ref="131"> 
//             <o as="f1" base="f1" level="1" loc="Φ.org.eolang.rho-of-add-should-not-change.φ.α0.α0.α2.generated-scope-e3b4088e-0842-4267-b5b5-7453d4316b41.α0" ref="123"/>
//             <o as="f0" base="f0" level="1" loc="Φ.org.eolang.rho-of-add-should-not-change.φ.α0.α0.α2.generated-scope-e3b4088e-0842-4267-b5b5-7453d4316b41.α1" ref="125"/>
//           </o>
//         </o>
//         <o base=".write" line="132" loc="Φ.org.eolang.rho-of-add-should-not-change.φ.α0.α0.α3" pos="10"> 
//           <o base="f1" line="132" loc="Φ.org.eolang.rho-of-add-should-not-change.φ.α0.α0.α3.ρ" pos="8" ref="123"/>
//           <o base="f2" line="132" loc="Φ.org.eolang.rho-of-add-should-not-change.φ.α0.α0.α3.α0" pos="17" ref="124"/>
//         </o>
//         <o base="org.eolang.bool" data="bool" line="133" loc="Φ.org.eolang.rho-of-add-should-not-change.φ.α0.α0.α4" pos="8">TRUE</o>
//       </o>
//       <o base=".equal-to" line="134" loc="Φ.org.eolang.rho-of-add-should-not-change.φ.α0.α1" pos="7"> 
//         <o base="$" line="134" loc="Φ.org.eolang.rho-of-add-should-not-change.φ.α0.α1.ρ" pos="6"/>
//         <o base="org.eolang.bool" data="bool" line="134" loc="Φ.org.eolang.rho-of-add-should-not-change.φ.α0.α1.α0" pos="17">TRUE</o>
//       </o>
//     </o>
//   </o>
// </o>
@XmirObject(name = "rho-of-add-should-not-changeTest", oname = "rho-of-add-should-not-change", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/runtime-tests.eo")
public final class EOrho_of_add_should_not_changeTest extends PhDefault {
  public EOrho_of_add_should_not_changeTest() {
    this.add("f1", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("memory").get();
        ret = new PhLocated(ret, 123, 2, "Φ.org.eolang.rho-of-add-should-not-change.f1");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 123, 9, "Φ.org.eolang.rho-of-add-should-not-change.f1.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>(0L));
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
    this.add("f2", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("cage").get();
        ret = new PhLocated(ret, 124, 2, "Φ.org.eolang.rho-of-add-should-not-change.f2");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 124, 7, "Φ.org.eolang.rho-of-add-should-not-change.f2.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>(0L));
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
    this.add("f0", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("memory").get();
        ret = new PhLocated(ret, 125, 2, "Φ.org.eolang.rho-of-add-should-not-change.f0");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 125, 9, "Φ.org.eolang.rho-of-add-should-not-change.f0.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>(0L));
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("nop").get();
        ret = new PhLocated(ret, 126, 2, "Φ.org.eolang.rho-of-add-should-not-change.φ");
      ret = new PhCopy(ret);
        Phi ret_1 = Phi.Φ.attr("org").get().attr("eolang").get().attr("hamcrest").get().attr("assert-that").get();
          ret_1 = new PhLocated(ret_1, 127, 4, "Φ.org.eolang.rho-of-add-should-not-change.φ.α0");
        ret_1 = new PhCopy(ret_1);
          Phi ret_1_1 = Phi.Φ.attr("org").get().attr("eolang").get().attr("seq").get();
            ret_1_1 = new PhLocated(ret_1_1, 128, 6, "Φ.org.eolang.rho-of-add-should-not-change.φ.α0.α0");
          ret_1_1 = new PhCopy(ret_1_1);
            Phi ret_1_1_1_base = new PhMethod(rho, "f0");
              ret_1_1_1_base = new PhLocated(ret_1_1_1_base, 129, 8, "Φ.org.eolang.rho-of-add-should-not-change.φ.α0.α0.α0.ρ");
            Phi ret_1_1_1 = new PhMethod(ret_1_1_1_base, "write");
              ret_1_1_1 = new PhLocated(ret_1_1_1, 129, 10, "Φ.org.eolang.rho-of-add-should-not-change.φ.α0.α0.α0");
            ret_1_1_1 = new PhCopy(ret_1_1_1);
              Phi ret_1_1_1_1 = new EOorg.EOeolang.EOint(Phi.Φ);
                ret_1_1_1_1 = new PhLocated(ret_1_1_1_1, 129, 17, "Φ.org.eolang.rho-of-add-should-not-change.φ.α0.α0.α0.α0");
                ret_1_1_1_1 = new PhWith(ret_1_1_1_1, "Δ", new Data.Value<>(0L));
              ret_1_1_1 = new PhWith(ret_1_1_1, 0, ret_1_1_1_1);
            Phi ret_1_1_2_base = new PhMethod(rho, "f1");
              ret_1_1_2_base = new PhLocated(ret_1_1_2_base, 130, 8, "Φ.org.eolang.rho-of-add-should-not-change.φ.α0.α0.α1.ρ");
            Phi ret_1_1_2 = new PhMethod(ret_1_1_2_base, "write");
              ret_1_1_2 = new PhLocated(ret_1_1_2, 130, 10, "Φ.org.eolang.rho-of-add-should-not-change.φ.α0.α0.α1");
            ret_1_1_2 = new PhCopy(ret_1_1_2);
              Phi ret_1_1_2_1 = new EOorg.EOeolang.EOint(Phi.Φ);
                ret_1_1_2_1 = new PhLocated(ret_1_1_2_1, 130, 17, "Φ.org.eolang.rho-of-add-should-not-change.φ.α0.α0.α1.α0");
                ret_1_1_2_1 = new PhWith(ret_1_1_2_1, "Δ", new Data.Value<>(1L));
              ret_1_1_2 = new PhWith(ret_1_1_2, 0, ret_1_1_2_1);
            Phi ret_1_1_3_base = new PhMethod(rho, "f2");
              ret_1_1_3_base = new PhLocated(ret_1_1_3_base, 131, 8, "Φ.org.eolang.rho-of-add-should-not-change.φ.α0.α0.α2.ρ");
            Phi ret_1_1_3 = new PhMethod(ret_1_1_3_base, "write");
              ret_1_1_3 = new PhLocated(ret_1_1_3, 131, 10, "Φ.org.eolang.rho-of-add-should-not-change.φ.α0.α0.α2");
            ret_1_1_3 = new PhCopy(ret_1_1_3);
              Phi ret_1_1_3_1 = new EOω1t3$EOt0$EOt0$EOt2$EOgenerated_scope_e3b4088e_0842_4267_b5b5_7453d4316b41(rho);
                ret_1_1_3_1 = new PhLocated(ret_1_1_3_1, 131, 20, "Φ.org.eolang.rho-of-add-should-not-change.φ.α0.α0.α2.generated-scope-e3b4088e-0842-4267-b5b5-7453d4316b41");
              ret_1_1_3 = new PhWith(ret_1_1_3, 0, ret_1_1_3_1);
            Phi ret_1_1_4_base = new PhMethod(rho, "f1");
              ret_1_1_4_base = new PhLocated(ret_1_1_4_base, 132, 8, "Φ.org.eolang.rho-of-add-should-not-change.φ.α0.α0.α3.ρ");
            Phi ret_1_1_4 = new PhMethod(ret_1_1_4_base, "write");
              ret_1_1_4 = new PhLocated(ret_1_1_4, 132, 10, "Φ.org.eolang.rho-of-add-should-not-change.φ.α0.α0.α3");
            ret_1_1_4 = new PhCopy(ret_1_1_4);
              Phi ret_1_1_4_1 = new PhMethod(rho, "f2");
                ret_1_1_4_1 = new PhLocated(ret_1_1_4_1, 132, 17, "Φ.org.eolang.rho-of-add-should-not-change.φ.α0.α0.α3.α0");
              ret_1_1_4 = new PhWith(ret_1_1_4, 0, ret_1_1_4_1);
            Phi ret_1_1_5 = new EOorg.EOeolang.EObool(Phi.Φ);
              ret_1_1_5 = new PhLocated(ret_1_1_5, 133, 8, "Φ.org.eolang.rho-of-add-should-not-change.φ.α0.α0.α4");
              ret_1_1_5 = new PhWith(ret_1_1_5, "Δ", new Data.Value<>(Boolean.TRUE));
            ret_1_1 = new PhWith(ret_1_1, 0, ret_1_1_1);
            ret_1_1 = new PhWith(ret_1_1, 1, ret_1_1_2);
            ret_1_1 = new PhWith(ret_1_1, 2, ret_1_1_3);
            ret_1_1 = new PhWith(ret_1_1, 3, ret_1_1_4);
            ret_1_1 = new PhWith(ret_1_1, 4, ret_1_1_5);
          Phi ret_1_2_base = rho;
            ret_1_2_base = new PhLocated(ret_1_2_base, 134, 6, "Φ.org.eolang.rho-of-add-should-not-change.φ.α0.α1.ρ");
          Phi ret_1_2 = new PhMethod(ret_1_2_base, "equal-to");
            ret_1_2 = new PhLocated(ret_1_2, 134, 7, "Φ.org.eolang.rho-of-add-should-not-change.φ.α0.α1");
          ret_1_2 = new PhCopy(ret_1_2);
            Phi ret_1_2_1 = new EOorg.EOeolang.EObool(Phi.Φ);
              ret_1_2_1 = new PhLocated(ret_1_2_1, 134, 17, "Φ.org.eolang.rho-of-add-should-not-change.φ.α0.α1.α0");
              ret_1_2_1 = new PhWith(ret_1_2_1, "Δ", new Data.Value<>(Boolean.TRUE));
            ret_1_2 = new PhWith(ret_1_2, 0, ret_1_2_1);
          ret_1 = new PhWith(ret_1, 0, ret_1_1);
          ret_1 = new PhWith(ret_1, 1, ret_1_2);
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
  }

  @Test
  public void works() throws java.lang.Exception {
    Object obj = new Dataized(new EOrho_of_add_should_not_changeTest()).take();
    if (obj instanceof String) {
      Assertions.fail(obj.toString());
    } else {
      Assertions.assertTrue((Boolean) obj);
    }
  }

// <o abstract="" ancestors="1" line="131" loc="Φ.org.eolang.rho-of-add-should-not-change$t3$t0$t0$t2$generated-scope-e3b4088e-0842-4267-b5b5-7453d4316b41" name="rho-of-add-should-not-change$t3$t0$t0$t2$generated-scope-e3b4088e-0842-4267-b5b5-7453d4316b41" original-name="generated-scope-e3b4088e-0842-4267-b5b5-7453d4316b41" parent="rho-of-add-should-not-change" pos="20"> 
//   <o base=".plus" line="131" loc="Φ.org.eolang.rho-of-add-should-not-change$t3$t0$t0$t2$generated-scope-e3b4088e-0842-4267-b5b5-7453d4316b41.org.eolang.scope-e3b4088e-0842-4267-b5b5-7453d4316b41" name="org.eolang.scope-e3b4088e-0842-4267-b5b5-7453d4316b41" pos="20" scope="scope-e3b4088e-0842-4267-b5b5-7453d4316b41"> 
//     <o base="f0" line="131" loc="Φ.org.eolang.rho-of-add-should-not-change$t3$t0$t0$t2$generated-scope-e3b4088e-0842-4267-b5b5-7453d4316b41.org.eolang.scope-e3b4088e-0842-4267-b5b5-7453d4316b41.ρ" pos="18" ref="131.125.463" scope="scope-e3b4088e-0842-4267-b5b5-7453d4316b41"/>
//     <o base="f1" line="131" loc="Φ.org.eolang.rho-of-add-should-not-change$t3$t0$t0$t2$generated-scope-e3b4088e-0842-4267-b5b5-7453d4316b41.org.eolang.scope-e3b4088e-0842-4267-b5b5-7453d4316b41.α0" pos="26" ref="131.123.463" scope="scope-e3b4088e-0842-4267-b5b5-7453d4316b41"/>
//   </o>
//   <o base="org.eolang.scope-e3b4088e-0842-4267-b5b5-7453d4316b41" line="131" loc="Φ.org.eolang.rho-of-add-should-not-change$t3$t0$t0$t2$generated-scope-e3b4088e-0842-4267-b5b5-7453d4316b41.φ" name="@" pos="20" ref="131"/>
//   <o level="1" line="131.123.463" loc="Φ.org.eolang.rho-of-add-should-not-change$t3$t0$t0$t2$generated-scope-e3b4088e-0842-4267-b5b5-7453d4316b41.f1" name="f1"/>
//   <o level="1" line="131.125.463" loc="Φ.org.eolang.rho-of-add-should-not-change$t3$t0$t0$t2$generated-scope-e3b4088e-0842-4267-b5b5-7453d4316b41.f0" name="f0"/>
// </o>
@XmirObject(name = "ω1t3$t0$t0$t2$generated-scope-e3b4088e-0842-4267-b5b5-7453d4316b41", oname = "generated-scope-e3b4088e-0842-4267-b5b5-7453d4316b41", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/runtime-tests.eo")
public final class EOω1t3$EOt0$EOt0$EOt2$EOgenerated_scope_e3b4088e_0842_4267_b5b5_7453d4316b41 extends PhDefault {
  public EOω1t3$EOt0$EOt0$EOt2$EOgenerated_scope_e3b4088e_0842_4267_b5b5_7453d4316b41(final Phi sigma) {
    super(sigma);
    this.add("org.eolang.scope-e3b4088e-0842-4267-b5b5-7453d4316b41", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = new PhMethod(new PhMethod(rho, "σ"), "f0");
        ret_base = new PhLocated(ret_base, 131, 18, "Φ.org.eolang.rho-of-add-should-not-change$t3$t0$t0$t2$generated-scope-e3b4088e-0842-4267-b5b5-7453d4316b41.org.eolang.scope-e3b4088e-0842-4267-b5b5-7453d4316b41.ρ");
      Phi ret = new PhMethod(ret_base, "plus");
        ret = new PhLocated(ret, 131, 20, "Φ.org.eolang.rho-of-add-should-not-change$t3$t0$t0$t2$generated-scope-e3b4088e-0842-4267-b5b5-7453d4316b41.org.eolang.scope-e3b4088e-0842-4267-b5b5-7453d4316b41");
      ret = new PhCopy(ret);
        Phi ret_1 = new PhMethod(new PhMethod(rho, "σ"), "f1");
          ret_1 = new PhLocated(ret_1, 131, 26, "Φ.org.eolang.rho-of-add-should-not-change$t3$t0$t0$t2$generated-scope-e3b4088e-0842-4267-b5b5-7453d4316b41.org.eolang.scope-e3b4088e-0842-4267-b5b5-7453d4316b41.α0");
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new PhMethod(rho, "org.eolang.scope-e3b4088e-0842-4267-b5b5-7453d4316b41");
        ret = new PhLocated(ret, 131, 20, "Φ.org.eolang.rho-of-add-should-not-change$t3$t0$t0$t2$generated-scope-e3b4088e-0842-4267-b5b5-7453d4316b41.φ");
      return ret;
    })));
  }
}
}
