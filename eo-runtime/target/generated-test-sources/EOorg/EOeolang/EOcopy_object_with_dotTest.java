
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT e24f541 2023-09-12T11:41:32) on 2023-10-03T10:45:38.539230Z; your changes will be discarded on the next build */
package EOorg.EOeolang;

import org.eolang.*;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

// <o abstract="" line="341" loc="Φ.org.eolang.copy-object-with-dot" name="copy-object-with-dot" original-name="copy-object-with-dot" pos="0"> 
//   <o base="copy-object-with-dot$book" cut="526" line="342" loc="Φ.org.eolang.copy-object-with-dot.book" name="book" pos="2" ref="342"/>
//   <o base=".title" copy="" line="344" loc="Φ.org.eolang.copy-object-with-dot.copy-title" name="copy-title" pos="6"> 
//     <o base="book" line="344" loc="Φ.org.eolang.copy-object-with-dot.copy-title.ρ" pos="2" ref="342"/>
//   </o>
//   <o base=".eq" line="345" loc="Φ.org.eolang.copy-object-with-dot.φ" name="@" pos="2"> 
//     <o base="copy-title" line="346" loc="Φ.org.eolang.copy-object-with-dot.φ.ρ" pos="4" ref="344"/>
//     <o base="org.eolang.string" data="string" line="347" loc="Φ.org.eolang.copy-object-with-dot.φ.α0" pos="4">qwerty</o>
//   </o>
// </o>
@XmirObject(name = "copy-object-with-dotTest", oname = "copy-object-with-dot", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/runtime-tests.eo")
public final class EOcopy_object_with_dotTest extends PhDefault {
    
  public EOcopy_object_with_dotTest() {
    this.add("book", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new EOω1book(rho);
        ret = new PhLocated(ret, 342, 2, "Φ.org.eolang.copy-object-with-dot.book");
      return ret;
    })));
    this.add("copy-title", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = new PhMethod(rho, "book");
        ret_base = new PhLocated(ret_base, 344, 2, "Φ.org.eolang.copy-object-with-dot.copy-title.ρ");
      Phi ret = new PhMethod(ret_base, "title");
        ret = new PhLocated(ret, 344, 6, "Φ.org.eolang.copy-object-with-dot.copy-title");
        ret = new PhCopy(ret);
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = new PhMethod(rho, "copy-title");
        ret_base = new PhLocated(ret_base, 346, 4, "Φ.org.eolang.copy-object-with-dot.φ.ρ");
      Phi ret = new PhMethod(ret_base, "eq");
        ret = new PhLocated(ret, 345, 2, "Φ.org.eolang.copy-object-with-dot.φ");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOstring(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 347, 4, "Φ.org.eolang.copy-object-with-dot.φ.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>("qwerty"));
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
  }

  @Test
  public void works() throws java.lang.Exception {
    Object obj = new Dataized(new EOcopy_object_with_dotTest()).take();
    if (obj instanceof String) {
      Assertions.fail(obj.toString());
    } else {
      Assertions.assertTrue((Boolean) obj);
    }
  }

// <o abstract="" ancestors="1" line="342" loc="Φ.org.eolang.copy-object-with-dot$book" name="copy-object-with-dot$book" original-name="book" parent="copy-object-with-dot" pos="2"> 
//   <o base="org.eolang.string" data="string" line="343" loc="Φ.org.eolang.copy-object-with-dot$book.title" name="title" pos="4">qwerty</o>
// </o>
@XmirObject(name = "ω1book", oname = "book", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/runtime-tests.eo")
public final class EOω1book extends PhDefault {
    
  public EOω1book(final Phi sigma) {
    super(sigma);
    this.add("title", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new EOorg.EOeolang.EOstring(Phi.Φ);
        ret = new PhLocated(ret, 343, 4, "Φ.org.eolang.copy-object-with-dot$book.title");
        ret = new PhWith(ret, "Δ", new Data.Value<>("qwerty"));
      return ret;
    })));
  }
}
}
