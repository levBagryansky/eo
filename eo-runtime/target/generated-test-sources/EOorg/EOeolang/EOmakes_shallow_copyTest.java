
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT b5a4c9a 2023-08-17T12:29:38) on 2023-08-18T14:42:30.920527Z; your changes will be discarded on the next build */
package EOorg.EOeolang;

import org.eolang.*;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

// <o abstract="" line="344" loc="Φ.org.eolang.makes-shallow-copy" name="makes-shallow-copy" original-name="makes-shallow-copy" pos="0"> 
//   <o base="makes-shallow-copy$a" cut="564" line="345" loc="Φ.org.eolang.makes-shallow-copy.a" name="a" pos="2" ref="345"/>
//   <o base="makes-shallow-copy$b" cut="566" line="347" loc="Φ.org.eolang.makes-shallow-copy.b" name="b" pos="2" ref="347"> 
//     <o as="a" base="a" level="1" loc="Φ.org.eolang.makes-shallow-copy.b.α0" ref="345"/>
//   </o>
//   <o base="b" copy="" line="349" loc="Φ.org.eolang.makes-shallow-copy.b1" name="b1" pos="2" ref="347"/>
//   <o base="b" copy="" line="350" loc="Φ.org.eolang.makes-shallow-copy.b2" name="b2" pos="2" ref="347"/>
//   <o base="org.eolang.seq" line="351" loc="Φ.org.eolang.makes-shallow-copy.φ" name="@" pos="2"> 
//     <o base=".write" line="352" loc="Φ.org.eolang.makes-shallow-copy.φ.α0" pos="8"> 
//       <o base=".v" line="352" loc="Φ.org.eolang.makes-shallow-copy.φ.α0.ρ" pos="6"> 
//         <o base="b1" line="352" loc="Φ.org.eolang.makes-shallow-copy.φ.α0.ρ.ρ" pos="4" ref="349"/>
//       </o>
//       <o base="org.eolang.int" data="int" line="352" loc="Φ.org.eolang.makes-shallow-copy.φ.α0.α0" pos="15">0</o>
//     </o>
//     <o base=".write" line="353" loc="Φ.org.eolang.makes-shallow-copy.φ.α1" pos="8"> 
//       <o base=".v" line="353" loc="Φ.org.eolang.makes-shallow-copy.φ.α1.ρ" pos="6"> 
//         <o base="b2" line="353" loc="Φ.org.eolang.makes-shallow-copy.φ.α1.ρ.ρ" pos="4" ref="350"/>
//       </o>
//       <o base="org.eolang.int" data="int" line="353" loc="Φ.org.eolang.makes-shallow-copy.φ.α1.α0" pos="15">1</o>
//     </o>
//     <o base="org.eolang.hamcrest.assert-that" line="354" loc="Φ.org.eolang.makes-shallow-copy.φ.α2" pos="4"> 
//       <o base=".v" line="355" loc="Φ.org.eolang.makes-shallow-copy.φ.α2.α0" pos="8"> 
//         <o base="b1" line="355" loc="Φ.org.eolang.makes-shallow-copy.φ.α2.α0.ρ" pos="6" ref="349"/>
//       </o>
//       <o base=".equal-to" line="356" loc="Φ.org.eolang.makes-shallow-copy.φ.α2.α1" pos="7"> 
//         <o base="$" line="356" loc="Φ.org.eolang.makes-shallow-copy.φ.α2.α1.ρ" pos="6"/>
//         <o base="org.eolang.int" data="int" line="356" loc="Φ.org.eolang.makes-shallow-copy.φ.α2.α1.α0" pos="17">1</o>
//       </o>
//     </o>
//   </o>
// </o>
@XmirObject(name = "makes-shallow-copyTest", oname = "makes-shallow-copy", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/runtime-tests.eo")
public final class EOmakes_shallow_copyTest extends PhDefault {
  public EOmakes_shallow_copyTest() {
    this.add("a", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new EOω1a(rho);
        ret = new PhLocated(ret, 345, 2, "Φ.org.eolang.makes-shallow-copy.a");
      return ret;
    })));
    this.add("b", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new EOω1b(rho);
        ret = new PhLocated(ret, 347, 2, "Φ.org.eolang.makes-shallow-copy.b");
      return ret;
    })));
    this.add("b1", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new PhMethod(rho, "b");
        ret = new PhLocated(ret, 349, 2, "Φ.org.eolang.makes-shallow-copy.b1");
        ret = new PhCopy(ret);
      return ret;
    })));
    this.add("b2", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new PhMethod(rho, "b");
        ret = new PhLocated(ret, 350, 2, "Φ.org.eolang.makes-shallow-copy.b2");
        ret = new PhCopy(ret);
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("seq").get();
        ret = new PhLocated(ret, 351, 2, "Φ.org.eolang.makes-shallow-copy.φ");
      ret = new PhCopy(ret);
        Phi ret_1_base_base = new PhMethod(rho, "b1");
          ret_1_base_base = new PhLocated(ret_1_base_base, 352, 4, "Φ.org.eolang.makes-shallow-copy.φ.α0.ρ.ρ");
        Phi ret_1_base = new PhMethod(ret_1_base_base, "v");
          ret_1_base = new PhLocated(ret_1_base, 352, 6, "Φ.org.eolang.makes-shallow-copy.φ.α0.ρ");
        Phi ret_1 = new PhMethod(ret_1_base, "write");
          ret_1 = new PhLocated(ret_1, 352, 8, "Φ.org.eolang.makes-shallow-copy.φ.α0");
        ret_1 = new PhCopy(ret_1);
          Phi ret_1_1 = new EOorg.EOeolang.EOint(Phi.Φ);
            ret_1_1 = new PhLocated(ret_1_1, 352, 15, "Φ.org.eolang.makes-shallow-copy.φ.α0.α0");
            ret_1_1 = new PhWith(ret_1_1, "Δ", new Data.Value<>(0L));
          ret_1 = new PhWith(ret_1, 0, ret_1_1);
        Phi ret_2_base_base = new PhMethod(rho, "b2");
          ret_2_base_base = new PhLocated(ret_2_base_base, 353, 4, "Φ.org.eolang.makes-shallow-copy.φ.α1.ρ.ρ");
        Phi ret_2_base = new PhMethod(ret_2_base_base, "v");
          ret_2_base = new PhLocated(ret_2_base, 353, 6, "Φ.org.eolang.makes-shallow-copy.φ.α1.ρ");
        Phi ret_2 = new PhMethod(ret_2_base, "write");
          ret_2 = new PhLocated(ret_2, 353, 8, "Φ.org.eolang.makes-shallow-copy.φ.α1");
        ret_2 = new PhCopy(ret_2);
          Phi ret_2_1 = new EOorg.EOeolang.EOint(Phi.Φ);
            ret_2_1 = new PhLocated(ret_2_1, 353, 15, "Φ.org.eolang.makes-shallow-copy.φ.α1.α0");
            ret_2_1 = new PhWith(ret_2_1, "Δ", new Data.Value<>(1L));
          ret_2 = new PhWith(ret_2, 0, ret_2_1);
        Phi ret_3 = Phi.Φ.attr("org").get().attr("eolang").get().attr("hamcrest").get().attr("assert-that").get();
          ret_3 = new PhLocated(ret_3, 354, 4, "Φ.org.eolang.makes-shallow-copy.φ.α2");
        ret_3 = new PhCopy(ret_3);
          Phi ret_3_1_base = new PhMethod(rho, "b1");
            ret_3_1_base = new PhLocated(ret_3_1_base, 355, 6, "Φ.org.eolang.makes-shallow-copy.φ.α2.α0.ρ");
          Phi ret_3_1 = new PhMethod(ret_3_1_base, "v");
            ret_3_1 = new PhLocated(ret_3_1, 355, 8, "Φ.org.eolang.makes-shallow-copy.φ.α2.α0");
          Phi ret_3_2_base = rho;
            ret_3_2_base = new PhLocated(ret_3_2_base, 356, 6, "Φ.org.eolang.makes-shallow-copy.φ.α2.α1.ρ");
          Phi ret_3_2 = new PhMethod(ret_3_2_base, "equal-to");
            ret_3_2 = new PhLocated(ret_3_2, 356, 7, "Φ.org.eolang.makes-shallow-copy.φ.α2.α1");
          ret_3_2 = new PhCopy(ret_3_2);
            Phi ret_3_2_1 = new EOorg.EOeolang.EOint(Phi.Φ);
              ret_3_2_1 = new PhLocated(ret_3_2_1, 356, 17, "Φ.org.eolang.makes-shallow-copy.φ.α2.α1.α0");
              ret_3_2_1 = new PhWith(ret_3_2_1, "Δ", new Data.Value<>(1L));
            ret_3_2 = new PhWith(ret_3_2, 0, ret_3_2_1);
          ret_3 = new PhWith(ret_3, 0, ret_3_1);
          ret_3 = new PhWith(ret_3, 1, ret_3_2);
        ret = new PhWith(ret, 0, ret_1);
        ret = new PhWith(ret, 1, ret_2);
        ret = new PhWith(ret, 2, ret_3);
      return ret;
    })));
  }

  @Test
  public void works() throws java.lang.Exception {
    Object obj = new Dataized(new EOmakes_shallow_copyTest()).take();
    if (obj instanceof String) {
      Assertions.fail(obj.toString());
    } else {
      Assertions.assertTrue((Boolean) obj);
    }
  }

// <o abstract="" ancestors="1" line="345" loc="Φ.org.eolang.makes-shallow-copy$a" name="makes-shallow-copy$a" original-name="a" parent="makes-shallow-copy" pos="2"> 
//   <o base="org.eolang.memory" copy="" line="346" loc="Φ.org.eolang.makes-shallow-copy$a.v" name="v" pos="4"/>
// </o>
@XmirObject(name = "ω1a", oname = "a", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/runtime-tests.eo")
public final class EOω1a extends PhDefault {
  public EOω1a(final Phi sigma) {
    super(sigma);
    this.add("v", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("memory").get();
        ret = new PhLocated(ret, 346, 4, "Φ.org.eolang.makes-shallow-copy$a.v");
        ret = new PhCopy(ret);
      return ret;
    })));
  }
}

// <o abstract="" ancestors="1" line="347" loc="Φ.org.eolang.makes-shallow-copy$b" name="makes-shallow-copy$b" original-name="b" parent="makes-shallow-copy" pos="2"> 
//   <o base="a" line="348" loc="Φ.org.eolang.makes-shallow-copy$b.φ" name="@" pos="4" ref="347.345.461"/>
//   <o level="1" line="347.345.461" loc="Φ.org.eolang.makes-shallow-copy$b.a" name="a"/>
// </o>
@XmirObject(name = "ω1b", oname = "b", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/runtime-tests.eo")
public final class EOω1b extends PhDefault {
  public EOω1b(final Phi sigma) {
    super(sigma);
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new PhMethod(new PhMethod(rho, "σ"), "a");
        ret = new PhLocated(ret, 348, 4, "Φ.org.eolang.makes-shallow-copy$b.φ");
      return ret;
    })));
  }
}
}
