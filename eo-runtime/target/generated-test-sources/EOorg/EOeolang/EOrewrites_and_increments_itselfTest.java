
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT b5a4c9a 2023-08-17T12:29:38) on 2023-08-18T14:42:30.920527Z; your changes will be discarded on the next build */
package EOorg.EOeolang;

import org.eolang.*;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

// <o abstract="" line="56" loc="Φ.org.eolang.rewrites-and-increments-itself" name="rewrites-and-increments-itself" original-name="rewrites-and-increments-itself" pos="0"> 
//   <o base="org.eolang.memory" line="57" loc="Φ.org.eolang.rewrites-and-increments-itself.m" name="m" pos="2"> 
//     <o base="org.eolang.int" data="int" line="57" loc="Φ.org.eolang.rewrites-and-increments-itself.m.α0" pos="9">0</o>
//   </o>
//   <o base="org.eolang.hamcrest.assert-that" line="58" loc="Φ.org.eolang.rewrites-and-increments-itself.φ" name="@" pos="2"> 
//     <o base="org.eolang.seq" line="59" loc="Φ.org.eolang.rewrites-and-increments-itself.φ.α0" pos="4"> 
//       <o base=".write" line="60" loc="Φ.org.eolang.rewrites-and-increments-itself.φ.α0.α0" pos="7"> 
//         <o base="m" line="60" loc="Φ.org.eolang.rewrites-and-increments-itself.φ.α0.α0.ρ" pos="6" ref="57"/>
//         <o base="org.eolang.int" data="int" line="60" loc="Φ.org.eolang.rewrites-and-increments-itself.φ.α0.α0.α0" pos="14">1</o>
//       </o>
//       <o base=".write" line="61" loc="Φ.org.eolang.rewrites-and-increments-itself.φ.α0.α1" pos="7"> 
//         <o base="m" line="61" loc="Φ.org.eolang.rewrites-and-increments-itself.φ.α0.α1.ρ" pos="6" ref="57"/>
//         <o base="rewrites-and-increments-itself$t1$t0$t1$generated-scope-1e9296f9-6015-4bb6-ad09-8df9512497b4" cut="33" line="61" loc="Φ.org.eolang.rewrites-and-increments-itself.φ.α0.α1.generated-scope-1e9296f9-6015-4bb6-ad09-8df9512497b4" name="generated-scope-1e9296f9-6015-4bb6-ad09-8df9512497b4" pos="16" ref="61"> 
//           <o as="m" base="m" level="1" loc="Φ.org.eolang.rewrites-and-increments-itself.φ.α0.α1.generated-scope-1e9296f9-6015-4bb6-ad09-8df9512497b4.α0" ref="57"/>
//         </o>
//       </o>
//       <o base="m" line="62" loc="Φ.org.eolang.rewrites-and-increments-itself.φ.α0.α2" pos="6" ref="57"/>
//     </o>
//     <o base=".equal-to" line="63" loc="Φ.org.eolang.rewrites-and-increments-itself.φ.α1" pos="5"> 
//       <o base="$" line="63" loc="Φ.org.eolang.rewrites-and-increments-itself.φ.α1.ρ" pos="4"/>
//       <o base="org.eolang.int" data="int" line="63" loc="Φ.org.eolang.rewrites-and-increments-itself.φ.α1.α0" pos="15">6</o>
//     </o>
//   </o>
// </o>
@XmirObject(name = "rewrites-and-increments-itselfTest", oname = "rewrites-and-increments-itself", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/memory-tests.eo")
public final class EOrewrites_and_increments_itselfTest extends PhDefault {
  public EOrewrites_and_increments_itselfTest() {
    this.add("m", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("memory").get();
        ret = new PhLocated(ret, 57, 2, "Φ.org.eolang.rewrites-and-increments-itself.m");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 57, 9, "Φ.org.eolang.rewrites-and-increments-itself.m.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>(0L));
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("hamcrest").get().attr("assert-that").get();
        ret = new PhLocated(ret, 58, 2, "Φ.org.eolang.rewrites-and-increments-itself.φ");
      ret = new PhCopy(ret);
        Phi ret_1 = Phi.Φ.attr("org").get().attr("eolang").get().attr("seq").get();
          ret_1 = new PhLocated(ret_1, 59, 4, "Φ.org.eolang.rewrites-and-increments-itself.φ.α0");
        ret_1 = new PhCopy(ret_1);
          Phi ret_1_1_base = new PhMethod(rho, "m");
            ret_1_1_base = new PhLocated(ret_1_1_base, 60, 6, "Φ.org.eolang.rewrites-and-increments-itself.φ.α0.α0.ρ");
          Phi ret_1_1 = new PhMethod(ret_1_1_base, "write");
            ret_1_1 = new PhLocated(ret_1_1, 60, 7, "Φ.org.eolang.rewrites-and-increments-itself.φ.α0.α0");
          ret_1_1 = new PhCopy(ret_1_1);
            Phi ret_1_1_1 = new EOorg.EOeolang.EOint(Phi.Φ);
              ret_1_1_1 = new PhLocated(ret_1_1_1, 60, 14, "Φ.org.eolang.rewrites-and-increments-itself.φ.α0.α0.α0");
              ret_1_1_1 = new PhWith(ret_1_1_1, "Δ", new Data.Value<>(1L));
            ret_1_1 = new PhWith(ret_1_1, 0, ret_1_1_1);
          Phi ret_1_2_base = new PhMethod(rho, "m");
            ret_1_2_base = new PhLocated(ret_1_2_base, 61, 6, "Φ.org.eolang.rewrites-and-increments-itself.φ.α0.α1.ρ");
          Phi ret_1_2 = new PhMethod(ret_1_2_base, "write");
            ret_1_2 = new PhLocated(ret_1_2, 61, 7, "Φ.org.eolang.rewrites-and-increments-itself.φ.α0.α1");
          ret_1_2 = new PhCopy(ret_1_2);
            Phi ret_1_2_1 = new EOω1t1$EOt0$EOt1$EOgenerated_scope_1e9296f9_6015_4bb6_ad09_8df9512497b4(rho);
              ret_1_2_1 = new PhLocated(ret_1_2_1, 61, 16, "Φ.org.eolang.rewrites-and-increments-itself.φ.α0.α1.generated-scope-1e9296f9-6015-4bb6-ad09-8df9512497b4");
            ret_1_2 = new PhWith(ret_1_2, 0, ret_1_2_1);
          Phi ret_1_3 = new PhMethod(rho, "m");
            ret_1_3 = new PhLocated(ret_1_3, 62, 6, "Φ.org.eolang.rewrites-and-increments-itself.φ.α0.α2");
          ret_1 = new PhWith(ret_1, 0, ret_1_1);
          ret_1 = new PhWith(ret_1, 1, ret_1_2);
          ret_1 = new PhWith(ret_1, 2, ret_1_3);
        Phi ret_2_base = rho;
          ret_2_base = new PhLocated(ret_2_base, 63, 4, "Φ.org.eolang.rewrites-and-increments-itself.φ.α1.ρ");
        Phi ret_2 = new PhMethod(ret_2_base, "equal-to");
          ret_2 = new PhLocated(ret_2, 63, 5, "Φ.org.eolang.rewrites-and-increments-itself.φ.α1");
        ret_2 = new PhCopy(ret_2);
          Phi ret_2_1 = new EOorg.EOeolang.EOint(Phi.Φ);
            ret_2_1 = new PhLocated(ret_2_1, 63, 15, "Φ.org.eolang.rewrites-and-increments-itself.φ.α1.α0");
            ret_2_1 = new PhWith(ret_2_1, "Δ", new Data.Value<>(6L));
          ret_2 = new PhWith(ret_2, 0, ret_2_1);
        ret = new PhWith(ret, 0, ret_1);
        ret = new PhWith(ret, 1, ret_2);
      return ret;
    })));
  }

  @Test
  public void works() throws java.lang.Exception {
    Object obj = new Dataized(new EOrewrites_and_increments_itselfTest()).take();
    if (obj instanceof String) {
      Assertions.fail(obj.toString());
    } else {
      Assertions.assertTrue((Boolean) obj);
    }
  }

// <o abstract="" ancestors="1" line="61" loc="Φ.org.eolang.rewrites-and-increments-itself$t1$t0$t1$generated-scope-1e9296f9-6015-4bb6-ad09-8df9512497b4" name="rewrites-and-increments-itself$t1$t0$t1$generated-scope-1e9296f9-6015-4bb6-ad09-8df9512497b4" original-name="generated-scope-1e9296f9-6015-4bb6-ad09-8df9512497b4" parent="rewrites-and-increments-itself" pos="16"> 
//   <o base=".plus" line="61" loc="Φ.org.eolang.rewrites-and-increments-itself$t1$t0$t1$generated-scope-1e9296f9-6015-4bb6-ad09-8df9512497b4.org.eolang.scope-1e9296f9-6015-4bb6-ad09-8df9512497b4" name="org.eolang.scope-1e9296f9-6015-4bb6-ad09-8df9512497b4" pos="16" scope="scope-1e9296f9-6015-4bb6-ad09-8df9512497b4"> 
//     <o base="m" line="61" loc="Φ.org.eolang.rewrites-and-increments-itself$t1$t0$t1$generated-scope-1e9296f9-6015-4bb6-ad09-8df9512497b4.org.eolang.scope-1e9296f9-6015-4bb6-ad09-8df9512497b4.ρ" pos="15" ref="61.57.459" scope="scope-1e9296f9-6015-4bb6-ad09-8df9512497b4"/>
//     <o base="org.eolang.int" data="int" line="61" loc="Φ.org.eolang.rewrites-and-increments-itself$t1$t0$t1$generated-scope-1e9296f9-6015-4bb6-ad09-8df9512497b4.org.eolang.scope-1e9296f9-6015-4bb6-ad09-8df9512497b4.α0" pos="22" scope="scope-1e9296f9-6015-4bb6-ad09-8df9512497b4">5</o>
//   </o>
//   <o base="org.eolang.scope-1e9296f9-6015-4bb6-ad09-8df9512497b4" line="61" loc="Φ.org.eolang.rewrites-and-increments-itself$t1$t0$t1$generated-scope-1e9296f9-6015-4bb6-ad09-8df9512497b4.φ" name="@" pos="16" ref="61"/>
//   <o level="1" line="61.57.459" loc="Φ.org.eolang.rewrites-and-increments-itself$t1$t0$t1$generated-scope-1e9296f9-6015-4bb6-ad09-8df9512497b4.m" name="m"/>
// </o>
@XmirObject(name = "ω1t1$t0$t1$generated-scope-1e9296f9-6015-4bb6-ad09-8df9512497b4", oname = "generated-scope-1e9296f9-6015-4bb6-ad09-8df9512497b4", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/memory-tests.eo")
public final class EOω1t1$EOt0$EOt1$EOgenerated_scope_1e9296f9_6015_4bb6_ad09_8df9512497b4 extends PhDefault {
  public EOω1t1$EOt0$EOt1$EOgenerated_scope_1e9296f9_6015_4bb6_ad09_8df9512497b4(final Phi sigma) {
    super(sigma);
    this.add("org.eolang.scope-1e9296f9-6015-4bb6-ad09-8df9512497b4", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = new PhMethod(new PhMethod(rho, "σ"), "m");
        ret_base = new PhLocated(ret_base, 61, 15, "Φ.org.eolang.rewrites-and-increments-itself$t1$t0$t1$generated-scope-1e9296f9-6015-4bb6-ad09-8df9512497b4.org.eolang.scope-1e9296f9-6015-4bb6-ad09-8df9512497b4.ρ");
      Phi ret = new PhMethod(ret_base, "plus");
        ret = new PhLocated(ret, 61, 16, "Φ.org.eolang.rewrites-and-increments-itself$t1$t0$t1$generated-scope-1e9296f9-6015-4bb6-ad09-8df9512497b4.org.eolang.scope-1e9296f9-6015-4bb6-ad09-8df9512497b4");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 61, 22, "Φ.org.eolang.rewrites-and-increments-itself$t1$t0$t1$generated-scope-1e9296f9-6015-4bb6-ad09-8df9512497b4.org.eolang.scope-1e9296f9-6015-4bb6-ad09-8df9512497b4.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>(5L));
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new PhMethod(rho, "org.eolang.scope-1e9296f9-6015-4bb6-ad09-8df9512497b4");
        ret = new PhLocated(ret, 61, 16, "Φ.org.eolang.rewrites-and-increments-itself$t1$t0$t1$generated-scope-1e9296f9-6015-4bb6-ad09-8df9512497b4.φ");
      return ret;
    })));
  }
}
}
