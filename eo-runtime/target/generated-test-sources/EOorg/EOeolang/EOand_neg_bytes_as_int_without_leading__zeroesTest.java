
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT e24f541 2023-09-12T11:41:32) on 2023-10-03T10:45:38.539230Z; your changes will be discarded on the next build */
package EOorg.EOeolang;

import org.eolang.*;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

// <o abstract="" line="382" loc="Φ.org.eolang.and-neg-bytes-as-int-without-leading--zeroes" name="and-neg-bytes-as-int-without-leading--zeroes" original-name="and-neg-bytes-as-int-without-leading--zeroes" pos="0"> 
//   <o base=".eq" line="383" loc="Φ.org.eolang.and-neg-bytes-as-int-without-leading--zeroes.φ" name="@" pos="2"> 
//     <o base=".as-int" line="384" loc="Φ.org.eolang.and-neg-bytes-as-int-without-leading--zeroes.φ.ρ" pos="50"> 
//       <o base="and-neg-bytes-as-int-without-leading--zeroes$t0$t0$generated-scope-df2a7476-81c8-4d4f-b992-54169c80f854" cut="482" line="384" loc="Φ.org.eolang.and-neg-bytes-as-int-without-leading--zeroes.φ.ρ.generated-scope-df2a7476-81c8-4d4f-b992-54169c80f854" name="generated-scope-df2a7476-81c8-4d4f-b992-54169c80f854" pos="24" ref="384"/>
//     </o>
//     <o base="org.eolang.int" data="int" line="385" loc="Φ.org.eolang.and-neg-bytes-as-int-without-leading--zeroes.φ.α0" pos="4">0</o>
//   </o>
// </o>
@XmirObject(name = "and-neg-bytes-as-int-without-leading--zeroesTest", oname = "and-neg-bytes-as-int-without-leading--zeroes", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/bytes-tests.eo")
public final class EOand_neg_bytes_as_int_without_leading__zeroesTest extends PhDefault {
    
  public EOand_neg_bytes_as_int_without_leading__zeroesTest() {
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base_base = new EOω1t0$EOt0$EOgenerated_scope_df2a7476_81c8_4d4f_b992_54169c80f854(rho);
        ret_base_base = new PhLocated(ret_base_base, 384, 24, "Φ.org.eolang.and-neg-bytes-as-int-without-leading--zeroes.φ.ρ.generated-scope-df2a7476-81c8-4d4f-b992-54169c80f854");
      Phi ret_base = new PhMethod(ret_base_base, "as-int");
        ret_base = new PhLocated(ret_base, 384, 50, "Φ.org.eolang.and-neg-bytes-as-int-without-leading--zeroes.φ.ρ");
      Phi ret = new PhMethod(ret_base, "eq");
        ret = new PhLocated(ret, 383, 2, "Φ.org.eolang.and-neg-bytes-as-int-without-leading--zeroes.φ");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 385, 4, "Φ.org.eolang.and-neg-bytes-as-int-without-leading--zeroes.φ.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>(0L));
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
  }

  @Test
  public void works() throws java.lang.Exception {
    Object obj = new Dataized(new EOand_neg_bytes_as_int_without_leading__zeroesTest()).take();
    if (obj instanceof String) {
      Assertions.fail(obj.toString());
    } else {
      Assertions.assertTrue((Boolean) obj);
    }
  }

// <o abstract="" ancestors="1" line="384" loc="Φ.org.eolang.and-neg-bytes-as-int-without-leading--zeroes$t0$t0$generated-scope-df2a7476-81c8-4d4f-b992-54169c80f854" name="and-neg-bytes-as-int-without-leading--zeroes$t0$t0$generated-scope-df2a7476-81c8-4d4f-b992-54169c80f854" original-name="generated-scope-df2a7476-81c8-4d4f-b992-54169c80f854" parent="and-neg-bytes-as-int-without-leading--zeroes" pos="24"> 
//   <o base=".and" line="384" loc="Φ.org.eolang.and-neg-bytes-as-int-without-leading--zeroes$t0$t0$generated-scope-df2a7476-81c8-4d4f-b992-54169c80f854.org.eolang.scope-df2a7476-81c8-4d4f-b992-54169c80f854" name="org.eolang.scope-df2a7476-81c8-4d4f-b992-54169c80f854" pos="24" scope="scope-df2a7476-81c8-4d4f-b992-54169c80f854"> 
//     <o base=".as-bytes" line="384" loc="Φ.org.eolang.and-neg-bytes-as-int-without-leading--zeroes$t0$t0$generated-scope-df2a7476-81c8-4d4f-b992-54169c80f854.org.eolang.scope-df2a7476-81c8-4d4f-b992-54169c80f854.ρ" pos="15" scope="scope-df2a7476-81c8-4d4f-b992-54169c80f854"> 
//       <o base="org.eolang.int" data="int" line="384" loc="Φ.org.eolang.and-neg-bytes-as-int-without-leading--zeroes$t0$t0$generated-scope-df2a7476-81c8-4d4f-b992-54169c80f854.org.eolang.scope-df2a7476-81c8-4d4f-b992-54169c80f854.ρ.ρ" pos="5" scope="scope-df2a7476-81c8-4d4f-b992-54169c80f854">4294967295</o>
//     </o>
//     <o base=".as-bytes" line="384" loc="Φ.org.eolang.and-neg-bytes-as-int-without-leading--zeroes$t0$t0$generated-scope-df2a7476-81c8-4d4f-b992-54169c80f854.org.eolang.scope-df2a7476-81c8-4d4f-b992-54169c80f854.α0" pos="40" scope="scope-df2a7476-81c8-4d4f-b992-54169c80f854"> 
//       <o base="org.eolang.int" data="int" line="384" loc="Φ.org.eolang.and-neg-bytes-as-int-without-leading--zeroes$t0$t0$generated-scope-df2a7476-81c8-4d4f-b992-54169c80f854.org.eolang.scope-df2a7476-81c8-4d4f-b992-54169c80f854.α0.ρ" pos="29" scope="scope-df2a7476-81c8-4d4f-b992-54169c80f854">-4294967296</o>
//     </o>
//   </o>
//   <o base="org.eolang.scope-df2a7476-81c8-4d4f-b992-54169c80f854" line="384" loc="Φ.org.eolang.and-neg-bytes-as-int-without-leading--zeroes$t0$t0$generated-scope-df2a7476-81c8-4d4f-b992-54169c80f854.φ" name="@" pos="24" ref="384"/>
// </o>
@XmirObject(name = "ω1t0$t0$generated-scope-df2a7476-81c8-4d4f-b992-54169c80f854", oname = "generated-scope-df2a7476-81c8-4d4f-b992-54169c80f854", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/bytes-tests.eo")
public final class EOω1t0$EOt0$EOgenerated_scope_df2a7476_81c8_4d4f_b992_54169c80f854 extends PhDefault {
    
  public EOω1t0$EOt0$EOgenerated_scope_df2a7476_81c8_4d4f_b992_54169c80f854(final Phi sigma) {
    super(sigma);
    this.add("org.eolang.scope-df2a7476-81c8-4d4f-b992-54169c80f854", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base_base = new EOorg.EOeolang.EOint(Phi.Φ);
        ret_base_base = new PhLocated(ret_base_base, 384, 5, "Φ.org.eolang.and-neg-bytes-as-int-without-leading--zeroes$t0$t0$generated-scope-df2a7476-81c8-4d4f-b992-54169c80f854.org.eolang.scope-df2a7476-81c8-4d4f-b992-54169c80f854.ρ.ρ");
        ret_base_base = new PhWith(ret_base_base, "Δ", new Data.Value<>(4294967295L));
      Phi ret_base = new PhMethod(ret_base_base, "as-bytes");
        ret_base = new PhLocated(ret_base, 384, 15, "Φ.org.eolang.and-neg-bytes-as-int-without-leading--zeroes$t0$t0$generated-scope-df2a7476-81c8-4d4f-b992-54169c80f854.org.eolang.scope-df2a7476-81c8-4d4f-b992-54169c80f854.ρ");
      Phi ret = new PhMethod(ret_base, "and");
        ret = new PhLocated(ret, 384, 24, "Φ.org.eolang.and-neg-bytes-as-int-without-leading--zeroes$t0$t0$generated-scope-df2a7476-81c8-4d4f-b992-54169c80f854.org.eolang.scope-df2a7476-81c8-4d4f-b992-54169c80f854");
      ret = new PhCopy(ret);
        Phi ret_1_base = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_1_base = new PhLocated(ret_1_base, 384, 29, "Φ.org.eolang.and-neg-bytes-as-int-without-leading--zeroes$t0$t0$generated-scope-df2a7476-81c8-4d4f-b992-54169c80f854.org.eolang.scope-df2a7476-81c8-4d4f-b992-54169c80f854.α0.ρ");
          ret_1_base = new PhWith(ret_1_base, "Δ", new Data.Value<>(-4294967296L));
        Phi ret_1 = new PhMethod(ret_1_base, "as-bytes");
          ret_1 = new PhLocated(ret_1, 384, 40, "Φ.org.eolang.and-neg-bytes-as-int-without-leading--zeroes$t0$t0$generated-scope-df2a7476-81c8-4d4f-b992-54169c80f854.org.eolang.scope-df2a7476-81c8-4d4f-b992-54169c80f854.α0");
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new PhMethod(rho, "org.eolang.scope-df2a7476-81c8-4d4f-b992-54169c80f854");
        ret = new PhLocated(ret, 384, 24, "Φ.org.eolang.and-neg-bytes-as-int-without-leading--zeroes$t0$t0$generated-scope-df2a7476-81c8-4d4f-b992-54169c80f854.φ");
      return ret;
    })));
  }
}
}
