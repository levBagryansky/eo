
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT b5a4c9a 2023-08-17T12:29:38) on 2023-08-18T14:42:30.920527Z; your changes will be discarded on the next build */
package EOorg.EOeolang;

import org.eolang.*;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

// <o abstract="" line="417" loc="Φ.org.eolang.and-neg-bytes-as-int-without-leading--zeroes" name="and-neg-bytes-as-int-without-leading--zeroes" original-name="and-neg-bytes-as-int-without-leading--zeroes" pos="0"> 
//   <o base="org.eolang.hamcrest.assert-that" line="418" loc="Φ.org.eolang.and-neg-bytes-as-int-without-leading--zeroes.φ" name="@" pos="2"> 
//     <o base=".as-int" line="419" loc="Φ.org.eolang.and-neg-bytes-as-int-without-leading--zeroes.φ.α0" pos="52"> 
//       <o base="and-neg-bytes-as-int-without-leading--zeroes$t0$t0$generated-scope-8795caf5-fd53-4069-9fdf-90c291c284ca" cut="620" line="419" loc="Φ.org.eolang.and-neg-bytes-as-int-without-leading--zeroes.φ.α0.generated-scope-8795caf5-fd53-4069-9fdf-90c291c284ca" name="generated-scope-8795caf5-fd53-4069-9fdf-90c291c284ca" pos="24" ref="419"/>
//     </o>
//     <o base=".equal-to" line="420" loc="Φ.org.eolang.and-neg-bytes-as-int-without-leading--zeroes.φ.α1" pos="5"> 
//       <o base="$" line="420" loc="Φ.org.eolang.and-neg-bytes-as-int-without-leading--zeroes.φ.α1.ρ" pos="4"/>
//       <o base="org.eolang.int" data="int" line="420" loc="Φ.org.eolang.and-neg-bytes-as-int-without-leading--zeroes.φ.α1.α0" pos="15">0</o>
//     </o>
//   </o>
// </o>
@XmirObject(name = "and-neg-bytes-as-int-without-leading--zeroesTest", oname = "and-neg-bytes-as-int-without-leading--zeroes", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/bytes-tests.eo")
public final class EOand_neg_bytes_as_int_without_leading__zeroesTest extends PhDefault {
  public EOand_neg_bytes_as_int_without_leading__zeroesTest() {
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("hamcrest").get().attr("assert-that").get();
        ret = new PhLocated(ret, 418, 2, "Φ.org.eolang.and-neg-bytes-as-int-without-leading--zeroes.φ");
      ret = new PhCopy(ret);
        Phi ret_1_base = new EOω1t0$EOt0$EOgenerated_scope_8795caf5_fd53_4069_9fdf_90c291c284ca(rho);
          ret_1_base = new PhLocated(ret_1_base, 419, 24, "Φ.org.eolang.and-neg-bytes-as-int-without-leading--zeroes.φ.α0.generated-scope-8795caf5-fd53-4069-9fdf-90c291c284ca");
        Phi ret_1 = new PhMethod(ret_1_base, "as-int");
          ret_1 = new PhLocated(ret_1, 419, 52, "Φ.org.eolang.and-neg-bytes-as-int-without-leading--zeroes.φ.α0");
        Phi ret_2_base = rho;
          ret_2_base = new PhLocated(ret_2_base, 420, 4, "Φ.org.eolang.and-neg-bytes-as-int-without-leading--zeroes.φ.α1.ρ");
        Phi ret_2 = new PhMethod(ret_2_base, "equal-to");
          ret_2 = new PhLocated(ret_2, 420, 5, "Φ.org.eolang.and-neg-bytes-as-int-without-leading--zeroes.φ.α1");
        ret_2 = new PhCopy(ret_2);
          Phi ret_2_1 = new EOorg.EOeolang.EOint(Phi.Φ);
            ret_2_1 = new PhLocated(ret_2_1, 420, 15, "Φ.org.eolang.and-neg-bytes-as-int-without-leading--zeroes.φ.α1.α0");
            ret_2_1 = new PhWith(ret_2_1, "Δ", new Data.Value<>(0L));
          ret_2 = new PhWith(ret_2, 0, ret_2_1);
        ret = new PhWith(ret, 0, ret_1);
        ret = new PhWith(ret, 1, ret_2);
      return ret;
    })));
  }

  @Test
  public void works() throws java.lang.Exception {
    Object obj = new Dataized(new EOand_neg_bytes_as_int_without_leading__zeroesTest()).take();
    if (obj instanceof String) {
      Assertions.fail(obj.toString());
    } else {
      Assertions.assertTrue((Boolean) obj);
    }
  }

// <o abstract="" ancestors="1" line="419" loc="Φ.org.eolang.and-neg-bytes-as-int-without-leading--zeroes$t0$t0$generated-scope-8795caf5-fd53-4069-9fdf-90c291c284ca" name="and-neg-bytes-as-int-without-leading--zeroes$t0$t0$generated-scope-8795caf5-fd53-4069-9fdf-90c291c284ca" original-name="generated-scope-8795caf5-fd53-4069-9fdf-90c291c284ca" parent="and-neg-bytes-as-int-without-leading--zeroes" pos="24"> 
//   <o base=".and" line="419" loc="Φ.org.eolang.and-neg-bytes-as-int-without-leading--zeroes$t0$t0$generated-scope-8795caf5-fd53-4069-9fdf-90c291c284ca.org.eolang.scope-8795caf5-fd53-4069-9fdf-90c291c284ca" name="org.eolang.scope-8795caf5-fd53-4069-9fdf-90c291c284ca" pos="24" scope="scope-8795caf5-fd53-4069-9fdf-90c291c284ca"> 
//     <o base=".as-bytes" line="419" loc="Φ.org.eolang.and-neg-bytes-as-int-without-leading--zeroes$t0$t0$generated-scope-8795caf5-fd53-4069-9fdf-90c291c284ca.org.eolang.scope-8795caf5-fd53-4069-9fdf-90c291c284ca.ρ" pos="15" scope="scope-8795caf5-fd53-4069-9fdf-90c291c284ca"> 
//       <o base="org.eolang.int" data="int" line="419" loc="Φ.org.eolang.and-neg-bytes-as-int-without-leading--zeroes$t0$t0$generated-scope-8795caf5-fd53-4069-9fdf-90c291c284ca.org.eolang.scope-8795caf5-fd53-4069-9fdf-90c291c284ca.ρ.ρ" pos="5" scope="scope-8795caf5-fd53-4069-9fdf-90c291c284ca">4294967295</o>
//     </o>
//     <o base=".as-bytes" line="419" loc="Φ.org.eolang.and-neg-bytes-as-int-without-leading--zeroes$t0$t0$generated-scope-8795caf5-fd53-4069-9fdf-90c291c284ca.org.eolang.scope-8795caf5-fd53-4069-9fdf-90c291c284ca.α0" pos="42" scope="scope-8795caf5-fd53-4069-9fdf-90c291c284ca"> 
//       <o base="org.eolang.int" data="int" line="419" loc="Φ.org.eolang.and-neg-bytes-as-int-without-leading--zeroes$t0$t0$generated-scope-8795caf5-fd53-4069-9fdf-90c291c284ca.org.eolang.scope-8795caf5-fd53-4069-9fdf-90c291c284ca.α0.ρ" pos="30" scope="scope-7878a7fe-841b-4e22-bc68-d11fb92f5936-scope-8795caf5-fd53-4069-9fdf-90c291c284ca">-4294967296</o>
//     </o>
//   </o>
//   <o base="org.eolang.scope-8795caf5-fd53-4069-9fdf-90c291c284ca" line="419" loc="Φ.org.eolang.and-neg-bytes-as-int-without-leading--zeroes$t0$t0$generated-scope-8795caf5-fd53-4069-9fdf-90c291c284ca.φ" name="@" pos="24" ref="419"/>
// </o>
@XmirObject(name = "ω1t0$t0$generated-scope-8795caf5-fd53-4069-9fdf-90c291c284ca", oname = "generated-scope-8795caf5-fd53-4069-9fdf-90c291c284ca", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/bytes-tests.eo")
public final class EOω1t0$EOt0$EOgenerated_scope_8795caf5_fd53_4069_9fdf_90c291c284ca extends PhDefault {
  public EOω1t0$EOt0$EOgenerated_scope_8795caf5_fd53_4069_9fdf_90c291c284ca(final Phi sigma) {
    super(sigma);
    this.add("org.eolang.scope-8795caf5-fd53-4069-9fdf-90c291c284ca", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base_base = new EOorg.EOeolang.EOint(Phi.Φ);
        ret_base_base = new PhLocated(ret_base_base, 419, 5, "Φ.org.eolang.and-neg-bytes-as-int-without-leading--zeroes$t0$t0$generated-scope-8795caf5-fd53-4069-9fdf-90c291c284ca.org.eolang.scope-8795caf5-fd53-4069-9fdf-90c291c284ca.ρ.ρ");
        ret_base_base = new PhWith(ret_base_base, "Δ", new Data.Value<>(4294967295L));
      Phi ret_base = new PhMethod(ret_base_base, "as-bytes");
        ret_base = new PhLocated(ret_base, 419, 15, "Φ.org.eolang.and-neg-bytes-as-int-without-leading--zeroes$t0$t0$generated-scope-8795caf5-fd53-4069-9fdf-90c291c284ca.org.eolang.scope-8795caf5-fd53-4069-9fdf-90c291c284ca.ρ");
      Phi ret = new PhMethod(ret_base, "and");
        ret = new PhLocated(ret, 419, 24, "Φ.org.eolang.and-neg-bytes-as-int-without-leading--zeroes$t0$t0$generated-scope-8795caf5-fd53-4069-9fdf-90c291c284ca.org.eolang.scope-8795caf5-fd53-4069-9fdf-90c291c284ca");
      ret = new PhCopy(ret);
        Phi ret_1_base = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_1_base = new PhLocated(ret_1_base, 419, 30, "Φ.org.eolang.and-neg-bytes-as-int-without-leading--zeroes$t0$t0$generated-scope-8795caf5-fd53-4069-9fdf-90c291c284ca.org.eolang.scope-8795caf5-fd53-4069-9fdf-90c291c284ca.α0.ρ");
          ret_1_base = new PhWith(ret_1_base, "Δ", new Data.Value<>(-4294967296L));
        Phi ret_1 = new PhMethod(ret_1_base, "as-bytes");
          ret_1 = new PhLocated(ret_1, 419, 42, "Φ.org.eolang.and-neg-bytes-as-int-without-leading--zeroes$t0$t0$generated-scope-8795caf5-fd53-4069-9fdf-90c291c284ca.org.eolang.scope-8795caf5-fd53-4069-9fdf-90c291c284ca.α0");
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new PhMethod(rho, "org.eolang.scope-8795caf5-fd53-4069-9fdf-90c291c284ca");
        ret = new PhLocated(ret, 419, 24, "Φ.org.eolang.and-neg-bytes-as-int-without-leading--zeroes$t0$t0$generated-scope-8795caf5-fd53-4069-9fdf-90c291c284ca.φ");
      return ret;
    })));
  }
}
}
