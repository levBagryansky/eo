
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT e24f541 2023-09-12T11:41:32) on 2023-10-03T10:45:38.539230Z; your changes will be discarded on the next build */
package EOorg.EOeolang;

import org.eolang.*;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

// <o abstract="" line="230" loc="Φ.org.eolang.slice-end-greater-actual" name="slice-end-greater-actual" original-name="slice-end-greater-actual" pos="0"> 
//   <o base=".eq" line="231" loc="Φ.org.eolang.slice-end-greater-actual.φ" name="@" pos="2"> 
//     <o base="org.eolang.try" line="232" loc="Φ.org.eolang.slice-end-greater-actual.φ.ρ" pos="4"> 
//       <o base="slice-end-greater-actual$t0$t0$a0" cut="184" line="233" loc="Φ.org.eolang.slice-end-greater-actual.φ.ρ.α0" pos="6" ref="233"/>
//       <o base="slice-end-greater-actual$t0$t0$a1" cut="189" line="238" loc="Φ.org.eolang.slice-end-greater-actual.φ.ρ.α1" pos="6" ref="238"/>
//       <o base="org.eolang.nop" line="240" loc="Φ.org.eolang.slice-end-greater-actual.φ.ρ.α2" pos="6"/>
//     </o>
//     <o base="org.eolang.string" data="string" line="241" loc="Φ.org.eolang.slice-end-greater-actual.φ.α0" pos="4">Start index + length must not exceed string length but was 12 > 11</o>
//   </o>
// </o>
@XmirObject(name = "slice-end-greater-actualTest", oname = "slice-end-greater-actual", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/string-tests.eo")
public final class EOslice_end_greater_actualTest extends PhDefault {
    
  public EOslice_end_greater_actualTest() {
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = Phi.Φ.attr("org").get().attr("eolang").get().attr("try").get();
        ret_base = new PhLocated(ret_base, 232, 4, "Φ.org.eolang.slice-end-greater-actual.φ.ρ");
      ret_base = new PhCopy(ret_base);
        Phi ret_base_1 = new EOω1t0$EOt0$EOa0(rho);
          ret_base_1 = new PhLocated(ret_base_1, 233, 6, "Φ.org.eolang.slice-end-greater-actual.φ.ρ.α0");
        Phi ret_base_2 = new EOω1t0$EOt0$EOa1(rho);
          ret_base_2 = new PhLocated(ret_base_2, 238, 6, "Φ.org.eolang.slice-end-greater-actual.φ.ρ.α1");
        Phi ret_base_3 = Phi.Φ.attr("org").get().attr("eolang").get().attr("nop").get();
          ret_base_3 = new PhLocated(ret_base_3, 240, 6, "Φ.org.eolang.slice-end-greater-actual.φ.ρ.α2");
        ret_base = new PhWith(ret_base, 0, ret_base_1);
        ret_base = new PhWith(ret_base, 1, ret_base_2);
        ret_base = new PhWith(ret_base, 2, ret_base_3);
      Phi ret = new PhMethod(ret_base, "eq");
        ret = new PhLocated(ret, 231, 2, "Φ.org.eolang.slice-end-greater-actual.φ");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOstring(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 241, 4, "Φ.org.eolang.slice-end-greater-actual.φ.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>("Start index + length must not exceed string length but was 12 > 11"));
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
  }

  @Test
  public void works() throws java.lang.Exception {
    Object obj = new Dataized(new EOslice_end_greater_actualTest()).take();
    if (obj instanceof String) {
      Assertions.fail(obj.toString());
    } else {
      Assertions.assertTrue((Boolean) obj);
    }
  }

// <o abstract="" ancestors="1" line="233" loc="Φ.org.eolang.slice-end-greater-actual$t0$t0$a0" name="slice-end-greater-actual$t0$t0$a0" parent="slice-end-greater-actual" pos="6"> 
//   <o base=".slice" line="234" loc="Φ.org.eolang.slice-end-greater-actual$t0$t0$a0.φ" name="@" pos="8"> 
//     <o base="org.eolang.string" data="string" line="235" loc="Φ.org.eolang.slice-end-greater-actual$t0$t0$a0.φ.ρ" pos="10">some string</o>
//     <o base="org.eolang.int" data="int" line="236" loc="Φ.org.eolang.slice-end-greater-actual$t0$t0$a0.φ.α0" pos="10">7</o>
//     <o base="org.eolang.int" data="int" line="237" loc="Φ.org.eolang.slice-end-greater-actual$t0$t0$a0.φ.α1" pos="10">5</o>
//   </o>
// </o>
@XmirObject(name = "ω1t0$t0$a0", oname = "ω1t0$t0$a0", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/string-tests.eo")
public final class EOω1t0$EOt0$EOa0 extends PhDefault {
    
  public EOω1t0$EOt0$EOa0(final Phi sigma) {
    super(sigma);
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = new EOorg.EOeolang.EOstring(Phi.Φ);
        ret_base = new PhLocated(ret_base, 235, 10, "Φ.org.eolang.slice-end-greater-actual$t0$t0$a0.φ.ρ");
        ret_base = new PhWith(ret_base, "Δ", new Data.Value<>("some string"));
      Phi ret = new PhMethod(ret_base, "slice");
        ret = new PhLocated(ret, 234, 8, "Φ.org.eolang.slice-end-greater-actual$t0$t0$a0.φ");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 236, 10, "Φ.org.eolang.slice-end-greater-actual$t0$t0$a0.φ.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>(7L));
        Phi ret_2 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_2 = new PhLocated(ret_2, 237, 10, "Φ.org.eolang.slice-end-greater-actual$t0$t0$a0.φ.α1");
          ret_2 = new PhWith(ret_2, "Δ", new Data.Value<>(5L));
        ret = new PhWith(ret, 0, ret_1);
        ret = new PhWith(ret, 1, ret_2);
      return ret;
    })));
  }
}

// <o abstract="" ancestors="1" line="238" loc="Φ.org.eolang.slice-end-greater-actual$t0$t0$a1" name="slice-end-greater-actual$t0$t0$a1" parent="slice-end-greater-actual" pos="6"> 
//   <o line="238" loc="Φ.org.eolang.slice-end-greater-actual$t0$t0$a1.e" name="e" pos="7"/>
//   <o base="e" line="239" loc="Φ.org.eolang.slice-end-greater-actual$t0$t0$a1.φ" name="@" pos="8" ref="238"/>
// </o>
@XmirObject(name = "ω1t0$t0$a1", oname = "ω1t0$t0$a1", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/string-tests.eo")
public final class EOω1t0$EOt0$EOa1 extends PhDefault {
    
  public EOω1t0$EOt0$EOa1(final Phi sigma) {
    super(sigma);
    this.add("e", new AtFree(/* default */));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new PhMethod(rho, "e");
        ret = new PhLocated(ret, 239, 8, "Φ.org.eolang.slice-end-greater-actual$t0$t0$a1.φ");
      return ret;
    })));
  }
}
}
