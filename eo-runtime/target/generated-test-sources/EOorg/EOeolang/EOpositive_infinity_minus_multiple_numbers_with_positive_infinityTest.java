
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT b5a4c9a 2023-08-17T12:29:38) on 2023-08-18T14:42:30.920527Z; your changes will be discarded on the next build */
package EOorg.EOeolang;

import org.eolang.*;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

// <o abstract="" line="433" loc="Φ.org.eolang.positive-infinity-minus-multiple-numbers-with-positive-infinity" name="positive-infinity-minus-multiple-numbers-with-positive-infinity" original-name="positive-infinity-minus-multiple-numbers-with-positive-infinity" pos="0"> 
//   <o base="org.eolang.positive-infinity" const="" line="434" loc="Φ.org.eolang.positive-infinity-minus-multiple-numbers-with-positive-infinity.pos-inf" name="pos-inf" pos="2"/>
//   <o base="org.eolang.hamcrest.assert-that" line="435" loc="Φ.org.eolang.positive-infinity-minus-multiple-numbers-with-positive-infinity.φ" name="@" pos="2"> 
//     <o base=".as-bytes" line="436" loc="Φ.org.eolang.positive-infinity-minus-multiple-numbers-with-positive-infinity.φ.α0" pos="33"> 
//       <o base="positive-infinity-minus-multiple-numbers-with-positive-infinity$t1$t0$generated-scope-7c89b50c-212a-419c-8028-39ac89d6f160" cut="713" line="436" loc="Φ.org.eolang.positive-infinity-minus-multiple-numbers-with-positive-infinity.φ.α0.generated-scope-7c89b50c-212a-419c-8028-39ac89d6f160" name="generated-scope-7c89b50c-212a-419c-8028-39ac89d6f160" pos="12" ref="436"> 
//         <o as="pos-inf" base="pos-inf" level="1" loc="Φ.org.eolang.positive-infinity-minus-multiple-numbers-with-positive-infinity.φ.α0.generated-scope-7c89b50c-212a-419c-8028-39ac89d6f160.α0" ref="434"/>
//       </o>
//     </o>
//     <o base=".equal-to" line="437" loc="Φ.org.eolang.positive-infinity-minus-multiple-numbers-with-positive-infinity.φ.α1" pos="5"> 
//       <o base="$" line="437" loc="Φ.org.eolang.positive-infinity-minus-multiple-numbers-with-positive-infinity.φ.α1.ρ" pos="4"/>
//       <o base=".as-bytes" line="437" loc="Φ.org.eolang.positive-infinity-minus-multiple-numbers-with-positive-infinity.φ.α1.α0" pos="18"> 
//         <o base="org.eolang.nan" line="437" loc="Φ.org.eolang.positive-infinity-minus-multiple-numbers-with-positive-infinity.φ.α1.α0.ρ" pos="15"/>
//       </o>
//     </o>
//   </o>
// </o>
@XmirObject(name = "positive-infinity-minus-multiple-numbers-with-positive-infinityTest", oname = "positive-infinity-minus-multiple-numbers-with-positive-infinity", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/positive-infinity-tests.eo")
public final class EOpositive_infinity_minus_multiple_numbers_with_positive_infinityTest extends PhDefault {
  public EOpositive_infinity_minus_multiple_numbers_with_positive_infinityTest() {
    this.add("pos-inf", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("positive-infinity").get();
        ret = new PhLocated(ret, 434, 2, "Φ.org.eolang.positive-infinity-minus-multiple-numbers-with-positive-infinity.pos-inf");
      ret = new PhConst(ret);
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("hamcrest").get().attr("assert-that").get();
        ret = new PhLocated(ret, 435, 2, "Φ.org.eolang.positive-infinity-minus-multiple-numbers-with-positive-infinity.φ");
      ret = new PhCopy(ret);
        Phi ret_1_base = new EOω1t1$EOt0$EOgenerated_scope_7c89b50c_212a_419c_8028_39ac89d6f160(rho);
          ret_1_base = new PhLocated(ret_1_base, 436, 12, "Φ.org.eolang.positive-infinity-minus-multiple-numbers-with-positive-infinity.φ.α0.generated-scope-7c89b50c-212a-419c-8028-39ac89d6f160");
        Phi ret_1 = new PhMethod(ret_1_base, "as-bytes");
          ret_1 = new PhLocated(ret_1, 436, 33, "Φ.org.eolang.positive-infinity-minus-multiple-numbers-with-positive-infinity.φ.α0");
        Phi ret_2_base = rho;
          ret_2_base = new PhLocated(ret_2_base, 437, 4, "Φ.org.eolang.positive-infinity-minus-multiple-numbers-with-positive-infinity.φ.α1.ρ");
        Phi ret_2 = new PhMethod(ret_2_base, "equal-to");
          ret_2 = new PhLocated(ret_2, 437, 5, "Φ.org.eolang.positive-infinity-minus-multiple-numbers-with-positive-infinity.φ.α1");
        ret_2 = new PhCopy(ret_2);
          Phi ret_2_1_base = Phi.Φ.attr("org").get().attr("eolang").get().attr("nan").get();
            ret_2_1_base = new PhLocated(ret_2_1_base, 437, 15, "Φ.org.eolang.positive-infinity-minus-multiple-numbers-with-positive-infinity.φ.α1.α0.ρ");
          Phi ret_2_1 = new PhMethod(ret_2_1_base, "as-bytes");
            ret_2_1 = new PhLocated(ret_2_1, 437, 18, "Φ.org.eolang.positive-infinity-minus-multiple-numbers-with-positive-infinity.φ.α1.α0");
          ret_2 = new PhWith(ret_2, 0, ret_2_1);
        ret = new PhWith(ret, 0, ret_1);
        ret = new PhWith(ret, 1, ret_2);
      return ret;
    })));
  }

  @Test
  public void works() throws java.lang.Exception {
    Object obj = new Dataized(new EOpositive_infinity_minus_multiple_numbers_with_positive_infinityTest()).take();
    if (obj instanceof String) {
      Assertions.fail(obj.toString());
    } else {
      Assertions.assertTrue((Boolean) obj);
    }
  }

// <o abstract="" ancestors="1" line="436" loc="Φ.org.eolang.positive-infinity-minus-multiple-numbers-with-positive-infinity$t1$t0$generated-scope-7c89b50c-212a-419c-8028-39ac89d6f160" name="positive-infinity-minus-multiple-numbers-with-positive-infinity$t1$t0$generated-scope-7c89b50c-212a-419c-8028-39ac89d6f160" original-name="generated-scope-7c89b50c-212a-419c-8028-39ac89d6f160" parent="positive-infinity-minus-multiple-numbers-with-positive-infinity" pos="12"> 
//   <o base=".minus" line="436" loc="Φ.org.eolang.positive-infinity-minus-multiple-numbers-with-positive-infinity$t1$t0$generated-scope-7c89b50c-212a-419c-8028-39ac89d6f160.org.eolang.scope-7c89b50c-212a-419c-8028-39ac89d6f160" name="org.eolang.scope-7c89b50c-212a-419c-8028-39ac89d6f160" pos="12" scope="scope-7c89b50c-212a-419c-8028-39ac89d6f160"> 
//     <o base="pos-inf" line="436" loc="Φ.org.eolang.positive-infinity-minus-multiple-numbers-with-positive-infinity$t1$t0$generated-scope-7c89b50c-212a-419c-8028-39ac89d6f160.org.eolang.scope-7c89b50c-212a-419c-8028-39ac89d6f160.ρ" pos="5" ref="436.434.460" scope="scope-7c89b50c-212a-419c-8028-39ac89d6f160"/>
//     <o base="org.eolang.int" data="int" line="436" loc="Φ.org.eolang.positive-infinity-minus-multiple-numbers-with-positive-infinity$t1$t0$generated-scope-7c89b50c-212a-419c-8028-39ac89d6f160.org.eolang.scope-7c89b50c-212a-419c-8028-39ac89d6f160.α0" pos="19" scope="scope-7c89b50c-212a-419c-8028-39ac89d6f160">42</o>
//     <o base="pos-inf" line="436" loc="Φ.org.eolang.positive-infinity-minus-multiple-numbers-with-positive-infinity$t1$t0$generated-scope-7c89b50c-212a-419c-8028-39ac89d6f160.org.eolang.scope-7c89b50c-212a-419c-8028-39ac89d6f160.α1" pos="22" ref="436.434.460" scope="scope-7c89b50c-212a-419c-8028-39ac89d6f160"/>
//     <o base="org.eolang.int" data="int" line="436" loc="Φ.org.eolang.positive-infinity-minus-multiple-numbers-with-positive-infinity$t1$t0$generated-scope-7c89b50c-212a-419c-8028-39ac89d6f160.org.eolang.scope-7c89b50c-212a-419c-8028-39ac89d6f160.α2" pos="30" scope="scope-7c89b50c-212a-419c-8028-39ac89d6f160">30</o>
//   </o>
//   <o base="org.eolang.scope-7c89b50c-212a-419c-8028-39ac89d6f160" line="436" loc="Φ.org.eolang.positive-infinity-minus-multiple-numbers-with-positive-infinity$t1$t0$generated-scope-7c89b50c-212a-419c-8028-39ac89d6f160.φ" name="@" pos="12" ref="436"/>
//   <o level="1" line="436.434.460" loc="Φ.org.eolang.positive-infinity-minus-multiple-numbers-with-positive-infinity$t1$t0$generated-scope-7c89b50c-212a-419c-8028-39ac89d6f160.pos-inf" name="pos-inf"/>
// </o>
@XmirObject(name = "ω1t1$t0$generated-scope-7c89b50c-212a-419c-8028-39ac89d6f160", oname = "generated-scope-7c89b50c-212a-419c-8028-39ac89d6f160", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/positive-infinity-tests.eo")
public final class EOω1t1$EOt0$EOgenerated_scope_7c89b50c_212a_419c_8028_39ac89d6f160 extends PhDefault {
  public EOω1t1$EOt0$EOgenerated_scope_7c89b50c_212a_419c_8028_39ac89d6f160(final Phi sigma) {
    super(sigma);
    this.add("org.eolang.scope-7c89b50c-212a-419c-8028-39ac89d6f160", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = new PhMethod(new PhMethod(rho, "σ"), "pos-inf");
        ret_base = new PhLocated(ret_base, 436, 5, "Φ.org.eolang.positive-infinity-minus-multiple-numbers-with-positive-infinity$t1$t0$generated-scope-7c89b50c-212a-419c-8028-39ac89d6f160.org.eolang.scope-7c89b50c-212a-419c-8028-39ac89d6f160.ρ");
      Phi ret = new PhMethod(ret_base, "minus");
        ret = new PhLocated(ret, 436, 12, "Φ.org.eolang.positive-infinity-minus-multiple-numbers-with-positive-infinity$t1$t0$generated-scope-7c89b50c-212a-419c-8028-39ac89d6f160.org.eolang.scope-7c89b50c-212a-419c-8028-39ac89d6f160");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 436, 19, "Φ.org.eolang.positive-infinity-minus-multiple-numbers-with-positive-infinity$t1$t0$generated-scope-7c89b50c-212a-419c-8028-39ac89d6f160.org.eolang.scope-7c89b50c-212a-419c-8028-39ac89d6f160.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>(42L));
        Phi ret_2 = new PhMethod(new PhMethod(rho, "σ"), "pos-inf");
          ret_2 = new PhLocated(ret_2, 436, 22, "Φ.org.eolang.positive-infinity-minus-multiple-numbers-with-positive-infinity$t1$t0$generated-scope-7c89b50c-212a-419c-8028-39ac89d6f160.org.eolang.scope-7c89b50c-212a-419c-8028-39ac89d6f160.α1");
        Phi ret_3 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_3 = new PhLocated(ret_3, 436, 30, "Φ.org.eolang.positive-infinity-minus-multiple-numbers-with-positive-infinity$t1$t0$generated-scope-7c89b50c-212a-419c-8028-39ac89d6f160.org.eolang.scope-7c89b50c-212a-419c-8028-39ac89d6f160.α2");
          ret_3 = new PhWith(ret_3, "Δ", new Data.Value<>(30L));
        ret = new PhWith(ret, 0, ret_1);
        ret = new PhWith(ret, 1, ret_2);
        ret = new PhWith(ret, 2, ret_3);
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new PhMethod(rho, "org.eolang.scope-7c89b50c-212a-419c-8028-39ac89d6f160");
        ret = new PhLocated(ret, 436, 12, "Φ.org.eolang.positive-infinity-minus-multiple-numbers-with-positive-infinity$t1$t0$generated-scope-7c89b50c-212a-419c-8028-39ac89d6f160.φ");
      return ret;
    })));
  }
}
}
