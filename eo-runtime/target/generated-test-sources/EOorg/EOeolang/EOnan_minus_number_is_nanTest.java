
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT b5a4c9a 2023-08-17T12:29:38) on 2023-08-18T14:42:30.920527Z; your changes will be discarded on the next build */
package EOorg.EOeolang;

import org.eolang.*;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

// <o abstract="" line="133" loc="Φ.org.eolang.nan-minus-number-is-nan" name="nan-minus-number-is-nan" original-name="nan-minus-number-is-nan" pos="0"> 
//   <o base="org.eolang.nan" const="" line="134" loc="Φ.org.eolang.nan-minus-number-is-nan.not-a-number" name="not-a-number" pos="2"/>
//   <o base="org.eolang.hamcrest.assert-that" line="135" loc="Φ.org.eolang.nan-minus-number-is-nan.φ" name="@" pos="2"> 
//     <o base=".as-bytes" line="136" loc="Φ.org.eolang.nan-minus-number-is-nan.φ.α0" pos="27"> 
//       <o base="nan-minus-number-is-nan$t1$t0$generated-scope-19bb43eb-2e79-4f01-a193-4b04fc18f1fb" cut="174" line="136" loc="Φ.org.eolang.nan-minus-number-is-nan.φ.α0.generated-scope-19bb43eb-2e79-4f01-a193-4b04fc18f1fb" name="generated-scope-19bb43eb-2e79-4f01-a193-4b04fc18f1fb" pos="17" ref="136"> 
//         <o as="not-a-number" base="not-a-number" level="1" loc="Φ.org.eolang.nan-minus-number-is-nan.φ.α0.generated-scope-19bb43eb-2e79-4f01-a193-4b04fc18f1fb.α0" ref="134"/>
//       </o>
//     </o>
//     <o base=".equal-to" line="137" loc="Φ.org.eolang.nan-minus-number-is-nan.φ.α1" pos="5"> 
//       <o base="$" line="137" loc="Φ.org.eolang.nan-minus-number-is-nan.φ.α1.ρ" pos="4"/>
//       <o base=".as-bytes" line="137" loc="Φ.org.eolang.nan-minus-number-is-nan.φ.α1.α0" pos="27"> 
//         <o base="not-a-number" line="137" loc="Φ.org.eolang.nan-minus-number-is-nan.φ.α1.α0.ρ" pos="15" ref="134"/>
//       </o>
//     </o>
//   </o>
// </o>
@XmirObject(name = "nan-minus-number-is-nanTest", oname = "nan-minus-number-is-nan", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/nan-tests.eo")
public final class EOnan_minus_number_is_nanTest extends PhDefault {
  public EOnan_minus_number_is_nanTest() {
    this.add("not-a-number", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("nan").get();
        ret = new PhLocated(ret, 134, 2, "Φ.org.eolang.nan-minus-number-is-nan.not-a-number");
      ret = new PhConst(ret);
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("hamcrest").get().attr("assert-that").get();
        ret = new PhLocated(ret, 135, 2, "Φ.org.eolang.nan-minus-number-is-nan.φ");
      ret = new PhCopy(ret);
        Phi ret_1_base = new EOω1t1$EOt0$EOgenerated_scope_19bb43eb_2e79_4f01_a193_4b04fc18f1fb(rho);
          ret_1_base = new PhLocated(ret_1_base, 136, 17, "Φ.org.eolang.nan-minus-number-is-nan.φ.α0.generated-scope-19bb43eb-2e79-4f01-a193-4b04fc18f1fb");
        Phi ret_1 = new PhMethod(ret_1_base, "as-bytes");
          ret_1 = new PhLocated(ret_1, 136, 27, "Φ.org.eolang.nan-minus-number-is-nan.φ.α0");
        Phi ret_2_base = rho;
          ret_2_base = new PhLocated(ret_2_base, 137, 4, "Φ.org.eolang.nan-minus-number-is-nan.φ.α1.ρ");
        Phi ret_2 = new PhMethod(ret_2_base, "equal-to");
          ret_2 = new PhLocated(ret_2, 137, 5, "Φ.org.eolang.nan-minus-number-is-nan.φ.α1");
        ret_2 = new PhCopy(ret_2);
          Phi ret_2_1_base = new PhMethod(rho, "not-a-number");
            ret_2_1_base = new PhLocated(ret_2_1_base, 137, 15, "Φ.org.eolang.nan-minus-number-is-nan.φ.α1.α0.ρ");
          Phi ret_2_1 = new PhMethod(ret_2_1_base, "as-bytes");
            ret_2_1 = new PhLocated(ret_2_1, 137, 27, "Φ.org.eolang.nan-minus-number-is-nan.φ.α1.α0");
          ret_2 = new PhWith(ret_2, 0, ret_2_1);
        ret = new PhWith(ret, 0, ret_1);
        ret = new PhWith(ret, 1, ret_2);
      return ret;
    })));
  }

  @Test
  public void works() throws java.lang.Exception {
    Object obj = new Dataized(new EOnan_minus_number_is_nanTest()).take();
    if (obj instanceof String) {
      Assertions.fail(obj.toString());
    } else {
      Assertions.assertTrue((Boolean) obj);
    }
  }

// <o abstract="" ancestors="1" line="136" loc="Φ.org.eolang.nan-minus-number-is-nan$t1$t0$generated-scope-19bb43eb-2e79-4f01-a193-4b04fc18f1fb" name="nan-minus-number-is-nan$t1$t0$generated-scope-19bb43eb-2e79-4f01-a193-4b04fc18f1fb" original-name="generated-scope-19bb43eb-2e79-4f01-a193-4b04fc18f1fb" parent="nan-minus-number-is-nan" pos="17"> 
//   <o base=".minus" line="136" loc="Φ.org.eolang.nan-minus-number-is-nan$t1$t0$generated-scope-19bb43eb-2e79-4f01-a193-4b04fc18f1fb.org.eolang.scope-19bb43eb-2e79-4f01-a193-4b04fc18f1fb" name="org.eolang.scope-19bb43eb-2e79-4f01-a193-4b04fc18f1fb" pos="17" scope="scope-19bb43eb-2e79-4f01-a193-4b04fc18f1fb"> 
//     <o base="not-a-number" line="136" loc="Φ.org.eolang.nan-minus-number-is-nan$t1$t0$generated-scope-19bb43eb-2e79-4f01-a193-4b04fc18f1fb.org.eolang.scope-19bb43eb-2e79-4f01-a193-4b04fc18f1fb.ρ" pos="5" ref="136.134.460" scope="scope-19bb43eb-2e79-4f01-a193-4b04fc18f1fb"/>
//     <o base="org.eolang.int" data="int" line="136" loc="Φ.org.eolang.nan-minus-number-is-nan$t1$t0$generated-scope-19bb43eb-2e79-4f01-a193-4b04fc18f1fb.org.eolang.scope-19bb43eb-2e79-4f01-a193-4b04fc18f1fb.α0" pos="24" scope="scope-19bb43eb-2e79-4f01-a193-4b04fc18f1fb">42</o>
//   </o>
//   <o base="org.eolang.scope-19bb43eb-2e79-4f01-a193-4b04fc18f1fb" line="136" loc="Φ.org.eolang.nan-minus-number-is-nan$t1$t0$generated-scope-19bb43eb-2e79-4f01-a193-4b04fc18f1fb.φ" name="@" pos="17" ref="136"/>
//   <o level="1" line="136.134.460" loc="Φ.org.eolang.nan-minus-number-is-nan$t1$t0$generated-scope-19bb43eb-2e79-4f01-a193-4b04fc18f1fb.not-a-number" name="not-a-number"/>
// </o>
@XmirObject(name = "ω1t1$t0$generated-scope-19bb43eb-2e79-4f01-a193-4b04fc18f1fb", oname = "generated-scope-19bb43eb-2e79-4f01-a193-4b04fc18f1fb", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/nan-tests.eo")
public final class EOω1t1$EOt0$EOgenerated_scope_19bb43eb_2e79_4f01_a193_4b04fc18f1fb extends PhDefault {
  public EOω1t1$EOt0$EOgenerated_scope_19bb43eb_2e79_4f01_a193_4b04fc18f1fb(final Phi sigma) {
    super(sigma);
    this.add("org.eolang.scope-19bb43eb-2e79-4f01-a193-4b04fc18f1fb", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = new PhMethod(new PhMethod(rho, "σ"), "not-a-number");
        ret_base = new PhLocated(ret_base, 136, 5, "Φ.org.eolang.nan-minus-number-is-nan$t1$t0$generated-scope-19bb43eb-2e79-4f01-a193-4b04fc18f1fb.org.eolang.scope-19bb43eb-2e79-4f01-a193-4b04fc18f1fb.ρ");
      Phi ret = new PhMethod(ret_base, "minus");
        ret = new PhLocated(ret, 136, 17, "Φ.org.eolang.nan-minus-number-is-nan$t1$t0$generated-scope-19bb43eb-2e79-4f01-a193-4b04fc18f1fb.org.eolang.scope-19bb43eb-2e79-4f01-a193-4b04fc18f1fb");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 136, 24, "Φ.org.eolang.nan-minus-number-is-nan$t1$t0$generated-scope-19bb43eb-2e79-4f01-a193-4b04fc18f1fb.org.eolang.scope-19bb43eb-2e79-4f01-a193-4b04fc18f1fb.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>(42L));
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new PhMethod(rho, "org.eolang.scope-19bb43eb-2e79-4f01-a193-4b04fc18f1fb");
        ret = new PhLocated(ret, 136, 17, "Φ.org.eolang.nan-minus-number-is-nan$t1$t0$generated-scope-19bb43eb-2e79-4f01-a193-4b04fc18f1fb.φ");
      return ret;
    })));
  }
}
}
