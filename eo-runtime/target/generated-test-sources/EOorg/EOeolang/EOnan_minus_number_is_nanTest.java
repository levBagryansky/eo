
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT e24f541 2023-09-12T11:41:32) on 2023-10-03T10:45:38.539230Z; your changes will be discarded on the next build */
package EOorg.EOeolang;

import org.eolang.*;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

// <o abstract="" line="128" loc="Φ.org.eolang.nan-minus-number-is-nan" name="nan-minus-number-is-nan" original-name="nan-minus-number-is-nan" pos="0"> 
//   <o base="org.eolang.nan" const="" line="129" loc="Φ.org.eolang.nan-minus-number-is-nan.not-a-number" name="not-a-number" pos="2"/>
//   <o base=".eq" line="130" loc="Φ.org.eolang.nan-minus-number-is-nan.φ" name="@" pos="2"> 
//     <o base=".as-bytes" line="131" loc="Φ.org.eolang.nan-minus-number-is-nan.φ.ρ" pos="27"> 
//       <o base="nan-minus-number-is-nan$t1$t0$generated-scope-15c7c343-6eb9-4fff-8c22-7ceb6aeb5e64" cut="138" line="131" loc="Φ.org.eolang.nan-minus-number-is-nan.φ.ρ.generated-scope-15c7c343-6eb9-4fff-8c22-7ceb6aeb5e64" name="generated-scope-15c7c343-6eb9-4fff-8c22-7ceb6aeb5e64" pos="17" ref="131"> 
//         <o as="not-a-number" base="not-a-number" level="1" loc="Φ.org.eolang.nan-minus-number-is-nan.φ.ρ.generated-scope-15c7c343-6eb9-4fff-8c22-7ceb6aeb5e64.α0" ref="129"/>
//       </o>
//     </o>
//     <o base=".as-bytes" line="132" loc="Φ.org.eolang.nan-minus-number-is-nan.φ.α0" pos="16"> 
//       <o base="not-a-number" line="132" loc="Φ.org.eolang.nan-minus-number-is-nan.φ.α0.ρ" pos="4" ref="129"/>
//     </o>
//   </o>
// </o>
@XmirObject(name = "nan-minus-number-is-nanTest", oname = "nan-minus-number-is-nan", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/nan-tests.eo")
public final class EOnan_minus_number_is_nanTest extends PhDefault {
    
  public EOnan_minus_number_is_nanTest() {
    this.add("not-a-number", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("nan").get();
        ret = new PhLocated(ret, 129, 2, "Φ.org.eolang.nan-minus-number-is-nan.not-a-number");
      ret = new PhConst(ret);
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base_base = new EOω1t1$EOt0$EOgenerated_scope_15c7c343_6eb9_4fff_8c22_7ceb6aeb5e64(rho);
        ret_base_base = new PhLocated(ret_base_base, 131, 17, "Φ.org.eolang.nan-minus-number-is-nan.φ.ρ.generated-scope-15c7c343-6eb9-4fff-8c22-7ceb6aeb5e64");
      Phi ret_base = new PhMethod(ret_base_base, "as-bytes");
        ret_base = new PhLocated(ret_base, 131, 27, "Φ.org.eolang.nan-minus-number-is-nan.φ.ρ");
      Phi ret = new PhMethod(ret_base, "eq");
        ret = new PhLocated(ret, 130, 2, "Φ.org.eolang.nan-minus-number-is-nan.φ");
      ret = new PhCopy(ret);
        Phi ret_1_base = new PhMethod(rho, "not-a-number");
          ret_1_base = new PhLocated(ret_1_base, 132, 4, "Φ.org.eolang.nan-minus-number-is-nan.φ.α0.ρ");
        Phi ret_1 = new PhMethod(ret_1_base, "as-bytes");
          ret_1 = new PhLocated(ret_1, 132, 16, "Φ.org.eolang.nan-minus-number-is-nan.φ.α0");
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
  }

  @Test
  public void works() throws java.lang.Exception {
    Object obj = new Dataized(new EOnan_minus_number_is_nanTest()).take();
    if (obj instanceof String) {
      Assertions.fail(obj.toString());
    } else {
      Assertions.assertTrue((Boolean) obj);
    }
  }

// <o abstract="" ancestors="1" line="131" loc="Φ.org.eolang.nan-minus-number-is-nan$t1$t0$generated-scope-15c7c343-6eb9-4fff-8c22-7ceb6aeb5e64" name="nan-minus-number-is-nan$t1$t0$generated-scope-15c7c343-6eb9-4fff-8c22-7ceb6aeb5e64" original-name="generated-scope-15c7c343-6eb9-4fff-8c22-7ceb6aeb5e64" parent="nan-minus-number-is-nan" pos="17"> 
//   <o base=".minus" line="131" loc="Φ.org.eolang.nan-minus-number-is-nan$t1$t0$generated-scope-15c7c343-6eb9-4fff-8c22-7ceb6aeb5e64.org.eolang.scope-15c7c343-6eb9-4fff-8c22-7ceb6aeb5e64" name="org.eolang.scope-15c7c343-6eb9-4fff-8c22-7ceb6aeb5e64" pos="17" scope="scope-15c7c343-6eb9-4fff-8c22-7ceb6aeb5e64"> 
//     <o base="not-a-number" line="131" loc="Φ.org.eolang.nan-minus-number-is-nan$t1$t0$generated-scope-15c7c343-6eb9-4fff-8c22-7ceb6aeb5e64.org.eolang.scope-15c7c343-6eb9-4fff-8c22-7ceb6aeb5e64.ρ" pos="5" ref="131.129.458" scope="scope-15c7c343-6eb9-4fff-8c22-7ceb6aeb5e64"/>
//     <o base="org.eolang.int" data="int" line="131" loc="Φ.org.eolang.nan-minus-number-is-nan$t1$t0$generated-scope-15c7c343-6eb9-4fff-8c22-7ceb6aeb5e64.org.eolang.scope-15c7c343-6eb9-4fff-8c22-7ceb6aeb5e64.α0" pos="24" scope="scope-15c7c343-6eb9-4fff-8c22-7ceb6aeb5e64">42</o>
//   </o>
//   <o base="org.eolang.scope-15c7c343-6eb9-4fff-8c22-7ceb6aeb5e64" line="131" loc="Φ.org.eolang.nan-minus-number-is-nan$t1$t0$generated-scope-15c7c343-6eb9-4fff-8c22-7ceb6aeb5e64.φ" name="@" pos="17" ref="131"/>
//   <o level="1" line="131.129.458" loc="Φ.org.eolang.nan-minus-number-is-nan$t1$t0$generated-scope-15c7c343-6eb9-4fff-8c22-7ceb6aeb5e64.not-a-number" name="not-a-number"/>
// </o>
@XmirObject(name = "ω1t1$t0$generated-scope-15c7c343-6eb9-4fff-8c22-7ceb6aeb5e64", oname = "generated-scope-15c7c343-6eb9-4fff-8c22-7ceb6aeb5e64", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/nan-tests.eo")
public final class EOω1t1$EOt0$EOgenerated_scope_15c7c343_6eb9_4fff_8c22_7ceb6aeb5e64 extends PhDefault {
    
  public EOω1t1$EOt0$EOgenerated_scope_15c7c343_6eb9_4fff_8c22_7ceb6aeb5e64(final Phi sigma) {
    super(sigma);
    this.add("org.eolang.scope-15c7c343-6eb9-4fff-8c22-7ceb6aeb5e64", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = new PhMethod(new PhMethod(rho, "σ"), "not-a-number");
        ret_base = new PhLocated(ret_base, 131, 5, "Φ.org.eolang.nan-minus-number-is-nan$t1$t0$generated-scope-15c7c343-6eb9-4fff-8c22-7ceb6aeb5e64.org.eolang.scope-15c7c343-6eb9-4fff-8c22-7ceb6aeb5e64.ρ");
      Phi ret = new PhMethod(ret_base, "minus");
        ret = new PhLocated(ret, 131, 17, "Φ.org.eolang.nan-minus-number-is-nan$t1$t0$generated-scope-15c7c343-6eb9-4fff-8c22-7ceb6aeb5e64.org.eolang.scope-15c7c343-6eb9-4fff-8c22-7ceb6aeb5e64");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 131, 24, "Φ.org.eolang.nan-minus-number-is-nan$t1$t0$generated-scope-15c7c343-6eb9-4fff-8c22-7ceb6aeb5e64.org.eolang.scope-15c7c343-6eb9-4fff-8c22-7ceb6aeb5e64.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>(42L));
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new PhMethod(rho, "org.eolang.scope-15c7c343-6eb9-4fff-8c22-7ceb6aeb5e64");
        ret = new PhLocated(ret, 131, 17, "Φ.org.eolang.nan-minus-number-is-nan$t1$t0$generated-scope-15c7c343-6eb9-4fff-8c22-7ceb6aeb5e64.φ");
      return ret;
    })));
  }
}
}
