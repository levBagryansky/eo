
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT b5a4c9a 2023-08-17T12:29:38) on 2023-08-18T14:42:30.920527Z; your changes will be discarded on the next build */
package EOorg.EOeolang;

import org.eolang.*;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

// <o abstract="" line="90" loc="Φ.org.eolang.switch-complex-case" name="switch-complex-case" original-name="switch-complex-case" pos="0"> 
//   <o base="switch-complex-case$c1" cut="71" line="91" loc="Φ.org.eolang.switch-complex-case.c1" name="c1" pos="2" ref="91"/>
//   <o base="switch-complex-case$c2" cut="73" line="93" loc="Φ.org.eolang.switch-complex-case.c2" name="c2" pos="2" ref="93"/>
//   <o base="switch-complex-case$c3" cut="77" line="95" loc="Φ.org.eolang.switch-complex-case.c3" name="c3" pos="2" ref="95"/>
//   <o base="org.eolang.hamcrest.assert-that" line="97" loc="Φ.org.eolang.switch-complex-case.φ" name="@" pos="2"> 
//     <o base="org.eolang.switch" line="98" loc="Φ.org.eolang.switch-complex-case.φ.α0" pos="4"> 
//       <o base="org.eolang.tuple" data="tuple" line="99" loc="Φ.org.eolang.switch-complex-case.φ.α0.α0" pos="6"> 
//         <o base="switch-complex-case$t3$t0$t0$a0" cut="79" line="100" loc="Φ.org.eolang.switch-complex-case.φ.α0.α0.α0" pos="8" ref="100"> 
//           <o as="c1" base="c1" level="1" loc="Φ.org.eolang.switch-complex-case.φ.α0.α0.α0.α0" ref="91"/>
//         </o>
//         <o base="org.eolang.float" data="float" line="102" loc="Φ.org.eolang.switch-complex-case.φ.α0.α0.α1" pos="8">22.0</o>
//       </o>
//       <o base="org.eolang.tuple" data="tuple" line="103" loc="Φ.org.eolang.switch-complex-case.φ.α0.α1" pos="6"> 
//         <o base="switch-complex-case$t3$t0$t1$a0" cut="83" line="104" loc="Φ.org.eolang.switch-complex-case.φ.α0.α1.α0" pos="8" ref="104"> 
//           <o as="c2" base="c2" level="1" loc="Φ.org.eolang.switch-complex-case.φ.α0.α1.α0.α0" ref="93"/>
//         </o>
//         <o base="org.eolang.float" data="float" line="106" loc="Φ.org.eolang.switch-complex-case.φ.α0.α1.α1" pos="8">0.0</o>
//       </o>
//       <o base="org.eolang.tuple" data="tuple" line="107" loc="Φ.org.eolang.switch-complex-case.φ.α0.α2" pos="6"> 
//         <o base="switch-complex-case$t3$t0$t2$a0" cut="87" line="108" loc="Φ.org.eolang.switch-complex-case.φ.α0.α2.α0" pos="8" ref="108"> 
//           <o as="c3" base="c3" level="1" loc="Φ.org.eolang.switch-complex-case.φ.α0.α2.α0.α0" ref="95"/>
//         </o>
//         <o base="switch-complex-case$t3$t0$t2$a1" cut="89" line="110" loc="Φ.org.eolang.switch-complex-case.φ.α0.α2.α1" pos="8" ref="110"/>
//       </o>
//     </o>
//     <o base=".equal-to" line="112" loc="Φ.org.eolang.switch-complex-case.φ.α1" pos="5"> 
//       <o base="$" line="112" loc="Φ.org.eolang.switch-complex-case.φ.α1.ρ" pos="4"/>
//       <o base="org.eolang.string" data="string" line="112" loc="Φ.org.eolang.switch-complex-case.φ.α1.α0" pos="15">true case</o>
//     </o>
//   </o>
// </o>
@XmirObject(name = "switch-complex-caseTest", oname = "switch-complex-case", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/switch-tests.eo")
public final class EOswitch_complex_caseTest extends PhDefault {
  public EOswitch_complex_caseTest() {
    this.add("c1", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new EOω1c1(rho);
        ret = new PhLocated(ret, 91, 2, "Φ.org.eolang.switch-complex-case.c1");
      return ret;
    })));
    this.add("c2", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new EOω1c2(rho);
        ret = new PhLocated(ret, 93, 2, "Φ.org.eolang.switch-complex-case.c2");
      return ret;
    })));
    this.add("c3", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new EOω1c3(rho);
        ret = new PhLocated(ret, 95, 2, "Φ.org.eolang.switch-complex-case.c3");
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("hamcrest").get().attr("assert-that").get();
        ret = new PhLocated(ret, 97, 2, "Φ.org.eolang.switch-complex-case.φ");
      ret = new PhCopy(ret);
        Phi ret_1 = Phi.Φ.attr("org").get().attr("eolang").get().attr("switch").get();
          ret_1 = new PhLocated(ret_1, 98, 4, "Φ.org.eolang.switch-complex-case.φ.α0");
        ret_1 = new PhCopy(ret_1);
          Phi ret_1_1 = Phi.Φ.attr("org").get().attr("eolang").get().attr("tuple").get();
            ret_1_1 = new PhLocated(ret_1_1, 99, 6, "Φ.org.eolang.switch-complex-case.φ.α0.α0");
            Phi[] ret_1_1_a = new Phi[2];
            Phi ret_1_1_a0 = new EOω1t3$EOt0$EOt0$EOa0(rho);
              ret_1_1_a0 = new PhLocated(ret_1_1_a0, 100, 8, "Φ.org.eolang.switch-complex-case.φ.α0.α0.α0");
            ret_1_1_a[0] = ret_1_1_a0;
            Phi ret_1_1_a1 = new EOorg.EOeolang.EOfloat(Phi.Φ);
              ret_1_1_a1 = new PhLocated(ret_1_1_a1, 102, 8, "Φ.org.eolang.switch-complex-case.φ.α0.α0.α1");
              ret_1_1_a1 = new PhWith(ret_1_1_a1, "Δ", new Data.Value<>(22.0d));
            ret_1_1_a[1] = ret_1_1_a1;
            ret_1_1 = new PhWith(new PhCopy(ret_1_1), "Δ", new Data.Value<Phi[]>(ret_1_1_a));
          Phi ret_1_2 = Phi.Φ.attr("org").get().attr("eolang").get().attr("tuple").get();
            ret_1_2 = new PhLocated(ret_1_2, 103, 6, "Φ.org.eolang.switch-complex-case.φ.α0.α1");
            Phi[] ret_1_2_a = new Phi[2];
            Phi ret_1_2_a0 = new EOω1t3$EOt0$EOt1$EOa0(rho);
              ret_1_2_a0 = new PhLocated(ret_1_2_a0, 104, 8, "Φ.org.eolang.switch-complex-case.φ.α0.α1.α0");
            ret_1_2_a[0] = ret_1_2_a0;
            Phi ret_1_2_a1 = new EOorg.EOeolang.EOfloat(Phi.Φ);
              ret_1_2_a1 = new PhLocated(ret_1_2_a1, 106, 8, "Φ.org.eolang.switch-complex-case.φ.α0.α1.α1");
              ret_1_2_a1 = new PhWith(ret_1_2_a1, "Δ", new Data.Value<>(0.0d));
            ret_1_2_a[1] = ret_1_2_a1;
            ret_1_2 = new PhWith(new PhCopy(ret_1_2), "Δ", new Data.Value<Phi[]>(ret_1_2_a));
          Phi ret_1_3 = Phi.Φ.attr("org").get().attr("eolang").get().attr("tuple").get();
            ret_1_3 = new PhLocated(ret_1_3, 107, 6, "Φ.org.eolang.switch-complex-case.φ.α0.α2");
            Phi[] ret_1_3_a = new Phi[2];
            Phi ret_1_3_a0 = new EOω1t3$EOt0$EOt2$EOa0(rho);
              ret_1_3_a0 = new PhLocated(ret_1_3_a0, 108, 8, "Φ.org.eolang.switch-complex-case.φ.α0.α2.α0");
            ret_1_3_a[0] = ret_1_3_a0;
            Phi ret_1_3_a1 = new EOω1t3$EOt0$EOt2$EOa1(rho);
              ret_1_3_a1 = new PhLocated(ret_1_3_a1, 110, 8, "Φ.org.eolang.switch-complex-case.φ.α0.α2.α1");
            ret_1_3_a[1] = ret_1_3_a1;
            ret_1_3 = new PhWith(new PhCopy(ret_1_3), "Δ", new Data.Value<Phi[]>(ret_1_3_a));
          ret_1 = new PhWith(ret_1, 0, ret_1_1);
          ret_1 = new PhWith(ret_1, 1, ret_1_2);
          ret_1 = new PhWith(ret_1, 2, ret_1_3);
        Phi ret_2_base = rho;
          ret_2_base = new PhLocated(ret_2_base, 112, 4, "Φ.org.eolang.switch-complex-case.φ.α1.ρ");
        Phi ret_2 = new PhMethod(ret_2_base, "equal-to");
          ret_2 = new PhLocated(ret_2, 112, 5, "Φ.org.eolang.switch-complex-case.φ.α1");
        ret_2 = new PhCopy(ret_2);
          Phi ret_2_1 = new EOorg.EOeolang.EOstring(Phi.Φ);
            ret_2_1 = new PhLocated(ret_2_1, 112, 15, "Φ.org.eolang.switch-complex-case.φ.α1.α0");
            ret_2_1 = new PhWith(ret_2_1, "Δ", new Data.Value<>("true case"));
          ret_2 = new PhWith(ret_2, 0, ret_2_1);
        ret = new PhWith(ret, 0, ret_1);
        ret = new PhWith(ret, 1, ret_2);
      return ret;
    })));
  }

  @Test
  public void works() throws java.lang.Exception {
    Object obj = new Dataized(new EOswitch_complex_caseTest()).take();
    if (obj instanceof String) {
      Assertions.fail(obj.toString());
    } else {
      Assertions.assertTrue((Boolean) obj);
    }
  }

// <o abstract="" ancestors="1" line="91" loc="Φ.org.eolang.switch-complex-case$c1" name="switch-complex-case$c1" original-name="c1" parent="switch-complex-case" pos="2"> 
//   <o base="org.eolang.bool" data="bool" line="92" loc="Φ.org.eolang.switch-complex-case$c1.φ" name="@" pos="4">FALSE</o>
// </o>
@XmirObject(name = "ω1c1", oname = "c1", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/switch-tests.eo")
public final class EOω1c1 extends PhDefault {
  public EOω1c1(final Phi sigma) {
    super(sigma);
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new EOorg.EOeolang.EObool(Phi.Φ);
        ret = new PhLocated(ret, 92, 4, "Φ.org.eolang.switch-complex-case$c1.φ");
        ret = new PhWith(ret, "Δ", new Data.Value<>(Boolean.FALSE));
      return ret;
    })));
  }
}

// <o abstract="" ancestors="1" line="93" loc="Φ.org.eolang.switch-complex-case$c2" name="switch-complex-case$c2" original-name="c2" parent="switch-complex-case" pos="2"> 
//   <o base=".eq" line="94" loc="Φ.org.eolang.switch-complex-case$c2.φ" name="@" pos="7"> 
//     <o base="org.eolang.string" data="string" line="94" loc="Φ.org.eolang.switch-complex-case$c2.φ.ρ" pos="4">1</o>
//     <o base="org.eolang.string" data="string" line="94" loc="Φ.org.eolang.switch-complex-case$c2.φ.α0" pos="11">2</o>
//   </o>
// </o>
@XmirObject(name = "ω1c2", oname = "c2", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/switch-tests.eo")
public final class EOω1c2 extends PhDefault {
  public EOω1c2(final Phi sigma) {
    super(sigma);
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = new EOorg.EOeolang.EOstring(Phi.Φ);
        ret_base = new PhLocated(ret_base, 94, 4, "Φ.org.eolang.switch-complex-case$c2.φ.ρ");
        ret_base = new PhWith(ret_base, "Δ", new Data.Value<>("1"));
      Phi ret = new PhMethod(ret_base, "eq");
        ret = new PhLocated(ret, 94, 7, "Φ.org.eolang.switch-complex-case$c2.φ");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOstring(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 94, 11, "Φ.org.eolang.switch-complex-case$c2.φ.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>("2"));
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
  }
}

// <o abstract="" ancestors="1" line="95" loc="Φ.org.eolang.switch-complex-case$c3" name="switch-complex-case$c3" original-name="c3" parent="switch-complex-case" pos="2"> 
//   <o base="org.eolang.bool" data="bool" line="96" loc="Φ.org.eolang.switch-complex-case$c3.φ" name="@" pos="4">TRUE</o>
// </o>
@XmirObject(name = "ω1c3", oname = "c3", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/switch-tests.eo")
public final class EOω1c3 extends PhDefault {
  public EOω1c3(final Phi sigma) {
    super(sigma);
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new EOorg.EOeolang.EObool(Phi.Φ);
        ret = new PhLocated(ret, 96, 4, "Φ.org.eolang.switch-complex-case$c3.φ");
        ret = new PhWith(ret, "Δ", new Data.Value<>(Boolean.TRUE));
      return ret;
    })));
  }
}

// <o abstract="" ancestors="1" line="100" loc="Φ.org.eolang.switch-complex-case$t3$t0$t0$a0" name="switch-complex-case$t3$t0$t0$a0" parent="switch-complex-case" pos="8"> 
//   <o base="c1" line="101" loc="Φ.org.eolang.switch-complex-case$t3$t0$t0$a0.φ" name="@" pos="10" ref="100.91.461"/>
//   <o level="1" line="100.91.461" loc="Φ.org.eolang.switch-complex-case$t3$t0$t0$a0.c1" name="c1"/>
// </o>
@XmirObject(name = "ω1t3$t0$t0$a0", oname = "ω1t3$t0$t0$a0", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/switch-tests.eo")
public final class EOω1t3$EOt0$EOt0$EOa0 extends PhDefault {
  public EOω1t3$EOt0$EOt0$EOa0(final Phi sigma) {
    super(sigma);
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new PhMethod(new PhMethod(rho, "σ"), "c1");
        ret = new PhLocated(ret, 101, 10, "Φ.org.eolang.switch-complex-case$t3$t0$t0$a0.φ");
      return ret;
    })));
  }
}

// <o abstract="" ancestors="1" line="104" loc="Φ.org.eolang.switch-complex-case$t3$t0$t1$a0" name="switch-complex-case$t3$t0$t1$a0" parent="switch-complex-case" pos="8"> 
//   <o base="c2" line="105" loc="Φ.org.eolang.switch-complex-case$t3$t0$t1$a0.φ" name="@" pos="10" ref="104.93.462"/>
//   <o level="1" line="104.93.462" loc="Φ.org.eolang.switch-complex-case$t3$t0$t1$a0.c2" name="c2"/>
// </o>
@XmirObject(name = "ω1t3$t0$t1$a0", oname = "ω1t3$t0$t1$a0", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/switch-tests.eo")
public final class EOω1t3$EOt0$EOt1$EOa0 extends PhDefault {
  public EOω1t3$EOt0$EOt1$EOa0(final Phi sigma) {
    super(sigma);
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new PhMethod(new PhMethod(rho, "σ"), "c2");
        ret = new PhLocated(ret, 105, 10, "Φ.org.eolang.switch-complex-case$t3$t0$t1$a0.φ");
      return ret;
    })));
  }
}

// <o abstract="" ancestors="1" line="108" loc="Φ.org.eolang.switch-complex-case$t3$t0$t2$a0" name="switch-complex-case$t3$t0$t2$a0" parent="switch-complex-case" pos="8"> 
//   <o base="c3" line="109" loc="Φ.org.eolang.switch-complex-case$t3$t0$t2$a0.φ" name="@" pos="10" ref="108.95.463"/>
//   <o level="1" line="108.95.463" loc="Φ.org.eolang.switch-complex-case$t3$t0$t2$a0.c3" name="c3"/>
// </o>
@XmirObject(name = "ω1t3$t0$t2$a0", oname = "ω1t3$t0$t2$a0", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/switch-tests.eo")
public final class EOω1t3$EOt0$EOt2$EOa0 extends PhDefault {
  public EOω1t3$EOt0$EOt2$EOa0(final Phi sigma) {
    super(sigma);
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new PhMethod(new PhMethod(rho, "σ"), "c3");
        ret = new PhLocated(ret, 109, 10, "Φ.org.eolang.switch-complex-case$t3$t0$t2$a0.φ");
      return ret;
    })));
  }
}

// <o abstract="" ancestors="1" line="110" loc="Φ.org.eolang.switch-complex-case$t3$t0$t2$a1" name="switch-complex-case$t3$t0$t2$a1" parent="switch-complex-case" pos="8"> 
//   <o base="org.eolang.string" data="string" line="111" loc="Φ.org.eolang.switch-complex-case$t3$t0$t2$a1.φ" name="@" pos="10">true case</o>
// </o>
@XmirObject(name = "ω1t3$t0$t2$a1", oname = "ω1t3$t0$t2$a1", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/switch-tests.eo")
public final class EOω1t3$EOt0$EOt2$EOa1 extends PhDefault {
  public EOω1t3$EOt0$EOt2$EOa1(final Phi sigma) {
    super(sigma);
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new EOorg.EOeolang.EOstring(Phi.Φ);
        ret = new PhLocated(ret, 111, 10, "Φ.org.eolang.switch-complex-case$t3$t0$t2$a1.φ");
        ret = new PhWith(ret, "Δ", new Data.Value<>("true case"));
      return ret;
    })));
  }
}
}
