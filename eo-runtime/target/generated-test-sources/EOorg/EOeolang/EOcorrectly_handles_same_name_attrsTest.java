
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT e24f541 2023-09-12T11:41:32) on 2023-10-03T10:45:38.539230Z; your changes will be discarded on the next build */
package EOorg.EOeolang;

import org.eolang.*;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

// <o abstract="" line="436" loc="Φ.org.eolang.correctly-handles-same-name-attrs" name="correctly-handles-same-name-attrs" original-name="correctly-handles-same-name-attrs" pos="0"> 
//   <o base="correctly-handles-same-name-attrs$calc" cut="650" line="437" loc="Φ.org.eolang.correctly-handles-same-name-attrs.calc" name="calc" pos="2" ref="437"/>
//   <o base=".eq" line="441" loc="Φ.org.eolang.correctly-handles-same-name-attrs.φ" name="@" pos="2"> 
//     <o base="calc" line="442" loc="Φ.org.eolang.correctly-handles-same-name-attrs.φ.ρ" pos="4" ref="437"> 
//       <o base="correctly-handles-same-name-attrs$t1$t0$a0" cut="658" line="443" loc="Φ.org.eolang.correctly-handles-same-name-attrs.φ.ρ.α0" pos="6" ref="443"/>
//       <o base="correctly-handles-same-name-attrs$t1$t0$a1" cut="670" line="451" loc="Φ.org.eolang.correctly-handles-same-name-attrs.φ.ρ.α1" pos="6" ref="451"/>
//     </o>
//     <o base="org.eolang.int" data="int" line="459" loc="Φ.org.eolang.correctly-handles-same-name-attrs.φ.α0" pos="4">9</o>
//   </o>
// </o>
@XmirObject(name = "correctly-handles-same-name-attrsTest", oname = "correctly-handles-same-name-attrs", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/runtime-tests.eo")
public final class EOcorrectly_handles_same_name_attrsTest extends PhDefault {
    
  public EOcorrectly_handles_same_name_attrsTest() {
    this.add("calc", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new EOω1calc(rho);
        ret = new PhLocated(ret, 437, 2, "Φ.org.eolang.correctly-handles-same-name-attrs.calc");
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = new PhMethod(rho, "calc");
        ret_base = new PhLocated(ret_base, 442, 4, "Φ.org.eolang.correctly-handles-same-name-attrs.φ.ρ");
      ret_base = new PhCopy(ret_base);
        Phi ret_base_1 = new EOω1t1$EOt0$EOa0(rho);
          ret_base_1 = new PhLocated(ret_base_1, 443, 6, "Φ.org.eolang.correctly-handles-same-name-attrs.φ.ρ.α0");
        Phi ret_base_2 = new EOω1t1$EOt0$EOa1(rho);
          ret_base_2 = new PhLocated(ret_base_2, 451, 6, "Φ.org.eolang.correctly-handles-same-name-attrs.φ.ρ.α1");
        ret_base = new PhWith(ret_base, 0, ret_base_1);
        ret_base = new PhWith(ret_base, 1, ret_base_2);
      Phi ret = new PhMethod(ret_base, "eq");
        ret = new PhLocated(ret, 441, 2, "Φ.org.eolang.correctly-handles-same-name-attrs.φ");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 459, 4, "Φ.org.eolang.correctly-handles-same-name-attrs.φ.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>(9L));
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
  }

  @Test
  public void works() throws java.lang.Exception {
    Object obj = new Dataized(new EOcorrectly_handles_same_name_attrsTest()).take();
    if (obj instanceof String) {
      Assertions.fail(obj.toString());
    } else {
      Assertions.assertTrue((Boolean) obj);
    }
  }

// <o abstract="" ancestors="1" line="437" loc="Φ.org.eolang.correctly-handles-same-name-attrs$calc" name="correctly-handles-same-name-attrs$calc" original-name="calc" parent="correctly-handles-same-name-attrs" pos="2"> 
//   <o line="437" loc="Φ.org.eolang.correctly-handles-same-name-attrs$calc.f" name="f" pos="3"/>
//   <o line="437" loc="Φ.org.eolang.correctly-handles-same-name-attrs$calc.s" name="s" pos="5"/>
//   <o base=".plus" line="438" loc="Φ.org.eolang.correctly-handles-same-name-attrs$calc.φ" name="@" pos="4"> 
//     <o base=".next" line="439" loc="Φ.org.eolang.correctly-handles-same-name-attrs$calc.φ.ρ" pos="7"> 
//       <o base="f" line="439" loc="Φ.org.eolang.correctly-handles-same-name-attrs$calc.φ.ρ.ρ" pos="6" ref="437"/>
//     </o>
//     <o base=".next" line="440" loc="Φ.org.eolang.correctly-handles-same-name-attrs$calc.φ.α0" pos="7"> 
//       <o base="s" line="440" loc="Φ.org.eolang.correctly-handles-same-name-attrs$calc.φ.α0.ρ" pos="6" ref="437"/>
//     </o>
//   </o>
// </o>
@XmirObject(name = "ω1calc", oname = "calc", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/runtime-tests.eo")
public final class EOω1calc extends PhDefault {
    
  public EOω1calc(final Phi sigma) {
    super(sigma);
    this.add("f", new AtFree(/* default */));
    this.add("s", new AtFree(/* default */));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base_base = new PhMethod(rho, "f");
        ret_base_base = new PhLocated(ret_base_base, 439, 6, "Φ.org.eolang.correctly-handles-same-name-attrs$calc.φ.ρ.ρ");
      Phi ret_base = new PhMethod(ret_base_base, "next");
        ret_base = new PhLocated(ret_base, 439, 7, "Φ.org.eolang.correctly-handles-same-name-attrs$calc.φ.ρ");
      Phi ret = new PhMethod(ret_base, "plus");
        ret = new PhLocated(ret, 438, 4, "Φ.org.eolang.correctly-handles-same-name-attrs$calc.φ");
      ret = new PhCopy(ret);
        Phi ret_1_base = new PhMethod(rho, "s");
          ret_1_base = new PhLocated(ret_1_base, 440, 6, "Φ.org.eolang.correctly-handles-same-name-attrs$calc.φ.α0.ρ");
        Phi ret_1 = new PhMethod(ret_1_base, "next");
          ret_1 = new PhLocated(ret_1, 440, 7, "Φ.org.eolang.correctly-handles-same-name-attrs$calc.φ.α0");
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
  }
}

// <o abstract="" ancestors="1" line="443" loc="Φ.org.eolang.correctly-handles-same-name-attrs$t1$t0$a0" name="correctly-handles-same-name-attrs$t1$t0$a0" parent="correctly-handles-same-name-attrs" pos="6"> 
//   <o base="correctly-handles-same-name-attrs$t1$t0$a0$build" cut="658" line="444" loc="Φ.org.eolang.correctly-handles-same-name-attrs$t1$t0$a0.build" name="build" pos="8" ref="444"/>
//   <o base="build" line="450" loc="Φ.org.eolang.correctly-handles-same-name-attrs$t1$t0$a0.φ" name="@" pos="8" ref="444"> 
//     <o base="org.eolang.int" data="int" line="450" loc="Φ.org.eolang.correctly-handles-same-name-attrs$t1$t0$a0.φ.α0" pos="14">1</o>
//   </o>
// </o>
@XmirObject(name = "ω1t1$t0$a0", oname = "ω1t1$t0$a0", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/runtime-tests.eo")
public final class EOω1t1$EOt0$EOa0 extends PhDefault {
    
  public EOω1t1$EOt0$EOa0(final Phi sigma) {
    super(sigma);
    this.add("build", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new EOω2build(rho);
        ret = new PhLocated(ret, 444, 8, "Φ.org.eolang.correctly-handles-same-name-attrs$t1$t0$a0.build");
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new PhMethod(rho, "build");
        ret = new PhLocated(ret, 450, 8, "Φ.org.eolang.correctly-handles-same-name-attrs$t1$t0$a0.φ");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 450, 14, "Φ.org.eolang.correctly-handles-same-name-attrs$t1$t0$a0.φ.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>(1L));
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
  }

// <o abstract="" ancestors="2" line="444" loc="Φ.org.eolang.correctly-handles-same-name-attrs$t1$t0$a0$build" name="correctly-handles-same-name-attrs$t1$t0$a0$build" original-name="build" parent="correctly-handles-same-name-attrs$t1$t0$a0" pos="8"> 
//   <o line="444" loc="Φ.org.eolang.correctly-handles-same-name-attrs$t1$t0$a0$build.x" name="x" pos="9"/>
//   <o base=".plus" line="445" loc="Φ.org.eolang.correctly-handles-same-name-attrs$t1$t0$a0$build.φ" name="@" pos="11"> 
//     <o base="x" line="445" loc="Φ.org.eolang.correctly-handles-same-name-attrs$t1$t0$a0$build.φ.ρ" pos="10" ref="444"/>
//     <o base="org.eolang.int" data="int" line="445" loc="Φ.org.eolang.correctly-handles-same-name-attrs$t1$t0$a0$build.φ.α0" pos="17">1</o>
//   </o>
//   <o base="correctly-handles-same-name-attrs-simplified$t1$t0$a0$build" line="446" loc="Φ.org.eolang.correctly-handles-same-name-attrs$t1$t0$a0$build.next" name="next" pos="10" ref="428"> 
//     <o base=".plus" line="447" loc="Φ.org.eolang.correctly-handles-same-name-attrs$t1$t0$a0$build.next.α0" pos="12"> 
//       <o base="x" line="448" loc="Φ.org.eolang.correctly-handles-same-name-attrs$t1$t0$a0$build.next.α0.ρ" pos="14" ref="444"/>
//       <o base="org.eolang.int" data="int" line="449" loc="Φ.org.eolang.correctly-handles-same-name-attrs$t1$t0$a0$build.next.α0.α0" pos="14">1</o>
//     </o>
//   </o>
// </o>
@XmirObject(name = "ω2build", oname = "build", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/runtime-tests.eo")
public final class EOω2build extends PhDefault {
    
  public EOω2build(final Phi sigma) {
    super(sigma);
    this.add("x", new AtFree(/* default */));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = new PhMethod(rho, "x");
        ret_base = new PhLocated(ret_base, 445, 10, "Φ.org.eolang.correctly-handles-same-name-attrs$t1$t0$a0$build.φ.ρ");
      Phi ret = new PhMethod(ret_base, "plus");
        ret = new PhLocated(ret, 445, 11, "Φ.org.eolang.correctly-handles-same-name-attrs$t1$t0$a0$build.φ");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 445, 17, "Φ.org.eolang.correctly-handles-same-name-attrs$t1$t0$a0$build.φ.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>(1L));
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
    this.add("next", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new EOω2build(rho);
        ret = new PhLocated(ret, 446, 10, "Φ.org.eolang.correctly-handles-same-name-attrs$t1$t0$a0$build.next");
      ret = new PhCopy(ret);
        Phi ret_1_base = new PhMethod(rho, "x");
          ret_1_base = new PhLocated(ret_1_base, 448, 14, "Φ.org.eolang.correctly-handles-same-name-attrs$t1$t0$a0$build.next.α0.ρ");
        Phi ret_1 = new PhMethod(ret_1_base, "plus");
          ret_1 = new PhLocated(ret_1, 447, 12, "Φ.org.eolang.correctly-handles-same-name-attrs$t1$t0$a0$build.next.α0");
        ret_1 = new PhCopy(ret_1);
          Phi ret_1_1 = new EOorg.EOeolang.EOint(Phi.Φ);
            ret_1_1 = new PhLocated(ret_1_1, 449, 14, "Φ.org.eolang.correctly-handles-same-name-attrs$t1$t0$a0$build.next.α0.α0");
            ret_1_1 = new PhWith(ret_1_1, "Δ", new Data.Value<>(1L));
          ret_1 = new PhWith(ret_1, 0, ret_1_1);
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
  }
}
}

// <o abstract="" ancestors="1" line="451" loc="Φ.org.eolang.correctly-handles-same-name-attrs$t1$t0$a1" name="correctly-handles-same-name-attrs$t1$t0$a1" parent="correctly-handles-same-name-attrs" pos="6"> 
//   <o base="correctly-handles-same-name-attrs$t1$t0$a1$build" cut="670" line="452" loc="Φ.org.eolang.correctly-handles-same-name-attrs$t1$t0$a1.build" name="build" pos="8" ref="452"/>
//   <o base="build" line="458" loc="Φ.org.eolang.correctly-handles-same-name-attrs$t1$t0$a1.φ" name="@" pos="8" ref="452"> 
//     <o base="org.eolang.int" data="int" line="458" loc="Φ.org.eolang.correctly-handles-same-name-attrs$t1$t0$a1.φ.α0" pos="14">2</o>
//   </o>
// </o>
@XmirObject(name = "ω1t1$t0$a1", oname = "ω1t1$t0$a1", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/runtime-tests.eo")
public final class EOω1t1$EOt0$EOa1 extends PhDefault {
    
  public EOω1t1$EOt0$EOa1(final Phi sigma) {
    super(sigma);
    this.add("build", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new EOω2build(rho);
        ret = new PhLocated(ret, 452, 8, "Φ.org.eolang.correctly-handles-same-name-attrs$t1$t0$a1.build");
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new PhMethod(rho, "build");
        ret = new PhLocated(ret, 458, 8, "Φ.org.eolang.correctly-handles-same-name-attrs$t1$t0$a1.φ");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 458, 14, "Φ.org.eolang.correctly-handles-same-name-attrs$t1$t0$a1.φ.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>(2L));
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
  }

// <o abstract="" ancestors="2" line="452" loc="Φ.org.eolang.correctly-handles-same-name-attrs$t1$t0$a1$build" name="correctly-handles-same-name-attrs$t1$t0$a1$build" original-name="build" parent="correctly-handles-same-name-attrs$t1$t0$a1" pos="8"> 
//   <o line="452" loc="Φ.org.eolang.correctly-handles-same-name-attrs$t1$t0$a1$build.y" name="y" pos="9"/>
//   <o base=".plus" line="453" loc="Φ.org.eolang.correctly-handles-same-name-attrs$t1$t0$a1$build.φ" name="@" pos="11"> 
//     <o base="y" line="453" loc="Φ.org.eolang.correctly-handles-same-name-attrs$t1$t0$a1$build.φ.ρ" pos="10" ref="452"/>
//     <o base="org.eolang.int" data="int" line="453" loc="Φ.org.eolang.correctly-handles-same-name-attrs$t1$t0$a1$build.φ.α0" pos="17">2</o>
//   </o>
//   <o base="correctly-handles-same-name-attrs-simplified$t1$t0$a0$build" line="454" loc="Φ.org.eolang.correctly-handles-same-name-attrs$t1$t0$a1$build.next" name="next" pos="10" ref="428"> 
//     <o base=".plus" line="455" loc="Φ.org.eolang.correctly-handles-same-name-attrs$t1$t0$a1$build.next.α0" pos="12"> 
//       <o base="y" line="456" loc="Φ.org.eolang.correctly-handles-same-name-attrs$t1$t0$a1$build.next.α0.ρ" pos="14" ref="452"/>
//       <o base="org.eolang.int" data="int" line="457" loc="Φ.org.eolang.correctly-handles-same-name-attrs$t1$t0$a1$build.next.α0.α0" pos="14">2</o>
//     </o>
//   </o>
// </o>
@XmirObject(name = "ω2build", oname = "build", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/runtime-tests.eo")
public final class EOω2build extends PhDefault {
    
  public EOω2build(final Phi sigma) {
    super(sigma);
    this.add("y", new AtFree(/* default */));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = new PhMethod(rho, "y");
        ret_base = new PhLocated(ret_base, 453, 10, "Φ.org.eolang.correctly-handles-same-name-attrs$t1$t0$a1$build.φ.ρ");
      Phi ret = new PhMethod(ret_base, "plus");
        ret = new PhLocated(ret, 453, 11, "Φ.org.eolang.correctly-handles-same-name-attrs$t1$t0$a1$build.φ");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 453, 17, "Φ.org.eolang.correctly-handles-same-name-attrs$t1$t0$a1$build.φ.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>(2L));
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
    this.add("next", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new EOω2build(rho);
        ret = new PhLocated(ret, 454, 10, "Φ.org.eolang.correctly-handles-same-name-attrs$t1$t0$a1$build.next");
      ret = new PhCopy(ret);
        Phi ret_1_base = new PhMethod(rho, "y");
          ret_1_base = new PhLocated(ret_1_base, 456, 14, "Φ.org.eolang.correctly-handles-same-name-attrs$t1$t0$a1$build.next.α0.ρ");
        Phi ret_1 = new PhMethod(ret_1_base, "plus");
          ret_1 = new PhLocated(ret_1, 455, 12, "Φ.org.eolang.correctly-handles-same-name-attrs$t1$t0$a1$build.next.α0");
        ret_1 = new PhCopy(ret_1);
          Phi ret_1_1 = new EOorg.EOeolang.EOint(Phi.Φ);
            ret_1_1 = new PhLocated(ret_1_1, 457, 14, "Φ.org.eolang.correctly-handles-same-name-attrs$t1$t0$a1$build.next.α0.α0");
            ret_1_1 = new PhWith(ret_1_1, "Δ", new Data.Value<>(2L));
          ret_1 = new PhWith(ret_1, 0, ret_1_1);
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
  }
}
}
}
