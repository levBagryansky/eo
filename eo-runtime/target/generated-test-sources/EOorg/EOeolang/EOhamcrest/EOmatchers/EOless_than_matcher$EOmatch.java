
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT b5a4c9a 2023-08-17T12:29:38) on 2023-08-18T14:42:30.920527Z; your changes will be discarded on the next build */
package EOorg.EOeolang.EOhamcrest.EOmatchers;

import org.eolang.*;

// <o abstract="" ancestors="1" line="32" loc="Φ.org.eolang.hamcrest.matchers.less-than-matcher$match" name="less-than-matcher$match" original-name="match" parent="less-than-matcher" pos="2"> 
//   <o line="32" loc="Φ.org.eolang.hamcrest.matchers.less-than-matcher$match.a" name="a" pos="3"/>
//   <o base=".lt" line="33" loc="Φ.org.eolang.hamcrest.matchers.less-than-matcher$match.φ" name="@" pos="4"> 
//     <o base="a" line="34" loc="Φ.org.eolang.hamcrest.matchers.less-than-matcher$match.φ.ρ" pos="6" ref="32"/>
//     <o base="x" line="35" loc="Φ.org.eolang.hamcrest.matchers.less-than-matcher$match.φ.α0" pos="6" ref="32.31.458"/>
//   </o>
//   <o level="1" line="32.31.458" loc="Φ.org.eolang.hamcrest.matchers.less-than-matcher$match.x" name="x"/>
// </o>
@XmirObject(name = "less-than-matcher$match", oname = "match", source = "/home/tardis3/eo/eo-runtime/target/eo-test/3-pull/org/eolang/hamcrest/matchers/less-than-matcher.eo")
public final class EOless_than_matcher$EOmatch extends PhDefault {
  public EOless_than_matcher$EOmatch(final Phi sigma) {
    super(sigma);
    this.add("a", new AtFree(/* default */));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = new PhMethod(rho, "a");
        ret_base = new PhLocated(ret_base, 34, 6, "Φ.org.eolang.hamcrest.matchers.less-than-matcher$match.φ.ρ");
      Phi ret = new PhMethod(ret_base, "lt");
        ret = new PhLocated(ret, 33, 4, "Φ.org.eolang.hamcrest.matchers.less-than-matcher$match.φ");
      ret = new PhCopy(ret);
        Phi ret_1 = new PhMethod(new PhMethod(rho, "σ"), "x");
          ret_1 = new PhLocated(ret_1, 35, 6, "Φ.org.eolang.hamcrest.matchers.less-than-matcher$match.φ.α0");
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
  }
}
