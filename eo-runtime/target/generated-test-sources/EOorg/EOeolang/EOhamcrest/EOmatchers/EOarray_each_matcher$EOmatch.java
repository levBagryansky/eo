
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT b5a4c9a 2023-08-17T12:29:38) on 2023-08-18T14:42:30.920527Z; your changes will be discarded on the next build */
package EOorg.EOeolang.EOhamcrest.EOmatchers;

import org.eolang.*;

// <o abstract="" ancestors="1" line="36" loc="Φ.org.eolang.hamcrest.matchers.array-each-matcher$match" name="array-each-matcher$match" original-name="match" parent="array-each-matcher" pos="2"> 
//   <o line="36" loc="Φ.org.eolang.hamcrest.matchers.array-each-matcher$match.a" name="a" pos="3"/>
//   <o base="a" const="" line="37" loc="Φ.org.eolang.hamcrest.matchers.array-each-matcher$match.act" name="act" pos="4" ref="36"/>
//   <o base=".if" line="38" loc="Φ.org.eolang.hamcrest.matchers.array-each-matcher$match.φ" name="@" pos="4"> 
//     <o base=".eq" line="39" loc="Φ.org.eolang.hamcrest.matchers.array-each-matcher$match.φ.ρ" pos="6"> 
//       <o base=".length" line="40" loc="Φ.org.eolang.hamcrest.matchers.array-each-matcher$match.φ.ρ.ρ" pos="16"> 
//         <o base="matchers" line="40" loc="Φ.org.eolang.hamcrest.matchers.array-each-matcher$match.φ.ρ.ρ.ρ" pos="8" ref="36.33.464"/>
//       </o>
//       <o base=".length" line="41" loc="Φ.org.eolang.hamcrest.matchers.array-each-matcher$match.φ.ρ.α0" pos="11"> 
//         <o base="act" line="41" loc="Φ.org.eolang.hamcrest.matchers.array-each-matcher$match.φ.ρ.α0.ρ" pos="8" ref="37"/>
//       </o>
//     </o>
//     <o base="org.eolang.seq" line="42" loc="Φ.org.eolang.hamcrest.matchers.array-each-matcher$match.φ.α0" pos="6"> 
//       <o base=".write" line="43" loc="Φ.org.eolang.hamcrest.matchers.array-each-matcher$match.φ.α0.α0" pos="18"> 
//         <o base="mismatches" line="43" loc="Φ.org.eolang.hamcrest.matchers.array-each-matcher$match.φ.α0.α0.ρ" pos="8" ref="36.34.464"/>
//         <o base="org.eolang.tuple" data="tuple" line="43" loc="Φ.org.eolang.hamcrest.matchers.array-each-matcher$match.φ.α0.α0.α0" pos="25"/>
//       </o>
//       <o base=".reducedi" line="44" loc="Φ.org.eolang.hamcrest.matchers.array-each-matcher$match.φ.α0.α1" pos="8"> 
//         <o base="org.eolang.collections.list" line="45" loc="Φ.org.eolang.hamcrest.matchers.array-each-matcher$match.φ.α0.α1.ρ" pos="10"> 
//           <o base="act" line="46" loc="Φ.org.eolang.hamcrest.matchers.array-each-matcher$match.φ.α0.α1.ρ.α0" pos="12" ref="37"/>
//         </o>
//         <o base="org.eolang.bool" data="bool" line="47" loc="Φ.org.eolang.hamcrest.matchers.array-each-matcher$match.φ.α0.α1.α0" pos="10">TRUE</o>
//         <o base="array-each-matcher$match$t2$t1$t1$a2" cut="16" line="48" loc="Φ.org.eolang.hamcrest.matchers.array-each-matcher$match.φ.α0.α1.α1" pos="10" ref="48"> 
//           <o as="act" base="act" level="1" loc="Φ.org.eolang.hamcrest.matchers.array-each-matcher$match.φ.α0.α1.α1.α0" ref="37"/>
//           <o as="matchers" base="matchers" level="2" loc="Φ.org.eolang.hamcrest.matchers.array-each-matcher$match.φ.α0.α1.α1.α1" ref="36.33.464"/>
//           <o as="mismatches" base="mismatches" level="2" loc="Φ.org.eolang.hamcrest.matchers.array-each-matcher$match.φ.α0.α1.α1.α2" ref="36.34.464"/>
//         </o>
//       </o>
//     </o>
//     <o base="org.eolang.bool" data="bool" line="61" loc="Φ.org.eolang.hamcrest.matchers.array-each-matcher$match.φ.α1" pos="6">FALSE</o>
//   </o>
//   <o level="1" line="36.33.464" loc="Φ.org.eolang.hamcrest.matchers.array-each-matcher$match.matchers" name="matchers"/>
//   <o level="1" line="36.34.464" loc="Φ.org.eolang.hamcrest.matchers.array-each-matcher$match.mismatches" name="mismatches"/>
// </o>
@XmirObject(name = "array-each-matcher$match", oname = "match", source = "/home/tardis3/eo/eo-runtime/target/eo-test/3-pull/org/eolang/hamcrest/matchers/array-each-matcher.eo")
public final class EOarray_each_matcher$EOmatch extends PhDefault {
  public EOarray_each_matcher$EOmatch(final Phi sigma) {
    super(sigma);
    this.add("a", new AtFree(/* default */));
    this.add("act", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new PhMethod(rho, "a");
        ret = new PhLocated(ret, 37, 4, "Φ.org.eolang.hamcrest.matchers.array-each-matcher$match.act");
      ret = new PhConst(ret);
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base_base_base = new PhMethod(new PhMethod(rho, "σ"), "matchers");
        ret_base_base_base = new PhLocated(ret_base_base_base, 40, 8, "Φ.org.eolang.hamcrest.matchers.array-each-matcher$match.φ.ρ.ρ.ρ");
      Phi ret_base_base = new PhMethod(ret_base_base_base, "length");
        ret_base_base = new PhLocated(ret_base_base, 40, 16, "Φ.org.eolang.hamcrest.matchers.array-each-matcher$match.φ.ρ.ρ");
      Phi ret_base = new PhMethod(ret_base_base, "eq");
        ret_base = new PhLocated(ret_base, 39, 6, "Φ.org.eolang.hamcrest.matchers.array-each-matcher$match.φ.ρ");
      ret_base = new PhCopy(ret_base);
        Phi ret_base_1_base = new PhMethod(rho, "act");
          ret_base_1_base = new PhLocated(ret_base_1_base, 41, 8, "Φ.org.eolang.hamcrest.matchers.array-each-matcher$match.φ.ρ.α0.ρ");
        Phi ret_base_1 = new PhMethod(ret_base_1_base, "length");
          ret_base_1 = new PhLocated(ret_base_1, 41, 11, "Φ.org.eolang.hamcrest.matchers.array-each-matcher$match.φ.ρ.α0");
        ret_base = new PhWith(ret_base, 0, ret_base_1);
      Phi ret = new PhMethod(ret_base, "if");
        ret = new PhLocated(ret, 38, 4, "Φ.org.eolang.hamcrest.matchers.array-each-matcher$match.φ");
      ret = new PhCopy(ret);
        Phi ret_1 = Phi.Φ.attr("org").get().attr("eolang").get().attr("seq").get();
          ret_1 = new PhLocated(ret_1, 42, 6, "Φ.org.eolang.hamcrest.matchers.array-each-matcher$match.φ.α0");
        ret_1 = new PhCopy(ret_1);
          Phi ret_1_1_base = new PhMethod(new PhMethod(rho, "σ"), "mismatches");
            ret_1_1_base = new PhLocated(ret_1_1_base, 43, 8, "Φ.org.eolang.hamcrest.matchers.array-each-matcher$match.φ.α0.α0.ρ");
          Phi ret_1_1 = new PhMethod(ret_1_1_base, "write");
            ret_1_1 = new PhLocated(ret_1_1, 43, 18, "Φ.org.eolang.hamcrest.matchers.array-each-matcher$match.φ.α0.α0");
          ret_1_1 = new PhCopy(ret_1_1);
            Phi ret_1_1_1 = Phi.Φ.attr("org").get().attr("eolang").get().attr("tuple").get();
              ret_1_1_1 = new PhLocated(ret_1_1_1, 43, 25, "Φ.org.eolang.hamcrest.matchers.array-each-matcher$match.φ.α0.α0.α0");
              Phi[] ret_1_1_1_a = new Phi[0];
              ret_1_1_1 = new PhWith(new PhCopy(ret_1_1_1), "Δ", new Data.Value<Phi[]>(ret_1_1_1_a));
            ret_1_1 = new PhWith(ret_1_1, 0, ret_1_1_1);
          Phi ret_1_2_base = Phi.Φ.attr("org").get().attr("eolang").get().attr("collections").get().attr("list").get();
            ret_1_2_base = new PhLocated(ret_1_2_base, 45, 10, "Φ.org.eolang.hamcrest.matchers.array-each-matcher$match.φ.α0.α1.ρ");
          ret_1_2_base = new PhCopy(ret_1_2_base);
            Phi ret_1_2_base_1 = new PhMethod(rho, "act");
              ret_1_2_base_1 = new PhLocated(ret_1_2_base_1, 46, 12, "Φ.org.eolang.hamcrest.matchers.array-each-matcher$match.φ.α0.α1.ρ.α0");
            ret_1_2_base = new PhWith(ret_1_2_base, 0, ret_1_2_base_1);
          Phi ret_1_2 = new PhMethod(ret_1_2_base, "reducedi");
            ret_1_2 = new PhLocated(ret_1_2, 44, 8, "Φ.org.eolang.hamcrest.matchers.array-each-matcher$match.φ.α0.α1");
          ret_1_2 = new PhCopy(ret_1_2);
            Phi ret_1_2_1 = new EOorg.EOeolang.EObool(Phi.Φ);
              ret_1_2_1 = new PhLocated(ret_1_2_1, 47, 10, "Φ.org.eolang.hamcrest.matchers.array-each-matcher$match.φ.α0.α1.α0");
              ret_1_2_1 = new PhWith(ret_1_2_1, "Δ", new Data.Value<>(Boolean.TRUE));
            Phi ret_1_2_2 = new EOarray_each_matcher$EOmatch$EOt2$EOt1$EOt1$EOa2(rho);
              ret_1_2_2 = new PhLocated(ret_1_2_2, 48, 10, "Φ.org.eolang.hamcrest.matchers.array-each-matcher$match.φ.α0.α1.α1");
            ret_1_2 = new PhWith(ret_1_2, 0, ret_1_2_1);
            ret_1_2 = new PhWith(ret_1_2, 1, ret_1_2_2);
          ret_1 = new PhWith(ret_1, 0, ret_1_1);
          ret_1 = new PhWith(ret_1, 1, ret_1_2);
        Phi ret_2 = new EOorg.EOeolang.EObool(Phi.Φ);
          ret_2 = new PhLocated(ret_2, 61, 6, "Φ.org.eolang.hamcrest.matchers.array-each-matcher$match.φ.α1");
          ret_2 = new PhWith(ret_2, "Δ", new Data.Value<>(Boolean.FALSE));
        ret = new PhWith(ret, 0, ret_1);
        ret = new PhWith(ret, 1, ret_2);
      return ret;
    })));
  }
}
