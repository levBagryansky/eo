
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT b5a4c9a 2023-08-17T12:29:38) on 2023-08-18T14:42:30.920527Z; your changes will be discarded on the next build */
package EOorg.EOeolang.EOhamcrest.EOmatchers;

import org.eolang.*;

// <o abstract="" ancestors="1" line="56" loc="Φ.org.eolang.hamcrest.matchers.has-item-matcher$describe-mismatch" name="has-item-matcher$describe-mismatch" original-name="describe-mismatch" parent="has-item-matcher" pos="2"> 
//   <o line="56" loc="Φ.org.eolang.hamcrest.matchers.has-item-matcher$describe-mismatch.act" name="act" pos="3"/>
//   <o base="org.eolang.txt.sprintf" line="57" loc="Φ.org.eolang.hamcrest.matchers.has-item-matcher$describe-mismatch.φ" name="@" pos="4"> 
//     <o base="org.eolang.string" data="string" line="58" loc="Φ.org.eolang.hamcrest.matchers.has-item-matcher$describe-mismatch.φ.α0" pos="6">mismatches: [%s]</o>
//     <o base=".joined" line="59" loc="Φ.org.eolang.hamcrest.matchers.has-item-matcher$describe-mismatch.φ.α1" pos="15"> 
//       <o base="org.eolang.txt.text" line="59" loc="Φ.org.eolang.hamcrest.matchers.has-item-matcher$describe-mismatch.φ.α1.ρ" pos="7" scope="scope-ccb0f437-2fac-4c4d-aa95-ff4e16e2d784"> 
//         <o base="org.eolang.string" data="string" line="59" loc="Φ.org.eolang.hamcrest.matchers.has-item-matcher$describe-mismatch.φ.α1.ρ.α0" pos="12" scope="scope-ccb0f437-2fac-4c4d-aa95-ff4e16e2d784"/>
//       </o>
//       <o base="mismatches" line="59" loc="Φ.org.eolang.hamcrest.matchers.has-item-matcher$describe-mismatch.φ.α1.α0" pos="23" ref="56.33.463"/>
//     </o>
//   </o>
//   <o level="1" line="56.33.463" loc="Φ.org.eolang.hamcrest.matchers.has-item-matcher$describe-mismatch.mismatches" name="mismatches"/>
// </o>
@XmirObject(name = "has-item-matcher$describe-mismatch", oname = "describe-mismatch", source = "/home/tardis3/eo/eo-runtime/target/eo-test/3-pull/org/eolang/hamcrest/matchers/has-item-matcher.eo")
public final class EOhas_item_matcher$EOdescribe_mismatch extends PhDefault {
  public EOhas_item_matcher$EOdescribe_mismatch(final Phi sigma) {
    super(sigma);
    this.add("act", new AtFree(/* default */));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("txt").get().attr("sprintf").get();
        ret = new PhLocated(ret, 57, 4, "Φ.org.eolang.hamcrest.matchers.has-item-matcher$describe-mismatch.φ");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOstring(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 58, 6, "Φ.org.eolang.hamcrest.matchers.has-item-matcher$describe-mismatch.φ.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>("mismatches: [%s]"));
        Phi ret_2_base = Phi.Φ.attr("org").get().attr("eolang").get().attr("txt").get().attr("text").get();
          ret_2_base = new PhLocated(ret_2_base, 59, 7, "Φ.org.eolang.hamcrest.matchers.has-item-matcher$describe-mismatch.φ.α1.ρ");
        ret_2_base = new PhCopy(ret_2_base);
          Phi ret_2_base_1 = new EOorg.EOeolang.EOstring(Phi.Φ);
            ret_2_base_1 = new PhLocated(ret_2_base_1, 59, 12, "Φ.org.eolang.hamcrest.matchers.has-item-matcher$describe-mismatch.φ.α1.ρ.α0");
            ret_2_base_1 = new PhWith(ret_2_base_1, "Δ", new Data.Value<>(""));
          ret_2_base = new PhWith(ret_2_base, 0, ret_2_base_1);
        Phi ret_2 = new PhMethod(ret_2_base, "joined");
          ret_2 = new PhLocated(ret_2, 59, 15, "Φ.org.eolang.hamcrest.matchers.has-item-matcher$describe-mismatch.φ.α1");
        ret_2 = new PhCopy(ret_2);
          Phi ret_2_1 = new PhMethod(new PhMethod(rho, "σ"), "mismatches");
            ret_2_1 = new PhLocated(ret_2_1, 59, 23, "Φ.org.eolang.hamcrest.matchers.has-item-matcher$describe-mismatch.φ.α1.α0");
          ret_2 = new PhWith(ret_2, 0, ret_2_1);
        ret = new PhWith(ret, 0, ret_1);
        ret = new PhWith(ret, 1, ret_2);
      return ret;
    })));
  }
}
