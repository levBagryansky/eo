
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT b5a4c9a 2023-08-17T12:29:38) on 2023-08-18T14:42:30.920527Z; your changes will be discarded on the next build */
package EOorg.EOeolang.EOhamcrest.EOmatchers;

import org.eolang.*;

// <o abstract="" ancestors="1" line="35" loc="Φ.org.eolang.hamcrest.matchers.close-to-matcher$match" name="close-to-matcher$match" original-name="match" parent="close-to-matcher" pos="2"> 
//   <o line="35" loc="Φ.org.eolang.hamcrest.matchers.close-to-matcher$match.a" name="a" pos="3"/>
//   <o base=".if" line="36" loc="Φ.org.eolang.hamcrest.matchers.close-to-matcher$match.φ" name="@" pos="4"> 
//     <o base=".and" line="37" loc="Φ.org.eolang.hamcrest.matchers.close-to-matcher$match.φ.ρ" pos="6"> 
//       <o base=".is-float" line="38" loc="Φ.org.eolang.hamcrest.matchers.close-to-matcher$match.φ.ρ.ρ" pos="8"> 
//         <o base="org.eolang.math.number" line="39" loc="Φ.org.eolang.hamcrest.matchers.close-to-matcher$match.φ.ρ.ρ.ρ" pos="10"> 
//           <o base="operand" line="39" loc="Φ.org.eolang.hamcrest.matchers.close-to-matcher$match.φ.ρ.ρ.ρ.α0" pos="17" ref="35.32.460"/>
//         </o>
//       </o>
//       <o base=".is-float" line="40" loc="Φ.org.eolang.hamcrest.matchers.close-to-matcher$match.φ.ρ.α0" pos="8"> 
//         <o base="org.eolang.math.number" line="41" loc="Φ.org.eolang.hamcrest.matchers.close-to-matcher$match.φ.ρ.α0.ρ" pos="10"> 
//           <o base="a" line="41" loc="Φ.org.eolang.hamcrest.matchers.close-to-matcher$match.φ.ρ.α0.ρ.α0" pos="17" ref="35"/>
//         </o>
//       </o>
//       <o base=".is-float" line="42" loc="Φ.org.eolang.hamcrest.matchers.close-to-matcher$match.φ.ρ.α1" pos="8"> 
//         <o base="org.eolang.math.number" line="43" loc="Φ.org.eolang.hamcrest.matchers.close-to-matcher$match.φ.ρ.α1.ρ" pos="10"> 
//           <o base="err" line="43" loc="Φ.org.eolang.hamcrest.matchers.close-to-matcher$match.φ.ρ.α1.ρ.α0" pos="17" ref="35.32.460"/>
//         </o>
//       </o>
//     </o>
//     <o base="org.eolang.seq" line="44" loc="Φ.org.eolang.hamcrest.matchers.close-to-matcher$match.φ.α0" pos="6"> 
//       <o base=".write" line="45" loc="Φ.org.eolang.hamcrest.matchers.close-to-matcher$match.φ.α0.α0" pos="16"> 
//         <o base="mismatch" line="45" loc="Φ.org.eolang.hamcrest.matchers.close-to-matcher$match.φ.α0.α0.ρ" pos="8" ref="35.33.460"/>
//         <o base="actual-delta" line="45" loc="Φ.org.eolang.hamcrest.matchers.close-to-matcher$match.φ.α0.α0.α0" pos="23" ref="50"/>
//       </o>
//       <o base=".lte" line="46" loc="Φ.org.eolang.hamcrest.matchers.close-to-matcher$match.φ.α0.α1" pos="20"> 
//         <o base="actual-delta" line="46" loc="Φ.org.eolang.hamcrest.matchers.close-to-matcher$match.φ.α0.α1.ρ" pos="8" ref="50"/>
//         <o base="org.eolang.float" data="float" line="46" loc="Φ.org.eolang.hamcrest.matchers.close-to-matcher$match.φ.α0.α1.α0" pos="25">0.0</o>
//       </o>
//     </o>
//     <o base="org.eolang.seq" line="47" loc="Φ.org.eolang.hamcrest.matchers.close-to-matcher$match.φ.α1" pos="6"> 
//       <o base="org.eolang.error" line="48" loc="Φ.org.eolang.hamcrest.matchers.close-to-matcher$match.φ.α1.α0" pos="8"> 
//         <o base="org.eolang.string" data="string" line="48" loc="Φ.org.eolang.hamcrest.matchers.close-to-matcher$match.φ.α1.α0.α0" pos="14">some of the given arguments are not floats</o>
//       </o>
//     </o>
//   </o>
//   <o base="close-to-matcher$match$actual-delta" cut="26" line="50" loc="Φ.org.eolang.hamcrest.matchers.close-to-matcher$match.actual-delta" name="actual-delta" pos="4" ref="50"> 
//     <o as="a" base="a" level="1" loc="Φ.org.eolang.hamcrest.matchers.close-to-matcher$match.actual-delta.α0" ref="35"/>
//     <o as="float-abs" base="float-abs" level="1" loc="Φ.org.eolang.hamcrest.matchers.close-to-matcher$match.actual-delta.α1" ref="56"/>
//     <o as="operand" base="operand" level="2" loc="Φ.org.eolang.hamcrest.matchers.close-to-matcher$match.actual-delta.α2" ref="35.32.460"/>
//     <o as="err" base="err" level="2" loc="Φ.org.eolang.hamcrest.matchers.close-to-matcher$match.actual-delta.α3" ref="35.32.460"/>
//     <o as="mismatch" base="mismatch" level="2" loc="Φ.org.eolang.hamcrest.matchers.close-to-matcher$match.actual-delta.α4" ref="35.33.460"/>
//   </o>
//   <o base="close-to-matcher$match$float-abs" cut="33" line="56" loc="Φ.org.eolang.hamcrest.matchers.close-to-matcher$match.float-abs" name="float-abs" pos="4" ref="56"> 
//     <o as="operand" base="operand" level="2" loc="Φ.org.eolang.hamcrest.matchers.close-to-matcher$match.float-abs.α0" ref="35.32.460"/>
//     <o as="err" base="err" level="2" loc="Φ.org.eolang.hamcrest.matchers.close-to-matcher$match.float-abs.α1" ref="35.32.460"/>
//     <o as="mismatch" base="mismatch" level="2" loc="Φ.org.eolang.hamcrest.matchers.close-to-matcher$match.float-abs.α2" ref="35.33.460"/>
//   </o>
//   <o level="1" line="35.32.460" loc="Φ.org.eolang.hamcrest.matchers.close-to-matcher$match.operand" name="operand"/>
//   <o level="1" line="35.32.460" loc="Φ.org.eolang.hamcrest.matchers.close-to-matcher$match.err" name="err"/>
//   <o level="1" line="35.33.460" loc="Φ.org.eolang.hamcrest.matchers.close-to-matcher$match.mismatch" name="mismatch"/>
// </o>
@XmirObject(name = "close-to-matcher$match", oname = "match", source = "/home/tardis3/eo/eo-runtime/target/eo-test/3-pull/org/eolang/hamcrest/matchers/close-to-matcher.eo")
public final class EOclose_to_matcher$EOmatch extends PhDefault {
  public EOclose_to_matcher$EOmatch(final Phi sigma) {
    super(sigma);
    this.add("a", new AtFree(/* default */));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base_base_base = Phi.Φ.attr("org").get().attr("eolang").get().attr("math").get().attr("number").get();
        ret_base_base_base = new PhLocated(ret_base_base_base, 39, 10, "Φ.org.eolang.hamcrest.matchers.close-to-matcher$match.φ.ρ.ρ.ρ");
      ret_base_base_base = new PhCopy(ret_base_base_base);
        Phi ret_base_base_base_1 = new PhMethod(new PhMethod(rho, "σ"), "operand");
          ret_base_base_base_1 = new PhLocated(ret_base_base_base_1, 39, 17, "Φ.org.eolang.hamcrest.matchers.close-to-matcher$match.φ.ρ.ρ.ρ.α0");
        ret_base_base_base = new PhWith(ret_base_base_base, 0, ret_base_base_base_1);
      Phi ret_base_base = new PhMethod(ret_base_base_base, "is-float");
        ret_base_base = new PhLocated(ret_base_base, 38, 8, "Φ.org.eolang.hamcrest.matchers.close-to-matcher$match.φ.ρ.ρ");
      Phi ret_base = new PhMethod(ret_base_base, "and");
        ret_base = new PhLocated(ret_base, 37, 6, "Φ.org.eolang.hamcrest.matchers.close-to-matcher$match.φ.ρ");
      ret_base = new PhCopy(ret_base);
        Phi ret_base_1_base = Phi.Φ.attr("org").get().attr("eolang").get().attr("math").get().attr("number").get();
          ret_base_1_base = new PhLocated(ret_base_1_base, 41, 10, "Φ.org.eolang.hamcrest.matchers.close-to-matcher$match.φ.ρ.α0.ρ");
        ret_base_1_base = new PhCopy(ret_base_1_base);
          Phi ret_base_1_base_1 = new PhMethod(rho, "a");
            ret_base_1_base_1 = new PhLocated(ret_base_1_base_1, 41, 17, "Φ.org.eolang.hamcrest.matchers.close-to-matcher$match.φ.ρ.α0.ρ.α0");
          ret_base_1_base = new PhWith(ret_base_1_base, 0, ret_base_1_base_1);
        Phi ret_base_1 = new PhMethod(ret_base_1_base, "is-float");
          ret_base_1 = new PhLocated(ret_base_1, 40, 8, "Φ.org.eolang.hamcrest.matchers.close-to-matcher$match.φ.ρ.α0");
        Phi ret_base_2_base = Phi.Φ.attr("org").get().attr("eolang").get().attr("math").get().attr("number").get();
          ret_base_2_base = new PhLocated(ret_base_2_base, 43, 10, "Φ.org.eolang.hamcrest.matchers.close-to-matcher$match.φ.ρ.α1.ρ");
        ret_base_2_base = new PhCopy(ret_base_2_base);
          Phi ret_base_2_base_1 = new PhMethod(new PhMethod(rho, "σ"), "err");
            ret_base_2_base_1 = new PhLocated(ret_base_2_base_1, 43, 17, "Φ.org.eolang.hamcrest.matchers.close-to-matcher$match.φ.ρ.α1.ρ.α0");
          ret_base_2_base = new PhWith(ret_base_2_base, 0, ret_base_2_base_1);
        Phi ret_base_2 = new PhMethod(ret_base_2_base, "is-float");
          ret_base_2 = new PhLocated(ret_base_2, 42, 8, "Φ.org.eolang.hamcrest.matchers.close-to-matcher$match.φ.ρ.α1");
        ret_base = new PhWith(ret_base, 0, ret_base_1);
        ret_base = new PhWith(ret_base, 1, ret_base_2);
      Phi ret = new PhMethod(ret_base, "if");
        ret = new PhLocated(ret, 36, 4, "Φ.org.eolang.hamcrest.matchers.close-to-matcher$match.φ");
      ret = new PhCopy(ret);
        Phi ret_1 = Phi.Φ.attr("org").get().attr("eolang").get().attr("seq").get();
          ret_1 = new PhLocated(ret_1, 44, 6, "Φ.org.eolang.hamcrest.matchers.close-to-matcher$match.φ.α0");
        ret_1 = new PhCopy(ret_1);
          Phi ret_1_1_base = new PhMethod(new PhMethod(rho, "σ"), "mismatch");
            ret_1_1_base = new PhLocated(ret_1_1_base, 45, 8, "Φ.org.eolang.hamcrest.matchers.close-to-matcher$match.φ.α0.α0.ρ");
          Phi ret_1_1 = new PhMethod(ret_1_1_base, "write");
            ret_1_1 = new PhLocated(ret_1_1, 45, 16, "Φ.org.eolang.hamcrest.matchers.close-to-matcher$match.φ.α0.α0");
          ret_1_1 = new PhCopy(ret_1_1);
            Phi ret_1_1_1 = new PhMethod(rho, "actual-delta");
              ret_1_1_1 = new PhLocated(ret_1_1_1, 45, 23, "Φ.org.eolang.hamcrest.matchers.close-to-matcher$match.φ.α0.α0.α0");
            ret_1_1 = new PhWith(ret_1_1, 0, ret_1_1_1);
          Phi ret_1_2_base = new PhMethod(rho, "actual-delta");
            ret_1_2_base = new PhLocated(ret_1_2_base, 46, 8, "Φ.org.eolang.hamcrest.matchers.close-to-matcher$match.φ.α0.α1.ρ");
          Phi ret_1_2 = new PhMethod(ret_1_2_base, "lte");
            ret_1_2 = new PhLocated(ret_1_2, 46, 20, "Φ.org.eolang.hamcrest.matchers.close-to-matcher$match.φ.α0.α1");
          ret_1_2 = new PhCopy(ret_1_2);
            Phi ret_1_2_1 = new EOorg.EOeolang.EOfloat(Phi.Φ);
              ret_1_2_1 = new PhLocated(ret_1_2_1, 46, 25, "Φ.org.eolang.hamcrest.matchers.close-to-matcher$match.φ.α0.α1.α0");
              ret_1_2_1 = new PhWith(ret_1_2_1, "Δ", new Data.Value<>(0.0d));
            ret_1_2 = new PhWith(ret_1_2, 0, ret_1_2_1);
          ret_1 = new PhWith(ret_1, 0, ret_1_1);
          ret_1 = new PhWith(ret_1, 1, ret_1_2);
        Phi ret_2 = Phi.Φ.attr("org").get().attr("eolang").get().attr("seq").get();
          ret_2 = new PhLocated(ret_2, 47, 6, "Φ.org.eolang.hamcrest.matchers.close-to-matcher$match.φ.α1");
        ret_2 = new PhCopy(ret_2);
          Phi ret_2_1 = Phi.Φ.attr("org").get().attr("eolang").get().attr("error").get();
            ret_2_1 = new PhLocated(ret_2_1, 48, 8, "Φ.org.eolang.hamcrest.matchers.close-to-matcher$match.φ.α1.α0");
          ret_2_1 = new PhCopy(ret_2_1);
            Phi ret_2_1_1 = new EOorg.EOeolang.EOstring(Phi.Φ);
              ret_2_1_1 = new PhLocated(ret_2_1_1, 48, 14, "Φ.org.eolang.hamcrest.matchers.close-to-matcher$match.φ.α1.α0.α0");
              ret_2_1_1 = new PhWith(ret_2_1_1, "Δ", new Data.Value<>("some of the given arguments are not floats"));
            ret_2_1 = new PhWith(ret_2_1, "α", ret_2_1_1);
          ret_2 = new PhWith(ret_2, 0, ret_2_1);
        ret = new PhWith(ret, 0, ret_1);
        ret = new PhWith(ret, 1, ret_2);
      return ret;
    })));
    this.add("actual-delta", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new EOclose_to_matcher$EOmatch$EOactual_delta(rho);
        ret = new PhLocated(ret, 50, 4, "Φ.org.eolang.hamcrest.matchers.close-to-matcher$match.actual-delta");
      return ret;
    })));
    this.add("float-abs", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new EOclose_to_matcher$EOmatch$EOfloat_abs(rho);
        ret = new PhLocated(ret, 56, 4, "Φ.org.eolang.hamcrest.matchers.close-to-matcher$match.float-abs");
      return ret;
    })));
  }
}
