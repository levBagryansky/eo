
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT b5a4c9a 2023-08-17T12:29:38) on 2023-08-18T14:42:30.920527Z; your changes will be discarded on the next build */
package EOorg.EOeolang;

import org.eolang.*;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

// <o abstract="" line="65" loc="Φ.org.eolang.memory-in-outer-scope" name="memory-in-outer-scope" original-name="memory-in-outer-scope" pos="0"> 
//   <o base="memory-in-outer-scope$outer" cut="46" line="66" loc="Φ.org.eolang.memory-in-outer-scope.outer" name="outer" pos="2" ref="66"/>
//   <o base="outer" line="68" loc="Φ.org.eolang.memory-in-outer-scope.a" name="a" pos="2" ref="66"/>
//   <o base="org.eolang.seq" line="69" loc="Φ.org.eolang.memory-in-outer-scope.φ" name="@" pos="2"> 
//     <o base=".write" line="70" loc="Φ.org.eolang.memory-in-outer-scope.φ.α0" pos="7"> 
//       <o base=".x" line="70" loc="Φ.org.eolang.memory-in-outer-scope.φ.α0.ρ" pos="5"> 
//         <o base="a" line="70" loc="Φ.org.eolang.memory-in-outer-scope.φ.α0.ρ.ρ" pos="4" ref="68"/>
//       </o>
//       <o base="org.eolang.int" data="int" line="70" loc="Φ.org.eolang.memory-in-outer-scope.φ.α0.α0" pos="14">1</o>
//     </o>
//     <o base="org.eolang.io.stdout" line="71" loc="Φ.org.eolang.memory-in-outer-scope.φ.α1" pos="4"> 
//       <o base="org.eolang.txt.sprintf" line="72" loc="Φ.org.eolang.memory-in-outer-scope.φ.α1.α0" pos="6"> 
//         <o base="org.eolang.string" data="string" line="73" loc="Φ.org.eolang.memory-in-outer-scope.φ.α1.α0.α0" pos="8">%d</o>
//         <o base=".x" line="74" loc="Φ.org.eolang.memory-in-outer-scope.φ.α1.α0.α1" pos="9"> 
//           <o base="a" line="74" loc="Φ.org.eolang.memory-in-outer-scope.φ.α1.α0.α1.ρ" pos="8" ref="68"/>
//         </o>
//       </o>
//     </o>
//   </o>
// </o>
@XmirObject(name = "memory-in-outer-scopeTest", oname = "memory-in-outer-scope", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/memory-tests.eo")
public final class EOmemory_in_outer_scopeTest extends PhDefault {
  public EOmemory_in_outer_scopeTest() {
    this.add("outer", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new EOω1outer(rho);
        ret = new PhLocated(ret, 66, 2, "Φ.org.eolang.memory-in-outer-scope.outer");
      return ret;
    })));
    this.add("a", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new PhMethod(rho, "outer");
        ret = new PhLocated(ret, 68, 2, "Φ.org.eolang.memory-in-outer-scope.a");
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("seq").get();
        ret = new PhLocated(ret, 69, 2, "Φ.org.eolang.memory-in-outer-scope.φ");
      ret = new PhCopy(ret);
        Phi ret_1_base_base = new PhMethod(rho, "a");
          ret_1_base_base = new PhLocated(ret_1_base_base, 70, 4, "Φ.org.eolang.memory-in-outer-scope.φ.α0.ρ.ρ");
        Phi ret_1_base = new PhMethod(ret_1_base_base, "x");
          ret_1_base = new PhLocated(ret_1_base, 70, 5, "Φ.org.eolang.memory-in-outer-scope.φ.α0.ρ");
        Phi ret_1 = new PhMethod(ret_1_base, "write");
          ret_1 = new PhLocated(ret_1, 70, 7, "Φ.org.eolang.memory-in-outer-scope.φ.α0");
        ret_1 = new PhCopy(ret_1);
          Phi ret_1_1 = new EOorg.EOeolang.EOint(Phi.Φ);
            ret_1_1 = new PhLocated(ret_1_1, 70, 14, "Φ.org.eolang.memory-in-outer-scope.φ.α0.α0");
            ret_1_1 = new PhWith(ret_1_1, "Δ", new Data.Value<>(1L));
          ret_1 = new PhWith(ret_1, 0, ret_1_1);
        Phi ret_2 = Phi.Φ.attr("org").get().attr("eolang").get().attr("io").get().attr("stdout").get();
          ret_2 = new PhLocated(ret_2, 71, 4, "Φ.org.eolang.memory-in-outer-scope.φ.α1");
        ret_2 = new PhCopy(ret_2);
          Phi ret_2_1 = Phi.Φ.attr("org").get().attr("eolang").get().attr("txt").get().attr("sprintf").get();
            ret_2_1 = new PhLocated(ret_2_1, 72, 6, "Φ.org.eolang.memory-in-outer-scope.φ.α1.α0");
          ret_2_1 = new PhCopy(ret_2_1);
            Phi ret_2_1_1 = new EOorg.EOeolang.EOstring(Phi.Φ);
              ret_2_1_1 = new PhLocated(ret_2_1_1, 73, 8, "Φ.org.eolang.memory-in-outer-scope.φ.α1.α0.α0");
              ret_2_1_1 = new PhWith(ret_2_1_1, "Δ", new Data.Value<>("%d"));
            Phi ret_2_1_2_base = new PhMethod(rho, "a");
              ret_2_1_2_base = new PhLocated(ret_2_1_2_base, 74, 8, "Φ.org.eolang.memory-in-outer-scope.φ.α1.α0.α1.ρ");
            Phi ret_2_1_2 = new PhMethod(ret_2_1_2_base, "x");
              ret_2_1_2 = new PhLocated(ret_2_1_2, 74, 9, "Φ.org.eolang.memory-in-outer-scope.φ.α1.α0.α1");
            ret_2_1 = new PhWith(ret_2_1, 0, ret_2_1_1);
            ret_2_1 = new PhWith(ret_2_1, 1, ret_2_1_2);
          ret_2 = new PhWith(ret_2, 0, ret_2_1);
        ret = new PhWith(ret, 0, ret_1);
        ret = new PhWith(ret, 1, ret_2);
      return ret;
    })));
  }

  @Test
  public void works() throws java.lang.Exception {
    Object obj = new Dataized(new EOmemory_in_outer_scopeTest()).take();
    if (obj instanceof String) {
      Assertions.fail(obj.toString());
    } else {
      Assertions.assertTrue((Boolean) obj);
    }
  }

// <o abstract="" ancestors="1" line="66" loc="Φ.org.eolang.memory-in-outer-scope$outer" name="memory-in-outer-scope$outer" original-name="outer" parent="memory-in-outer-scope" pos="2"> 
//   <o base="org.eolang.memory" line="67" loc="Φ.org.eolang.memory-in-outer-scope$outer.x" name="x" pos="4"> 
//     <o base="org.eolang.int" data="int" line="67" loc="Φ.org.eolang.memory-in-outer-scope$outer.x.α0" pos="11">0</o>
//   </o>
// </o>
@XmirObject(name = "ω1outer", oname = "outer", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/memory-tests.eo")
public final class EOω1outer extends PhDefault {
  public EOω1outer(final Phi sigma) {
    super(sigma);
    this.add("x", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("memory").get();
        ret = new PhLocated(ret, 67, 4, "Φ.org.eolang.memory-in-outer-scope$outer.x");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 67, 11, "Φ.org.eolang.memory-in-outer-scope$outer.x.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>(0L));
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
  }
}
}
