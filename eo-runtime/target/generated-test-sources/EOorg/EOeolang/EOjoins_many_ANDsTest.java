
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT b5a4c9a 2023-08-17T12:29:38) on 2023-08-18T14:42:30.920527Z; your changes will be discarded on the next build */
package EOorg.EOeolang;

import org.eolang.*;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

// <o abstract="" line="45" loc="Φ.org.eolang.joins-many-ANDs" name="joins-many-ANDs" original-name="joins-many-ANDs" pos="0"> 
//   <o base="org.eolang.hamcrest.assert-that" line="46" loc="Φ.org.eolang.joins-many-ANDs.φ" name="@" pos="2"> 
//     <o base=".and" line="47" loc="Φ.org.eolang.joins-many-ANDs.φ.α0" pos="4"> 
//       <o base="org.eolang.bool" data="bool" line="48" loc="Φ.org.eolang.joins-many-ANDs.φ.α0.ρ" pos="6">TRUE</o>
//       <o base=".lt" line="49" loc="Φ.org.eolang.joins-many-ANDs.φ.α0.α0" pos="7"> 
//         <o base="org.eolang.int" data="int" line="49" loc="Φ.org.eolang.joins-many-ANDs.φ.α0.α0.ρ" pos="6">5</o>
//         <o base="org.eolang.int" data="int" line="49" loc="Φ.org.eolang.joins-many-ANDs.φ.α0.α0.α0" pos="11">10</o>
//       </o>
//       <o base=".gt" line="50" loc="Φ.org.eolang.joins-many-ANDs.φ.α0.α1" pos="7"> 
//         <o base="org.eolang.int" data="int" line="50" loc="Φ.org.eolang.joins-many-ANDs.φ.α0.α1.ρ" pos="6">4</o>
//         <o base="org.eolang.int" data="int" line="50" loc="Φ.org.eolang.joins-many-ANDs.φ.α0.α1.α0" pos="11">-6</o>
//       </o>
//       <o base="org.eolang.bool" data="bool" line="51" loc="Φ.org.eolang.joins-many-ANDs.φ.α0.α2" pos="6">TRUE</o>
//       <o base=".eq" line="52" loc="Φ.org.eolang.joins-many-ANDs.φ.α0.α3" pos="7"> 
//         <o base="org.eolang.int" data="int" line="52" loc="Φ.org.eolang.joins-many-ANDs.φ.α0.α3.ρ" pos="6">0</o>
//         <o base="org.eolang.int" data="int" line="52" loc="Φ.org.eolang.joins-many-ANDs.φ.α0.α3.α0" pos="11">0</o>
//       </o>
//     </o>
//     <o base=".equal-to" line="53" loc="Φ.org.eolang.joins-many-ANDs.φ.α1" pos="5"> 
//       <o base="$" line="53" loc="Φ.org.eolang.joins-many-ANDs.φ.α1.ρ" pos="4"/>
//       <o base="org.eolang.bool" data="bool" line="53" loc="Φ.org.eolang.joins-many-ANDs.φ.α1.α0" pos="15">TRUE</o>
//     </o>
//   </o>
// </o>
@XmirObject(name = "joins-many-ANDsTest", oname = "joins-many-ANDs", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/bool-tests.eo")
public final class EOjoins_many_ANDsTest extends PhDefault {
  public EOjoins_many_ANDsTest() {
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("hamcrest").get().attr("assert-that").get();
        ret = new PhLocated(ret, 46, 2, "Φ.org.eolang.joins-many-ANDs.φ");
      ret = new PhCopy(ret);
        Phi ret_1_base = new EOorg.EOeolang.EObool(Phi.Φ);
          ret_1_base = new PhLocated(ret_1_base, 48, 6, "Φ.org.eolang.joins-many-ANDs.φ.α0.ρ");
          ret_1_base = new PhWith(ret_1_base, "Δ", new Data.Value<>(Boolean.TRUE));
        Phi ret_1 = new PhMethod(ret_1_base, "and");
          ret_1 = new PhLocated(ret_1, 47, 4, "Φ.org.eolang.joins-many-ANDs.φ.α0");
        ret_1 = new PhCopy(ret_1);
          Phi ret_1_1_base = new EOorg.EOeolang.EOint(Phi.Φ);
            ret_1_1_base = new PhLocated(ret_1_1_base, 49, 6, "Φ.org.eolang.joins-many-ANDs.φ.α0.α0.ρ");
            ret_1_1_base = new PhWith(ret_1_1_base, "Δ", new Data.Value<>(5L));
          Phi ret_1_1 = new PhMethod(ret_1_1_base, "lt");
            ret_1_1 = new PhLocated(ret_1_1, 49, 7, "Φ.org.eolang.joins-many-ANDs.φ.α0.α0");
          ret_1_1 = new PhCopy(ret_1_1);
            Phi ret_1_1_1 = new EOorg.EOeolang.EOint(Phi.Φ);
              ret_1_1_1 = new PhLocated(ret_1_1_1, 49, 11, "Φ.org.eolang.joins-many-ANDs.φ.α0.α0.α0");
              ret_1_1_1 = new PhWith(ret_1_1_1, "Δ", new Data.Value<>(10L));
            ret_1_1 = new PhWith(ret_1_1, 0, ret_1_1_1);
          Phi ret_1_2_base = new EOorg.EOeolang.EOint(Phi.Φ);
            ret_1_2_base = new PhLocated(ret_1_2_base, 50, 6, "Φ.org.eolang.joins-many-ANDs.φ.α0.α1.ρ");
            ret_1_2_base = new PhWith(ret_1_2_base, "Δ", new Data.Value<>(4L));
          Phi ret_1_2 = new PhMethod(ret_1_2_base, "gt");
            ret_1_2 = new PhLocated(ret_1_2, 50, 7, "Φ.org.eolang.joins-many-ANDs.φ.α0.α1");
          ret_1_2 = new PhCopy(ret_1_2);
            Phi ret_1_2_1 = new EOorg.EOeolang.EOint(Phi.Φ);
              ret_1_2_1 = new PhLocated(ret_1_2_1, 50, 11, "Φ.org.eolang.joins-many-ANDs.φ.α0.α1.α0");
              ret_1_2_1 = new PhWith(ret_1_2_1, "Δ", new Data.Value<>(-6L));
            ret_1_2 = new PhWith(ret_1_2, 0, ret_1_2_1);
          Phi ret_1_3 = new EOorg.EOeolang.EObool(Phi.Φ);
            ret_1_3 = new PhLocated(ret_1_3, 51, 6, "Φ.org.eolang.joins-many-ANDs.φ.α0.α2");
            ret_1_3 = new PhWith(ret_1_3, "Δ", new Data.Value<>(Boolean.TRUE));
          Phi ret_1_4_base = new EOorg.EOeolang.EOint(Phi.Φ);
            ret_1_4_base = new PhLocated(ret_1_4_base, 52, 6, "Φ.org.eolang.joins-many-ANDs.φ.α0.α3.ρ");
            ret_1_4_base = new PhWith(ret_1_4_base, "Δ", new Data.Value<>(0L));
          Phi ret_1_4 = new PhMethod(ret_1_4_base, "eq");
            ret_1_4 = new PhLocated(ret_1_4, 52, 7, "Φ.org.eolang.joins-many-ANDs.φ.α0.α3");
          ret_1_4 = new PhCopy(ret_1_4);
            Phi ret_1_4_1 = new EOorg.EOeolang.EOint(Phi.Φ);
              ret_1_4_1 = new PhLocated(ret_1_4_1, 52, 11, "Φ.org.eolang.joins-many-ANDs.φ.α0.α3.α0");
              ret_1_4_1 = new PhWith(ret_1_4_1, "Δ", new Data.Value<>(0L));
            ret_1_4 = new PhWith(ret_1_4, 0, ret_1_4_1);
          ret_1 = new PhWith(ret_1, 0, ret_1_1);
          ret_1 = new PhWith(ret_1, 1, ret_1_2);
          ret_1 = new PhWith(ret_1, 2, ret_1_3);
          ret_1 = new PhWith(ret_1, 3, ret_1_4);
        Phi ret_2_base = rho;
          ret_2_base = new PhLocated(ret_2_base, 53, 4, "Φ.org.eolang.joins-many-ANDs.φ.α1.ρ");
        Phi ret_2 = new PhMethod(ret_2_base, "equal-to");
          ret_2 = new PhLocated(ret_2, 53, 5, "Φ.org.eolang.joins-many-ANDs.φ.α1");
        ret_2 = new PhCopy(ret_2);
          Phi ret_2_1 = new EOorg.EOeolang.EObool(Phi.Φ);
            ret_2_1 = new PhLocated(ret_2_1, 53, 15, "Φ.org.eolang.joins-many-ANDs.φ.α1.α0");
            ret_2_1 = new PhWith(ret_2_1, "Δ", new Data.Value<>(Boolean.TRUE));
          ret_2 = new PhWith(ret_2, 0, ret_2_1);
        ret = new PhWith(ret, 0, ret_1);
        ret = new PhWith(ret, 1, ret_2);
      return ret;
    })));
  }

  @Test
  public void works() throws java.lang.Exception {
    Object obj = new Dataized(new EOjoins_many_ANDsTest()).take();
    if (obj instanceof String) {
      Assertions.fail(obj.toString());
    } else {
      Assertions.assertTrue((Boolean) obj);
    }
  }
}
