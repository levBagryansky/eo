
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT b5a4c9a 2023-08-17T12:29:38) on 2023-08-18T14:42:30.920527Z; your changes will be discarded on the next build */
package EOorg.EOeolang;

import org.eolang.*;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

// <o abstract="" line="275" loc="Φ.org.eolang.positive-infinity-times-multiple-numbers-with-nan" name="positive-infinity-times-multiple-numbers-with-nan" original-name="positive-infinity-times-multiple-numbers-with-nan" pos="0"> 
//   <o base="org.eolang.nan" const="" line="276" loc="Φ.org.eolang.positive-infinity-times-multiple-numbers-with-nan.not-a-number" name="not-a-number" pos="2"/>
//   <o base="org.eolang.hamcrest.assert-that" line="277" loc="Φ.org.eolang.positive-infinity-times-multiple-numbers-with-nan.φ" name="@" pos="2"> 
//     <o base=".as-bytes" line="278" loc="Φ.org.eolang.positive-infinity-times-multiple-numbers-with-nan.φ.α0" pos="49"> 
//       <o base="positive-infinity-times-multiple-numbers-with-nan$t1$t0$generated-scope-1867c67b-6f9e-4a34-85bd-bdbb8df9909c" cut="422" line="278" loc="Φ.org.eolang.positive-infinity-times-multiple-numbers-with-nan.φ.α0.generated-scope-1867c67b-6f9e-4a34-85bd-bdbb8df9909c" name="generated-scope-1867c67b-6f9e-4a34-85bd-bdbb8df9909c" pos="22" ref="278"> 
//         <o as="not-a-number" base="not-a-number" level="1" loc="Φ.org.eolang.positive-infinity-times-multiple-numbers-with-nan.φ.α0.generated-scope-1867c67b-6f9e-4a34-85bd-bdbb8df9909c.α0" ref="276"/>
//       </o>
//     </o>
//     <o base=".equal-to" line="279" loc="Φ.org.eolang.positive-infinity-times-multiple-numbers-with-nan.φ.α1" pos="5"> 
//       <o base="$" line="279" loc="Φ.org.eolang.positive-infinity-times-multiple-numbers-with-nan.φ.α1.ρ" pos="4"/>
//       <o base=".as-bytes" line="279" loc="Φ.org.eolang.positive-infinity-times-multiple-numbers-with-nan.φ.α1.α0" pos="27"> 
//         <o base="not-a-number" line="279" loc="Φ.org.eolang.positive-infinity-times-multiple-numbers-with-nan.φ.α1.α0.ρ" pos="15" ref="276"/>
//       </o>
//     </o>
//   </o>
// </o>
@XmirObject(name = "positive-infinity-times-multiple-numbers-with-nanTest", oname = "positive-infinity-times-multiple-numbers-with-nan", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/positive-infinity-tests.eo")
public final class EOpositive_infinity_times_multiple_numbers_with_nanTest extends PhDefault {
  public EOpositive_infinity_times_multiple_numbers_with_nanTest() {
    this.add("not-a-number", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("nan").get();
        ret = new PhLocated(ret, 276, 2, "Φ.org.eolang.positive-infinity-times-multiple-numbers-with-nan.not-a-number");
      ret = new PhConst(ret);
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("hamcrest").get().attr("assert-that").get();
        ret = new PhLocated(ret, 277, 2, "Φ.org.eolang.positive-infinity-times-multiple-numbers-with-nan.φ");
      ret = new PhCopy(ret);
        Phi ret_1_base = new EOω1t1$EOt0$EOgenerated_scope_1867c67b_6f9e_4a34_85bd_bdbb8df9909c(rho);
          ret_1_base = new PhLocated(ret_1_base, 278, 22, "Φ.org.eolang.positive-infinity-times-multiple-numbers-with-nan.φ.α0.generated-scope-1867c67b-6f9e-4a34-85bd-bdbb8df9909c");
        Phi ret_1 = new PhMethod(ret_1_base, "as-bytes");
          ret_1 = new PhLocated(ret_1, 278, 49, "Φ.org.eolang.positive-infinity-times-multiple-numbers-with-nan.φ.α0");
        Phi ret_2_base = rho;
          ret_2_base = new PhLocated(ret_2_base, 279, 4, "Φ.org.eolang.positive-infinity-times-multiple-numbers-with-nan.φ.α1.ρ");
        Phi ret_2 = new PhMethod(ret_2_base, "equal-to");
          ret_2 = new PhLocated(ret_2, 279, 5, "Φ.org.eolang.positive-infinity-times-multiple-numbers-with-nan.φ.α1");
        ret_2 = new PhCopy(ret_2);
          Phi ret_2_1_base = new PhMethod(rho, "not-a-number");
            ret_2_1_base = new PhLocated(ret_2_1_base, 279, 15, "Φ.org.eolang.positive-infinity-times-multiple-numbers-with-nan.φ.α1.α0.ρ");
          Phi ret_2_1 = new PhMethod(ret_2_1_base, "as-bytes");
            ret_2_1 = new PhLocated(ret_2_1, 279, 27, "Φ.org.eolang.positive-infinity-times-multiple-numbers-with-nan.φ.α1.α0");
          ret_2 = new PhWith(ret_2, 0, ret_2_1);
        ret = new PhWith(ret, 0, ret_1);
        ret = new PhWith(ret, 1, ret_2);
      return ret;
    })));
  }

  @Test
  public void works() throws java.lang.Exception {
    Object obj = new Dataized(new EOpositive_infinity_times_multiple_numbers_with_nanTest()).take();
    if (obj instanceof String) {
      Assertions.fail(obj.toString());
    } else {
      Assertions.assertTrue((Boolean) obj);
    }
  }

// <o abstract="" ancestors="1" line="278" loc="Φ.org.eolang.positive-infinity-times-multiple-numbers-with-nan$t1$t0$generated-scope-1867c67b-6f9e-4a34-85bd-bdbb8df9909c" name="positive-infinity-times-multiple-numbers-with-nan$t1$t0$generated-scope-1867c67b-6f9e-4a34-85bd-bdbb8df9909c" original-name="generated-scope-1867c67b-6f9e-4a34-85bd-bdbb8df9909c" parent="positive-infinity-times-multiple-numbers-with-nan" pos="22"> 
//   <o base=".times" line="278" loc="Φ.org.eolang.positive-infinity-times-multiple-numbers-with-nan$t1$t0$generated-scope-1867c67b-6f9e-4a34-85bd-bdbb8df9909c.org.eolang.scope-1867c67b-6f9e-4a34-85bd-bdbb8df9909c" name="org.eolang.scope-1867c67b-6f9e-4a34-85bd-bdbb8df9909c" pos="22" scope="scope-1867c67b-6f9e-4a34-85bd-bdbb8df9909c"> 
//     <o base="org.eolang.positive-infinity" line="278" loc="Φ.org.eolang.positive-infinity-times-multiple-numbers-with-nan$t1$t0$generated-scope-1867c67b-6f9e-4a34-85bd-bdbb8df9909c.org.eolang.scope-1867c67b-6f9e-4a34-85bd-bdbb8df9909c.ρ" pos="5" scope="scope-1867c67b-6f9e-4a34-85bd-bdbb8df9909c"/>
//     <o base="org.eolang.int" data="int" line="278" loc="Φ.org.eolang.positive-infinity-times-multiple-numbers-with-nan$t1$t0$generated-scope-1867c67b-6f9e-4a34-85bd-bdbb8df9909c.org.eolang.scope-1867c67b-6f9e-4a34-85bd-bdbb8df9909c.α0" pos="29" scope="scope-1867c67b-6f9e-4a34-85bd-bdbb8df9909c">-25</o>
//     <o base="not-a-number" line="278" loc="Φ.org.eolang.positive-infinity-times-multiple-numbers-with-nan$t1$t0$generated-scope-1867c67b-6f9e-4a34-85bd-bdbb8df9909c.org.eolang.scope-1867c67b-6f9e-4a34-85bd-bdbb8df9909c.α1" pos="33" ref="278.276.457" scope="scope-1867c67b-6f9e-4a34-85bd-bdbb8df9909c"/>
//     <o base="org.eolang.int" data="int" line="278" loc="Φ.org.eolang.positive-infinity-times-multiple-numbers-with-nan$t1$t0$generated-scope-1867c67b-6f9e-4a34-85bd-bdbb8df9909c.org.eolang.scope-1867c67b-6f9e-4a34-85bd-bdbb8df9909c.α2" pos="46" scope="scope-1867c67b-6f9e-4a34-85bd-bdbb8df9909c">51</o>
//   </o>
//   <o base="org.eolang.scope-1867c67b-6f9e-4a34-85bd-bdbb8df9909c" line="278" loc="Φ.org.eolang.positive-infinity-times-multiple-numbers-with-nan$t1$t0$generated-scope-1867c67b-6f9e-4a34-85bd-bdbb8df9909c.φ" name="@" pos="22" ref="278"/>
//   <o level="1" line="278.276.457" loc="Φ.org.eolang.positive-infinity-times-multiple-numbers-with-nan$t1$t0$generated-scope-1867c67b-6f9e-4a34-85bd-bdbb8df9909c.not-a-number" name="not-a-number"/>
// </o>
@XmirObject(name = "ω1t1$t0$generated-scope-1867c67b-6f9e-4a34-85bd-bdbb8df9909c", oname = "generated-scope-1867c67b-6f9e-4a34-85bd-bdbb8df9909c", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/positive-infinity-tests.eo")
public final class EOω1t1$EOt0$EOgenerated_scope_1867c67b_6f9e_4a34_85bd_bdbb8df9909c extends PhDefault {
  public EOω1t1$EOt0$EOgenerated_scope_1867c67b_6f9e_4a34_85bd_bdbb8df9909c(final Phi sigma) {
    super(sigma);
    this.add("org.eolang.scope-1867c67b-6f9e-4a34-85bd-bdbb8df9909c", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = Phi.Φ.attr("org").get().attr("eolang").get().attr("positive-infinity").get();
        ret_base = new PhLocated(ret_base, 278, 5, "Φ.org.eolang.positive-infinity-times-multiple-numbers-with-nan$t1$t0$generated-scope-1867c67b-6f9e-4a34-85bd-bdbb8df9909c.org.eolang.scope-1867c67b-6f9e-4a34-85bd-bdbb8df9909c.ρ");
      Phi ret = new PhMethod(ret_base, "times");
        ret = new PhLocated(ret, 278, 22, "Φ.org.eolang.positive-infinity-times-multiple-numbers-with-nan$t1$t0$generated-scope-1867c67b-6f9e-4a34-85bd-bdbb8df9909c.org.eolang.scope-1867c67b-6f9e-4a34-85bd-bdbb8df9909c");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 278, 29, "Φ.org.eolang.positive-infinity-times-multiple-numbers-with-nan$t1$t0$generated-scope-1867c67b-6f9e-4a34-85bd-bdbb8df9909c.org.eolang.scope-1867c67b-6f9e-4a34-85bd-bdbb8df9909c.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>(-25L));
        Phi ret_2 = new PhMethod(new PhMethod(rho, "σ"), "not-a-number");
          ret_2 = new PhLocated(ret_2, 278, 33, "Φ.org.eolang.positive-infinity-times-multiple-numbers-with-nan$t1$t0$generated-scope-1867c67b-6f9e-4a34-85bd-bdbb8df9909c.org.eolang.scope-1867c67b-6f9e-4a34-85bd-bdbb8df9909c.α1");
        Phi ret_3 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_3 = new PhLocated(ret_3, 278, 46, "Φ.org.eolang.positive-infinity-times-multiple-numbers-with-nan$t1$t0$generated-scope-1867c67b-6f9e-4a34-85bd-bdbb8df9909c.org.eolang.scope-1867c67b-6f9e-4a34-85bd-bdbb8df9909c.α2");
          ret_3 = new PhWith(ret_3, "Δ", new Data.Value<>(51L));
        ret = new PhWith(ret, 0, ret_1);
        ret = new PhWith(ret, 1, ret_2);
        ret = new PhWith(ret, 2, ret_3);
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new PhMethod(rho, "org.eolang.scope-1867c67b-6f9e-4a34-85bd-bdbb8df9909c");
        ret = new PhLocated(ret, 278, 22, "Φ.org.eolang.positive-infinity-times-multiple-numbers-with-nan$t1$t0$generated-scope-1867c67b-6f9e-4a34-85bd-bdbb8df9909c.φ");
      return ret;
    })));
  }
}
}
