
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT b5a4c9a 2023-08-17T12:29:38) on 2023-08-18T14:42:30.920527Z; your changes will be discarded on the next build */
package EOorg.EOeolang;

import org.eolang.*;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

// <o abstract="" line="132" loc="Φ.org.eolang.int-equal-to-nan-and-infinites-is-false" name="int-equal-to-nan-and-infinites-is-false" original-name="int-equal-to-nan-and-infinites-is-false" pos="0"> 
//   <o base="org.eolang.hamcrest.assert-that" line="133" loc="Φ.org.eolang.int-equal-to-nan-and-infinites-is-false.φ" name="@" pos="2"> 
//     <o base=".and" line="134" loc="Φ.org.eolang.int-equal-to-nan-and-infinites-is-false.φ.α0" pos="4"> 
//       <o base=".eq" line="135" loc="Φ.org.eolang.int-equal-to-nan-and-infinites-is-false.φ.α0.ρ" pos="16"> 
//         <o base="int-equal-to-nan-and-infinites-is-false$t0$t0$t0$generated-scope-98b43051-249c-484e-acb7-076450e25f40" cut="114" line="135" loc="Φ.org.eolang.int-equal-to-nan-and-infinites-is-false.φ.α0.ρ.generated-scope-98b43051-249c-484e-acb7-076450e25f40" name="generated-scope-98b43051-249c-484e-acb7-076450e25f40" pos="8" ref="135"/>
//         <o base="org.eolang.bool" data="bool" line="135" loc="Φ.org.eolang.int-equal-to-nan-and-infinites-is-false.φ.α0.ρ.α0" pos="20">FALSE</o>
//       </o>
//       <o base=".eq" line="136" loc="Φ.org.eolang.int-equal-to-nan-and-infinites-is-false.φ.α0.α0" pos="30"> 
//         <o base="int-equal-to-nan-and-infinites-is-false$t0$t0$t1$generated-scope-f0f9799f-eee5-4a61-af56-72200dbbd31a" cut="121" line="136" loc="Φ.org.eolang.int-equal-to-nan-and-infinites-is-false.φ.α0.α0.generated-scope-f0f9799f-eee5-4a61-af56-72200dbbd31a" name="generated-scope-f0f9799f-eee5-4a61-af56-72200dbbd31a" pos="8" ref="136"/>
//         <o base="org.eolang.bool" data="bool" line="136" loc="Φ.org.eolang.int-equal-to-nan-and-infinites-is-false.φ.α0.α0.α0" pos="34">FALSE</o>
//       </o>
//       <o base=".eq" line="137" loc="Φ.org.eolang.int-equal-to-nan-and-infinites-is-false.φ.α0.α1" pos="30"> 
//         <o base="int-equal-to-nan-and-infinites-is-false$t0$t0$t2$generated-scope-8cdf8dc8-edc1-40dc-8e61-91fe0ca0fe5b" cut="128" line="137" loc="Φ.org.eolang.int-equal-to-nan-and-infinites-is-false.φ.α0.α1.generated-scope-8cdf8dc8-edc1-40dc-8e61-91fe0ca0fe5b" name="generated-scope-8cdf8dc8-edc1-40dc-8e61-91fe0ca0fe5b" pos="8" ref="137"/>
//         <o base="org.eolang.bool" data="bool" line="137" loc="Φ.org.eolang.int-equal-to-nan-and-infinites-is-false.φ.α0.α1.α0" pos="34">FALSE</o>
//       </o>
//       <o base=".eq" line="138" loc="Φ.org.eolang.int-equal-to-nan-and-infinites-is-false.φ.α0.α2" pos="17"> 
//         <o base="int-equal-to-nan-and-infinites-is-false$t0$t0$t3$generated-scope-cc0cbec9-2cf5-4386-b80f-c174c298fb75" cut="135" line="138" loc="Φ.org.eolang.int-equal-to-nan-and-infinites-is-false.φ.α0.α2.generated-scope-cc0cbec9-2cf5-4386-b80f-c174c298fb75" name="generated-scope-cc0cbec9-2cf5-4386-b80f-c174c298fb75" pos="9" ref="138"/>
//         <o base="org.eolang.bool" data="bool" line="138" loc="Φ.org.eolang.int-equal-to-nan-and-infinites-is-false.φ.α0.α2.α0" pos="21">FALSE</o>
//       </o>
//       <o base=".eq" line="139" loc="Φ.org.eolang.int-equal-to-nan-and-infinites-is-false.φ.α0.α3" pos="31"> 
//         <o base="int-equal-to-nan-and-infinites-is-false$t0$t0$t4$generated-scope-6d5f53c7-73a3-45d8-b9e4-d79941e85965" cut="142" line="139" loc="Φ.org.eolang.int-equal-to-nan-and-infinites-is-false.φ.α0.α3.generated-scope-6d5f53c7-73a3-45d8-b9e4-d79941e85965" name="generated-scope-6d5f53c7-73a3-45d8-b9e4-d79941e85965" pos="9" ref="139"/>
//         <o base="org.eolang.bool" data="bool" line="139" loc="Φ.org.eolang.int-equal-to-nan-and-infinites-is-false.φ.α0.α3.α0" pos="35">FALSE</o>
//       </o>
//       <o base=".eq" line="140" loc="Φ.org.eolang.int-equal-to-nan-and-infinites-is-false.φ.α0.α4" pos="31"> 
//         <o base="int-equal-to-nan-and-infinites-is-false$t0$t0$t5$generated-scope-f07a4435-04c1-4177-a020-279696393786" cut="149" line="140" loc="Φ.org.eolang.int-equal-to-nan-and-infinites-is-false.φ.α0.α4.generated-scope-f07a4435-04c1-4177-a020-279696393786" name="generated-scope-f07a4435-04c1-4177-a020-279696393786" pos="9" ref="140"/>
//         <o base="org.eolang.bool" data="bool" line="140" loc="Φ.org.eolang.int-equal-to-nan-and-infinites-is-false.φ.α0.α4.α0" pos="35">FALSE</o>
//       </o>
//     </o>
//     <o base=".equal-to" line="141" loc="Φ.org.eolang.int-equal-to-nan-and-infinites-is-false.φ.α1" pos="5"> 
//       <o base="$" line="141" loc="Φ.org.eolang.int-equal-to-nan-and-infinites-is-false.φ.α1.ρ" pos="4"/>
//       <o base="org.eolang.bool" data="bool" line="141" loc="Φ.org.eolang.int-equal-to-nan-and-infinites-is-false.φ.α1.α0" pos="15">TRUE</o>
//     </o>
//   </o>
// </o>
@XmirObject(name = "int-equal-to-nan-and-infinites-is-falseTest", oname = "int-equal-to-nan-and-infinites-is-false", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/int-tests.eo")
public final class EOint_equal_to_nan_and_infinites_is_falseTest extends PhDefault {
  public EOint_equal_to_nan_and_infinites_is_falseTest() {
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("hamcrest").get().attr("assert-that").get();
        ret = new PhLocated(ret, 133, 2, "Φ.org.eolang.int-equal-to-nan-and-infinites-is-false.φ");
      ret = new PhCopy(ret);
        Phi ret_1_base_base = new EOω1t0$EOt0$EOt0$EOgenerated_scope_98b43051_249c_484e_acb7_076450e25f40(rho);
          ret_1_base_base = new PhLocated(ret_1_base_base, 135, 8, "Φ.org.eolang.int-equal-to-nan-and-infinites-is-false.φ.α0.ρ.generated-scope-98b43051-249c-484e-acb7-076450e25f40");
        Phi ret_1_base = new PhMethod(ret_1_base_base, "eq");
          ret_1_base = new PhLocated(ret_1_base, 135, 16, "Φ.org.eolang.int-equal-to-nan-and-infinites-is-false.φ.α0.ρ");
        ret_1_base = new PhCopy(ret_1_base);
          Phi ret_1_base_1 = new EOorg.EOeolang.EObool(Phi.Φ);
            ret_1_base_1 = new PhLocated(ret_1_base_1, 135, 20, "Φ.org.eolang.int-equal-to-nan-and-infinites-is-false.φ.α0.ρ.α0");
            ret_1_base_1 = new PhWith(ret_1_base_1, "Δ", new Data.Value<>(Boolean.FALSE));
          ret_1_base = new PhWith(ret_1_base, 0, ret_1_base_1);
        Phi ret_1 = new PhMethod(ret_1_base, "and");
          ret_1 = new PhLocated(ret_1, 134, 4, "Φ.org.eolang.int-equal-to-nan-and-infinites-is-false.φ.α0");
        ret_1 = new PhCopy(ret_1);
          Phi ret_1_1_base = new EOω1t0$EOt0$EOt1$EOgenerated_scope_f0f9799f_eee5_4a61_af56_72200dbbd31a(rho);
            ret_1_1_base = new PhLocated(ret_1_1_base, 136, 8, "Φ.org.eolang.int-equal-to-nan-and-infinites-is-false.φ.α0.α0.generated-scope-f0f9799f-eee5-4a61-af56-72200dbbd31a");
          Phi ret_1_1 = new PhMethod(ret_1_1_base, "eq");
            ret_1_1 = new PhLocated(ret_1_1, 136, 30, "Φ.org.eolang.int-equal-to-nan-and-infinites-is-false.φ.α0.α0");
          ret_1_1 = new PhCopy(ret_1_1);
            Phi ret_1_1_1 = new EOorg.EOeolang.EObool(Phi.Φ);
              ret_1_1_1 = new PhLocated(ret_1_1_1, 136, 34, "Φ.org.eolang.int-equal-to-nan-and-infinites-is-false.φ.α0.α0.α0");
              ret_1_1_1 = new PhWith(ret_1_1_1, "Δ", new Data.Value<>(Boolean.FALSE));
            ret_1_1 = new PhWith(ret_1_1, 0, ret_1_1_1);
          Phi ret_1_2_base = new EOω1t0$EOt0$EOt2$EOgenerated_scope_8cdf8dc8_edc1_40dc_8e61_91fe0ca0fe5b(rho);
            ret_1_2_base = new PhLocated(ret_1_2_base, 137, 8, "Φ.org.eolang.int-equal-to-nan-and-infinites-is-false.φ.α0.α1.generated-scope-8cdf8dc8-edc1-40dc-8e61-91fe0ca0fe5b");
          Phi ret_1_2 = new PhMethod(ret_1_2_base, "eq");
            ret_1_2 = new PhLocated(ret_1_2, 137, 30, "Φ.org.eolang.int-equal-to-nan-and-infinites-is-false.φ.α0.α1");
          ret_1_2 = new PhCopy(ret_1_2);
            Phi ret_1_2_1 = new EOorg.EOeolang.EObool(Phi.Φ);
              ret_1_2_1 = new PhLocated(ret_1_2_1, 137, 34, "Φ.org.eolang.int-equal-to-nan-and-infinites-is-false.φ.α0.α1.α0");
              ret_1_2_1 = new PhWith(ret_1_2_1, "Δ", new Data.Value<>(Boolean.FALSE));
            ret_1_2 = new PhWith(ret_1_2, 0, ret_1_2_1);
          Phi ret_1_3_base = new EOω1t0$EOt0$EOt3$EOgenerated_scope_cc0cbec9_2cf5_4386_b80f_c174c298fb75(rho);
            ret_1_3_base = new PhLocated(ret_1_3_base, 138, 9, "Φ.org.eolang.int-equal-to-nan-and-infinites-is-false.φ.α0.α2.generated-scope-cc0cbec9-2cf5-4386-b80f-c174c298fb75");
          Phi ret_1_3 = new PhMethod(ret_1_3_base, "eq");
            ret_1_3 = new PhLocated(ret_1_3, 138, 17, "Φ.org.eolang.int-equal-to-nan-and-infinites-is-false.φ.α0.α2");
          ret_1_3 = new PhCopy(ret_1_3);
            Phi ret_1_3_1 = new EOorg.EOeolang.EObool(Phi.Φ);
              ret_1_3_1 = new PhLocated(ret_1_3_1, 138, 21, "Φ.org.eolang.int-equal-to-nan-and-infinites-is-false.φ.α0.α2.α0");
              ret_1_3_1 = new PhWith(ret_1_3_1, "Δ", new Data.Value<>(Boolean.FALSE));
            ret_1_3 = new PhWith(ret_1_3, 0, ret_1_3_1);
          Phi ret_1_4_base = new EOω1t0$EOt0$EOt4$EOgenerated_scope_6d5f53c7_73a3_45d8_b9e4_d79941e85965(rho);
            ret_1_4_base = new PhLocated(ret_1_4_base, 139, 9, "Φ.org.eolang.int-equal-to-nan-and-infinites-is-false.φ.α0.α3.generated-scope-6d5f53c7-73a3-45d8-b9e4-d79941e85965");
          Phi ret_1_4 = new PhMethod(ret_1_4_base, "eq");
            ret_1_4 = new PhLocated(ret_1_4, 139, 31, "Φ.org.eolang.int-equal-to-nan-and-infinites-is-false.φ.α0.α3");
          ret_1_4 = new PhCopy(ret_1_4);
            Phi ret_1_4_1 = new EOorg.EOeolang.EObool(Phi.Φ);
              ret_1_4_1 = new PhLocated(ret_1_4_1, 139, 35, "Φ.org.eolang.int-equal-to-nan-and-infinites-is-false.φ.α0.α3.α0");
              ret_1_4_1 = new PhWith(ret_1_4_1, "Δ", new Data.Value<>(Boolean.FALSE));
            ret_1_4 = new PhWith(ret_1_4, 0, ret_1_4_1);
          Phi ret_1_5_base = new EOω1t0$EOt0$EOt5$EOgenerated_scope_f07a4435_04c1_4177_a020_279696393786(rho);
            ret_1_5_base = new PhLocated(ret_1_5_base, 140, 9, "Φ.org.eolang.int-equal-to-nan-and-infinites-is-false.φ.α0.α4.generated-scope-f07a4435-04c1-4177-a020-279696393786");
          Phi ret_1_5 = new PhMethod(ret_1_5_base, "eq");
            ret_1_5 = new PhLocated(ret_1_5, 140, 31, "Φ.org.eolang.int-equal-to-nan-and-infinites-is-false.φ.α0.α4");
          ret_1_5 = new PhCopy(ret_1_5);
            Phi ret_1_5_1 = new EOorg.EOeolang.EObool(Phi.Φ);
              ret_1_5_1 = new PhLocated(ret_1_5_1, 140, 35, "Φ.org.eolang.int-equal-to-nan-and-infinites-is-false.φ.α0.α4.α0");
              ret_1_5_1 = new PhWith(ret_1_5_1, "Δ", new Data.Value<>(Boolean.FALSE));
            ret_1_5 = new PhWith(ret_1_5, 0, ret_1_5_1);
          ret_1 = new PhWith(ret_1, 0, ret_1_1);
          ret_1 = new PhWith(ret_1, 1, ret_1_2);
          ret_1 = new PhWith(ret_1, 2, ret_1_3);
          ret_1 = new PhWith(ret_1, 3, ret_1_4);
          ret_1 = new PhWith(ret_1, 4, ret_1_5);
        Phi ret_2_base = rho;
          ret_2_base = new PhLocated(ret_2_base, 141, 4, "Φ.org.eolang.int-equal-to-nan-and-infinites-is-false.φ.α1.ρ");
        Phi ret_2 = new PhMethod(ret_2_base, "equal-to");
          ret_2 = new PhLocated(ret_2, 141, 5, "Φ.org.eolang.int-equal-to-nan-and-infinites-is-false.φ.α1");
        ret_2 = new PhCopy(ret_2);
          Phi ret_2_1 = new EOorg.EOeolang.EObool(Phi.Φ);
            ret_2_1 = new PhLocated(ret_2_1, 141, 15, "Φ.org.eolang.int-equal-to-nan-and-infinites-is-false.φ.α1.α0");
            ret_2_1 = new PhWith(ret_2_1, "Δ", new Data.Value<>(Boolean.TRUE));
          ret_2 = new PhWith(ret_2, 0, ret_2_1);
        ret = new PhWith(ret, 0, ret_1);
        ret = new PhWith(ret, 1, ret_2);
      return ret;
    })));
  }

  @Test
  public void works() throws java.lang.Exception {
    Object obj = new Dataized(new EOint_equal_to_nan_and_infinites_is_falseTest()).take();
    if (obj instanceof String) {
      Assertions.fail(obj.toString());
    } else {
      Assertions.assertTrue((Boolean) obj);
    }
  }

// <o abstract="" ancestors="1" line="135" loc="Φ.org.eolang.int-equal-to-nan-and-infinites-is-false$t0$t0$t0$generated-scope-98b43051-249c-484e-acb7-076450e25f40" name="int-equal-to-nan-and-infinites-is-false$t0$t0$t0$generated-scope-98b43051-249c-484e-acb7-076450e25f40" original-name="generated-scope-98b43051-249c-484e-acb7-076450e25f40" parent="int-equal-to-nan-and-infinites-is-false" pos="8"> 
//   <o base=".eq" line="135" loc="Φ.org.eolang.int-equal-to-nan-and-infinites-is-false$t0$t0$t0$generated-scope-98b43051-249c-484e-acb7-076450e25f40.org.eolang.scope-98b43051-249c-484e-acb7-076450e25f40" name="org.eolang.scope-98b43051-249c-484e-acb7-076450e25f40" pos="8" scope="scope-98b43051-249c-484e-acb7-076450e25f40"> 
//     <o base="org.eolang.int" data="int" line="135" loc="Φ.org.eolang.int-equal-to-nan-and-infinites-is-false$t0$t0$t0$generated-scope-98b43051-249c-484e-acb7-076450e25f40.org.eolang.scope-98b43051-249c-484e-acb7-076450e25f40.ρ" pos="7" scope="scope-98b43051-249c-484e-acb7-076450e25f40">0</o>
//     <o base="org.eolang.nan" line="135" loc="Φ.org.eolang.int-equal-to-nan-and-infinites-is-false$t0$t0$t0$generated-scope-98b43051-249c-484e-acb7-076450e25f40.org.eolang.scope-98b43051-249c-484e-acb7-076450e25f40.α0" pos="12" scope="scope-98b43051-249c-484e-acb7-076450e25f40"/>
//   </o>
//   <o base="org.eolang.scope-98b43051-249c-484e-acb7-076450e25f40" line="135" loc="Φ.org.eolang.int-equal-to-nan-and-infinites-is-false$t0$t0$t0$generated-scope-98b43051-249c-484e-acb7-076450e25f40.φ" name="@" pos="8" ref="135"/>
// </o>
@XmirObject(name = "ω1t0$t0$t0$generated-scope-98b43051-249c-484e-acb7-076450e25f40", oname = "generated-scope-98b43051-249c-484e-acb7-076450e25f40", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/int-tests.eo")
public final class EOω1t0$EOt0$EOt0$EOgenerated_scope_98b43051_249c_484e_acb7_076450e25f40 extends PhDefault {
  public EOω1t0$EOt0$EOt0$EOgenerated_scope_98b43051_249c_484e_acb7_076450e25f40(final Phi sigma) {
    super(sigma);
    this.add("org.eolang.scope-98b43051-249c-484e-acb7-076450e25f40", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = new EOorg.EOeolang.EOint(Phi.Φ);
        ret_base = new PhLocated(ret_base, 135, 7, "Φ.org.eolang.int-equal-to-nan-and-infinites-is-false$t0$t0$t0$generated-scope-98b43051-249c-484e-acb7-076450e25f40.org.eolang.scope-98b43051-249c-484e-acb7-076450e25f40.ρ");
        ret_base = new PhWith(ret_base, "Δ", new Data.Value<>(0L));
      Phi ret = new PhMethod(ret_base, "eq");
        ret = new PhLocated(ret, 135, 8, "Φ.org.eolang.int-equal-to-nan-and-infinites-is-false$t0$t0$t0$generated-scope-98b43051-249c-484e-acb7-076450e25f40.org.eolang.scope-98b43051-249c-484e-acb7-076450e25f40");
      ret = new PhCopy(ret);
        Phi ret_1 = Phi.Φ.attr("org").get().attr("eolang").get().attr("nan").get();
          ret_1 = new PhLocated(ret_1, 135, 12, "Φ.org.eolang.int-equal-to-nan-and-infinites-is-false$t0$t0$t0$generated-scope-98b43051-249c-484e-acb7-076450e25f40.org.eolang.scope-98b43051-249c-484e-acb7-076450e25f40.α0");
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new PhMethod(rho, "org.eolang.scope-98b43051-249c-484e-acb7-076450e25f40");
        ret = new PhLocated(ret, 135, 8, "Φ.org.eolang.int-equal-to-nan-and-infinites-is-false$t0$t0$t0$generated-scope-98b43051-249c-484e-acb7-076450e25f40.φ");
      return ret;
    })));
  }
}

// <o abstract="" ancestors="1" line="136" loc="Φ.org.eolang.int-equal-to-nan-and-infinites-is-false$t0$t0$t1$generated-scope-f0f9799f-eee5-4a61-af56-72200dbbd31a" name="int-equal-to-nan-and-infinites-is-false$t0$t0$t1$generated-scope-f0f9799f-eee5-4a61-af56-72200dbbd31a" original-name="generated-scope-f0f9799f-eee5-4a61-af56-72200dbbd31a" parent="int-equal-to-nan-and-infinites-is-false" pos="8"> 
//   <o base=".eq" line="136" loc="Φ.org.eolang.int-equal-to-nan-and-infinites-is-false$t0$t0$t1$generated-scope-f0f9799f-eee5-4a61-af56-72200dbbd31a.org.eolang.scope-f0f9799f-eee5-4a61-af56-72200dbbd31a" name="org.eolang.scope-f0f9799f-eee5-4a61-af56-72200dbbd31a" pos="8" scope="scope-f0f9799f-eee5-4a61-af56-72200dbbd31a"> 
//     <o base="org.eolang.int" data="int" line="136" loc="Φ.org.eolang.int-equal-to-nan-and-infinites-is-false$t0$t0$t1$generated-scope-f0f9799f-eee5-4a61-af56-72200dbbd31a.org.eolang.scope-f0f9799f-eee5-4a61-af56-72200dbbd31a.ρ" pos="7" scope="scope-f0f9799f-eee5-4a61-af56-72200dbbd31a">0</o>
//     <o base="org.eolang.positive-infinity" line="136" loc="Φ.org.eolang.int-equal-to-nan-and-infinites-is-false$t0$t0$t1$generated-scope-f0f9799f-eee5-4a61-af56-72200dbbd31a.org.eolang.scope-f0f9799f-eee5-4a61-af56-72200dbbd31a.α0" pos="12" scope="scope-f0f9799f-eee5-4a61-af56-72200dbbd31a"/>
//   </o>
//   <o base="org.eolang.scope-f0f9799f-eee5-4a61-af56-72200dbbd31a" line="136" loc="Φ.org.eolang.int-equal-to-nan-and-infinites-is-false$t0$t0$t1$generated-scope-f0f9799f-eee5-4a61-af56-72200dbbd31a.φ" name="@" pos="8" ref="136"/>
// </o>
@XmirObject(name = "ω1t0$t0$t1$generated-scope-f0f9799f-eee5-4a61-af56-72200dbbd31a", oname = "generated-scope-f0f9799f-eee5-4a61-af56-72200dbbd31a", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/int-tests.eo")
public final class EOω1t0$EOt0$EOt1$EOgenerated_scope_f0f9799f_eee5_4a61_af56_72200dbbd31a extends PhDefault {
  public EOω1t0$EOt0$EOt1$EOgenerated_scope_f0f9799f_eee5_4a61_af56_72200dbbd31a(final Phi sigma) {
    super(sigma);
    this.add("org.eolang.scope-f0f9799f-eee5-4a61-af56-72200dbbd31a", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = new EOorg.EOeolang.EOint(Phi.Φ);
        ret_base = new PhLocated(ret_base, 136, 7, "Φ.org.eolang.int-equal-to-nan-and-infinites-is-false$t0$t0$t1$generated-scope-f0f9799f-eee5-4a61-af56-72200dbbd31a.org.eolang.scope-f0f9799f-eee5-4a61-af56-72200dbbd31a.ρ");
        ret_base = new PhWith(ret_base, "Δ", new Data.Value<>(0L));
      Phi ret = new PhMethod(ret_base, "eq");
        ret = new PhLocated(ret, 136, 8, "Φ.org.eolang.int-equal-to-nan-and-infinites-is-false$t0$t0$t1$generated-scope-f0f9799f-eee5-4a61-af56-72200dbbd31a.org.eolang.scope-f0f9799f-eee5-4a61-af56-72200dbbd31a");
      ret = new PhCopy(ret);
        Phi ret_1 = Phi.Φ.attr("org").get().attr("eolang").get().attr("positive-infinity").get();
          ret_1 = new PhLocated(ret_1, 136, 12, "Φ.org.eolang.int-equal-to-nan-and-infinites-is-false$t0$t0$t1$generated-scope-f0f9799f-eee5-4a61-af56-72200dbbd31a.org.eolang.scope-f0f9799f-eee5-4a61-af56-72200dbbd31a.α0");
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new PhMethod(rho, "org.eolang.scope-f0f9799f-eee5-4a61-af56-72200dbbd31a");
        ret = new PhLocated(ret, 136, 8, "Φ.org.eolang.int-equal-to-nan-and-infinites-is-false$t0$t0$t1$generated-scope-f0f9799f-eee5-4a61-af56-72200dbbd31a.φ");
      return ret;
    })));
  }
}

// <o abstract="" ancestors="1" line="137" loc="Φ.org.eolang.int-equal-to-nan-and-infinites-is-false$t0$t0$t2$generated-scope-8cdf8dc8-edc1-40dc-8e61-91fe0ca0fe5b" name="int-equal-to-nan-and-infinites-is-false$t0$t0$t2$generated-scope-8cdf8dc8-edc1-40dc-8e61-91fe0ca0fe5b" original-name="generated-scope-8cdf8dc8-edc1-40dc-8e61-91fe0ca0fe5b" parent="int-equal-to-nan-and-infinites-is-false" pos="8"> 
//   <o base=".eq" line="137" loc="Φ.org.eolang.int-equal-to-nan-and-infinites-is-false$t0$t0$t2$generated-scope-8cdf8dc8-edc1-40dc-8e61-91fe0ca0fe5b.org.eolang.scope-8cdf8dc8-edc1-40dc-8e61-91fe0ca0fe5b" name="org.eolang.scope-8cdf8dc8-edc1-40dc-8e61-91fe0ca0fe5b" pos="8" scope="scope-8cdf8dc8-edc1-40dc-8e61-91fe0ca0fe5b"> 
//     <o base="org.eolang.int" data="int" line="137" loc="Φ.org.eolang.int-equal-to-nan-and-infinites-is-false$t0$t0$t2$generated-scope-8cdf8dc8-edc1-40dc-8e61-91fe0ca0fe5b.org.eolang.scope-8cdf8dc8-edc1-40dc-8e61-91fe0ca0fe5b.ρ" pos="7" scope="scope-8cdf8dc8-edc1-40dc-8e61-91fe0ca0fe5b">0</o>
//     <o base="org.eolang.negative-infinity" line="137" loc="Φ.org.eolang.int-equal-to-nan-and-infinites-is-false$t0$t0$t2$generated-scope-8cdf8dc8-edc1-40dc-8e61-91fe0ca0fe5b.org.eolang.scope-8cdf8dc8-edc1-40dc-8e61-91fe0ca0fe5b.α0" pos="12" scope="scope-8cdf8dc8-edc1-40dc-8e61-91fe0ca0fe5b"/>
//   </o>
//   <o base="org.eolang.scope-8cdf8dc8-edc1-40dc-8e61-91fe0ca0fe5b" line="137" loc="Φ.org.eolang.int-equal-to-nan-and-infinites-is-false$t0$t0$t2$generated-scope-8cdf8dc8-edc1-40dc-8e61-91fe0ca0fe5b.φ" name="@" pos="8" ref="137"/>
// </o>
@XmirObject(name = "ω1t0$t0$t2$generated-scope-8cdf8dc8-edc1-40dc-8e61-91fe0ca0fe5b", oname = "generated-scope-8cdf8dc8-edc1-40dc-8e61-91fe0ca0fe5b", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/int-tests.eo")
public final class EOω1t0$EOt0$EOt2$EOgenerated_scope_8cdf8dc8_edc1_40dc_8e61_91fe0ca0fe5b extends PhDefault {
  public EOω1t0$EOt0$EOt2$EOgenerated_scope_8cdf8dc8_edc1_40dc_8e61_91fe0ca0fe5b(final Phi sigma) {
    super(sigma);
    this.add("org.eolang.scope-8cdf8dc8-edc1-40dc-8e61-91fe0ca0fe5b", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = new EOorg.EOeolang.EOint(Phi.Φ);
        ret_base = new PhLocated(ret_base, 137, 7, "Φ.org.eolang.int-equal-to-nan-and-infinites-is-false$t0$t0$t2$generated-scope-8cdf8dc8-edc1-40dc-8e61-91fe0ca0fe5b.org.eolang.scope-8cdf8dc8-edc1-40dc-8e61-91fe0ca0fe5b.ρ");
        ret_base = new PhWith(ret_base, "Δ", new Data.Value<>(0L));
      Phi ret = new PhMethod(ret_base, "eq");
        ret = new PhLocated(ret, 137, 8, "Φ.org.eolang.int-equal-to-nan-and-infinites-is-false$t0$t0$t2$generated-scope-8cdf8dc8-edc1-40dc-8e61-91fe0ca0fe5b.org.eolang.scope-8cdf8dc8-edc1-40dc-8e61-91fe0ca0fe5b");
      ret = new PhCopy(ret);
        Phi ret_1 = Phi.Φ.attr("org").get().attr("eolang").get().attr("negative-infinity").get();
          ret_1 = new PhLocated(ret_1, 137, 12, "Φ.org.eolang.int-equal-to-nan-and-infinites-is-false$t0$t0$t2$generated-scope-8cdf8dc8-edc1-40dc-8e61-91fe0ca0fe5b.org.eolang.scope-8cdf8dc8-edc1-40dc-8e61-91fe0ca0fe5b.α0");
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new PhMethod(rho, "org.eolang.scope-8cdf8dc8-edc1-40dc-8e61-91fe0ca0fe5b");
        ret = new PhLocated(ret, 137, 8, "Φ.org.eolang.int-equal-to-nan-and-infinites-is-false$t0$t0$t2$generated-scope-8cdf8dc8-edc1-40dc-8e61-91fe0ca0fe5b.φ");
      return ret;
    })));
  }
}

// <o abstract="" ancestors="1" line="138" loc="Φ.org.eolang.int-equal-to-nan-and-infinites-is-false$t0$t0$t3$generated-scope-cc0cbec9-2cf5-4386-b80f-c174c298fb75" name="int-equal-to-nan-and-infinites-is-false$t0$t0$t3$generated-scope-cc0cbec9-2cf5-4386-b80f-c174c298fb75" original-name="generated-scope-cc0cbec9-2cf5-4386-b80f-c174c298fb75" parent="int-equal-to-nan-and-infinites-is-false" pos="9"> 
//   <o base=".eq" line="138" loc="Φ.org.eolang.int-equal-to-nan-and-infinites-is-false$t0$t0$t3$generated-scope-cc0cbec9-2cf5-4386-b80f-c174c298fb75.org.eolang.scope-cc0cbec9-2cf5-4386-b80f-c174c298fb75" name="org.eolang.scope-cc0cbec9-2cf5-4386-b80f-c174c298fb75" pos="9" scope="scope-cc0cbec9-2cf5-4386-b80f-c174c298fb75"> 
//     <o base="org.eolang.int" data="int" line="138" loc="Φ.org.eolang.int-equal-to-nan-and-infinites-is-false$t0$t0$t3$generated-scope-cc0cbec9-2cf5-4386-b80f-c174c298fb75.org.eolang.scope-cc0cbec9-2cf5-4386-b80f-c174c298fb75.ρ" pos="7" scope="scope-cc0cbec9-2cf5-4386-b80f-c174c298fb75">42</o>
//     <o base="org.eolang.nan" line="138" loc="Φ.org.eolang.int-equal-to-nan-and-infinites-is-false$t0$t0$t3$generated-scope-cc0cbec9-2cf5-4386-b80f-c174c298fb75.org.eolang.scope-cc0cbec9-2cf5-4386-b80f-c174c298fb75.α0" pos="13" scope="scope-cc0cbec9-2cf5-4386-b80f-c174c298fb75"/>
//   </o>
//   <o base="org.eolang.scope-cc0cbec9-2cf5-4386-b80f-c174c298fb75" line="138" loc="Φ.org.eolang.int-equal-to-nan-and-infinites-is-false$t0$t0$t3$generated-scope-cc0cbec9-2cf5-4386-b80f-c174c298fb75.φ" name="@" pos="9" ref="138"/>
// </o>
@XmirObject(name = "ω1t0$t0$t3$generated-scope-cc0cbec9-2cf5-4386-b80f-c174c298fb75", oname = "generated-scope-cc0cbec9-2cf5-4386-b80f-c174c298fb75", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/int-tests.eo")
public final class EOω1t0$EOt0$EOt3$EOgenerated_scope_cc0cbec9_2cf5_4386_b80f_c174c298fb75 extends PhDefault {
  public EOω1t0$EOt0$EOt3$EOgenerated_scope_cc0cbec9_2cf5_4386_b80f_c174c298fb75(final Phi sigma) {
    super(sigma);
    this.add("org.eolang.scope-cc0cbec9-2cf5-4386-b80f-c174c298fb75", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = new EOorg.EOeolang.EOint(Phi.Φ);
        ret_base = new PhLocated(ret_base, 138, 7, "Φ.org.eolang.int-equal-to-nan-and-infinites-is-false$t0$t0$t3$generated-scope-cc0cbec9-2cf5-4386-b80f-c174c298fb75.org.eolang.scope-cc0cbec9-2cf5-4386-b80f-c174c298fb75.ρ");
        ret_base = new PhWith(ret_base, "Δ", new Data.Value<>(42L));
      Phi ret = new PhMethod(ret_base, "eq");
        ret = new PhLocated(ret, 138, 9, "Φ.org.eolang.int-equal-to-nan-and-infinites-is-false$t0$t0$t3$generated-scope-cc0cbec9-2cf5-4386-b80f-c174c298fb75.org.eolang.scope-cc0cbec9-2cf5-4386-b80f-c174c298fb75");
      ret = new PhCopy(ret);
        Phi ret_1 = Phi.Φ.attr("org").get().attr("eolang").get().attr("nan").get();
          ret_1 = new PhLocated(ret_1, 138, 13, "Φ.org.eolang.int-equal-to-nan-and-infinites-is-false$t0$t0$t3$generated-scope-cc0cbec9-2cf5-4386-b80f-c174c298fb75.org.eolang.scope-cc0cbec9-2cf5-4386-b80f-c174c298fb75.α0");
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new PhMethod(rho, "org.eolang.scope-cc0cbec9-2cf5-4386-b80f-c174c298fb75");
        ret = new PhLocated(ret, 138, 9, "Φ.org.eolang.int-equal-to-nan-and-infinites-is-false$t0$t0$t3$generated-scope-cc0cbec9-2cf5-4386-b80f-c174c298fb75.φ");
      return ret;
    })));
  }
}

// <o abstract="" ancestors="1" line="139" loc="Φ.org.eolang.int-equal-to-nan-and-infinites-is-false$t0$t0$t4$generated-scope-6d5f53c7-73a3-45d8-b9e4-d79941e85965" name="int-equal-to-nan-and-infinites-is-false$t0$t0$t4$generated-scope-6d5f53c7-73a3-45d8-b9e4-d79941e85965" original-name="generated-scope-6d5f53c7-73a3-45d8-b9e4-d79941e85965" parent="int-equal-to-nan-and-infinites-is-false" pos="9"> 
//   <o base=".eq" line="139" loc="Φ.org.eolang.int-equal-to-nan-and-infinites-is-false$t0$t0$t4$generated-scope-6d5f53c7-73a3-45d8-b9e4-d79941e85965.org.eolang.scope-6d5f53c7-73a3-45d8-b9e4-d79941e85965" name="org.eolang.scope-6d5f53c7-73a3-45d8-b9e4-d79941e85965" pos="9" scope="scope-6d5f53c7-73a3-45d8-b9e4-d79941e85965"> 
//     <o base="org.eolang.int" data="int" line="139" loc="Φ.org.eolang.int-equal-to-nan-and-infinites-is-false$t0$t0$t4$generated-scope-6d5f53c7-73a3-45d8-b9e4-d79941e85965.org.eolang.scope-6d5f53c7-73a3-45d8-b9e4-d79941e85965.ρ" pos="7" scope="scope-6d5f53c7-73a3-45d8-b9e4-d79941e85965">42</o>
//     <o base="org.eolang.positive-infinity" line="139" loc="Φ.org.eolang.int-equal-to-nan-and-infinites-is-false$t0$t0$t4$generated-scope-6d5f53c7-73a3-45d8-b9e4-d79941e85965.org.eolang.scope-6d5f53c7-73a3-45d8-b9e4-d79941e85965.α0" pos="13" scope="scope-6d5f53c7-73a3-45d8-b9e4-d79941e85965"/>
//   </o>
//   <o base="org.eolang.scope-6d5f53c7-73a3-45d8-b9e4-d79941e85965" line="139" loc="Φ.org.eolang.int-equal-to-nan-and-infinites-is-false$t0$t0$t4$generated-scope-6d5f53c7-73a3-45d8-b9e4-d79941e85965.φ" name="@" pos="9" ref="139"/>
// </o>
@XmirObject(name = "ω1t0$t0$t4$generated-scope-6d5f53c7-73a3-45d8-b9e4-d79941e85965", oname = "generated-scope-6d5f53c7-73a3-45d8-b9e4-d79941e85965", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/int-tests.eo")
public final class EOω1t0$EOt0$EOt4$EOgenerated_scope_6d5f53c7_73a3_45d8_b9e4_d79941e85965 extends PhDefault {
  public EOω1t0$EOt0$EOt4$EOgenerated_scope_6d5f53c7_73a3_45d8_b9e4_d79941e85965(final Phi sigma) {
    super(sigma);
    this.add("org.eolang.scope-6d5f53c7-73a3-45d8-b9e4-d79941e85965", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = new EOorg.EOeolang.EOint(Phi.Φ);
        ret_base = new PhLocated(ret_base, 139, 7, "Φ.org.eolang.int-equal-to-nan-and-infinites-is-false$t0$t0$t4$generated-scope-6d5f53c7-73a3-45d8-b9e4-d79941e85965.org.eolang.scope-6d5f53c7-73a3-45d8-b9e4-d79941e85965.ρ");
        ret_base = new PhWith(ret_base, "Δ", new Data.Value<>(42L));
      Phi ret = new PhMethod(ret_base, "eq");
        ret = new PhLocated(ret, 139, 9, "Φ.org.eolang.int-equal-to-nan-and-infinites-is-false$t0$t0$t4$generated-scope-6d5f53c7-73a3-45d8-b9e4-d79941e85965.org.eolang.scope-6d5f53c7-73a3-45d8-b9e4-d79941e85965");
      ret = new PhCopy(ret);
        Phi ret_1 = Phi.Φ.attr("org").get().attr("eolang").get().attr("positive-infinity").get();
          ret_1 = new PhLocated(ret_1, 139, 13, "Φ.org.eolang.int-equal-to-nan-and-infinites-is-false$t0$t0$t4$generated-scope-6d5f53c7-73a3-45d8-b9e4-d79941e85965.org.eolang.scope-6d5f53c7-73a3-45d8-b9e4-d79941e85965.α0");
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new PhMethod(rho, "org.eolang.scope-6d5f53c7-73a3-45d8-b9e4-d79941e85965");
        ret = new PhLocated(ret, 139, 9, "Φ.org.eolang.int-equal-to-nan-and-infinites-is-false$t0$t0$t4$generated-scope-6d5f53c7-73a3-45d8-b9e4-d79941e85965.φ");
      return ret;
    })));
  }
}

// <o abstract="" ancestors="1" line="140" loc="Φ.org.eolang.int-equal-to-nan-and-infinites-is-false$t0$t0$t5$generated-scope-f07a4435-04c1-4177-a020-279696393786" name="int-equal-to-nan-and-infinites-is-false$t0$t0$t5$generated-scope-f07a4435-04c1-4177-a020-279696393786" original-name="generated-scope-f07a4435-04c1-4177-a020-279696393786" parent="int-equal-to-nan-and-infinites-is-false" pos="9"> 
//   <o base=".eq" line="140" loc="Φ.org.eolang.int-equal-to-nan-and-infinites-is-false$t0$t0$t5$generated-scope-f07a4435-04c1-4177-a020-279696393786.org.eolang.scope-f07a4435-04c1-4177-a020-279696393786" name="org.eolang.scope-f07a4435-04c1-4177-a020-279696393786" pos="9" scope="scope-f07a4435-04c1-4177-a020-279696393786"> 
//     <o base="org.eolang.int" data="int" line="140" loc="Φ.org.eolang.int-equal-to-nan-and-infinites-is-false$t0$t0$t5$generated-scope-f07a4435-04c1-4177-a020-279696393786.org.eolang.scope-f07a4435-04c1-4177-a020-279696393786.ρ" pos="7" scope="scope-f07a4435-04c1-4177-a020-279696393786">42</o>
//     <o base="org.eolang.negative-infinity" line="140" loc="Φ.org.eolang.int-equal-to-nan-and-infinites-is-false$t0$t0$t5$generated-scope-f07a4435-04c1-4177-a020-279696393786.org.eolang.scope-f07a4435-04c1-4177-a020-279696393786.α0" pos="13" scope="scope-f07a4435-04c1-4177-a020-279696393786"/>
//   </o>
//   <o base="org.eolang.scope-f07a4435-04c1-4177-a020-279696393786" line="140" loc="Φ.org.eolang.int-equal-to-nan-and-infinites-is-false$t0$t0$t5$generated-scope-f07a4435-04c1-4177-a020-279696393786.φ" name="@" pos="9" ref="140"/>
// </o>
@XmirObject(name = "ω1t0$t0$t5$generated-scope-f07a4435-04c1-4177-a020-279696393786", oname = "generated-scope-f07a4435-04c1-4177-a020-279696393786", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/int-tests.eo")
public final class EOω1t0$EOt0$EOt5$EOgenerated_scope_f07a4435_04c1_4177_a020_279696393786 extends PhDefault {
  public EOω1t0$EOt0$EOt5$EOgenerated_scope_f07a4435_04c1_4177_a020_279696393786(final Phi sigma) {
    super(sigma);
    this.add("org.eolang.scope-f07a4435-04c1-4177-a020-279696393786", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = new EOorg.EOeolang.EOint(Phi.Φ);
        ret_base = new PhLocated(ret_base, 140, 7, "Φ.org.eolang.int-equal-to-nan-and-infinites-is-false$t0$t0$t5$generated-scope-f07a4435-04c1-4177-a020-279696393786.org.eolang.scope-f07a4435-04c1-4177-a020-279696393786.ρ");
        ret_base = new PhWith(ret_base, "Δ", new Data.Value<>(42L));
      Phi ret = new PhMethod(ret_base, "eq");
        ret = new PhLocated(ret, 140, 9, "Φ.org.eolang.int-equal-to-nan-and-infinites-is-false$t0$t0$t5$generated-scope-f07a4435-04c1-4177-a020-279696393786.org.eolang.scope-f07a4435-04c1-4177-a020-279696393786");
      ret = new PhCopy(ret);
        Phi ret_1 = Phi.Φ.attr("org").get().attr("eolang").get().attr("negative-infinity").get();
          ret_1 = new PhLocated(ret_1, 140, 13, "Φ.org.eolang.int-equal-to-nan-and-infinites-is-false$t0$t0$t5$generated-scope-f07a4435-04c1-4177-a020-279696393786.org.eolang.scope-f07a4435-04c1-4177-a020-279696393786.α0");
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new PhMethod(rho, "org.eolang.scope-f07a4435-04c1-4177-a020-279696393786");
        ret = new PhLocated(ret, 140, 9, "Φ.org.eolang.int-equal-to-nan-and-infinites-is-false$t0$t0$t5$generated-scope-f07a4435-04c1-4177-a020-279696393786.φ");
      return ret;
    })));
  }
}
}
