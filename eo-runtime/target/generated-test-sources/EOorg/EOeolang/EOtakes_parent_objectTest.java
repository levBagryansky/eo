
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT e24f541 2023-09-12T11:41:32) on 2023-10-03T10:45:38.539230Z; your changes will be discarded on the next build */
package EOorg.EOeolang;

import org.eolang.*;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

// <o abstract="" line="37" loc="Φ.org.eolang.takes-parent-object" name="takes-parent-object" original-name="takes-parent-object" pos="0"> 
//   <o base="takes-parent-object$a" cut="9" line="38" loc="Φ.org.eolang.takes-parent-object.a" name="a" pos="2" ref="38"/>
//   <o base=".eq" line="42" loc="Φ.org.eolang.takes-parent-object.φ" name="@" pos="2"> 
//     <o base="a" line="43" loc="Φ.org.eolang.takes-parent-object.φ.ρ" pos="4" ref="38"> 
//       <o base="org.eolang.int" data="int" line="43" loc="Φ.org.eolang.takes-parent-object.φ.ρ.α0" pos="6">42</o>
//     </o>
//     <o base="org.eolang.int" data="int" line="44" loc="Φ.org.eolang.takes-parent-object.φ.α0" pos="4">42</o>
//   </o>
// </o>
@XmirObject(name = "takes-parent-objectTest", oname = "takes-parent-object", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/runtime-tests.eo")
public final class EOtakes_parent_objectTest extends PhDefault {
    
  public EOtakes_parent_objectTest() {
    this.add("a", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new EOω1a(rho);
        ret = new PhLocated(ret, 38, 2, "Φ.org.eolang.takes-parent-object.a");
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = new PhMethod(rho, "a");
        ret_base = new PhLocated(ret_base, 43, 4, "Φ.org.eolang.takes-parent-object.φ.ρ");
      ret_base = new PhCopy(ret_base);
        Phi ret_base_1 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_base_1 = new PhLocated(ret_base_1, 43, 6, "Φ.org.eolang.takes-parent-object.φ.ρ.α0");
          ret_base_1 = new PhWith(ret_base_1, "Δ", new Data.Value<>(42L));
        ret_base = new PhWith(ret_base, 0, ret_base_1);
      Phi ret = new PhMethod(ret_base, "eq");
        ret = new PhLocated(ret, 42, 2, "Φ.org.eolang.takes-parent-object.φ");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 44, 4, "Φ.org.eolang.takes-parent-object.φ.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>(42L));
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
  }

  @Test
  public void works() throws java.lang.Exception {
    Object obj = new Dataized(new EOtakes_parent_objectTest()).take();
    if (obj instanceof String) {
      Assertions.fail(obj.toString());
    } else {
      Assertions.assertTrue((Boolean) obj);
    }
  }

// <o abstract="" ancestors="1" line="38" loc="Φ.org.eolang.takes-parent-object$a" name="takes-parent-object$a" original-name="a" parent="takes-parent-object" pos="2"> 
//   <o line="38" loc="Φ.org.eolang.takes-parent-object$a.x" name="x" pos="3"/>
//   <o base="takes-parent-object$a$take" cut="10" line="39" loc="Φ.org.eolang.takes-parent-object$a.take" name="take" pos="4" ref="39"/>
//   <o base="take" line="41" loc="Φ.org.eolang.takes-parent-object$a.φ" name="@" pos="4" ref="39"/>
// </o>
@XmirObject(name = "ω1a", oname = "a", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/runtime-tests.eo")
public final class EOω1a extends PhDefault {
    
  public EOω1a(final Phi sigma) {
    super(sigma);
    this.add("x", new AtFree(/* default */));
    this.add("take", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new EOω2take(rho);
        ret = new PhLocated(ret, 39, 4, "Φ.org.eolang.takes-parent-object$a.take");
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new PhMethod(rho, "take");
        ret = new PhLocated(ret, 41, 4, "Φ.org.eolang.takes-parent-object$a.φ");
      return ret;
    })));
  }

// <o abstract="" ancestors="2" line="39" loc="Φ.org.eolang.takes-parent-object$a$take" name="takes-parent-object$a$take" original-name="take" parent="takes-parent-object$a" pos="4"> 
//   <o base=".x" line="40" loc="Φ.org.eolang.takes-parent-object$a$take.φ" name="@" pos="7"> 
//     <o base="^" line="40" loc="Φ.org.eolang.takes-parent-object$a$take.φ.ρ" pos="6"/>
//   </o>
// </o>
@XmirObject(name = "ω2take", oname = "take", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/runtime-tests.eo")
public final class EOω2take extends PhDefault {
    
  public EOω2take(final Phi sigma) {
    super(sigma);
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = new PhMethod(rho, "ρ");
        ret_base = new PhLocated(ret_base, 40, 6, "Φ.org.eolang.takes-parent-object$a$take.φ.ρ");
      Phi ret = new PhMethod(ret_base, "x");
        ret = new PhLocated(ret, 40, 7, "Φ.org.eolang.takes-parent-object$a$take.φ");
      return ret;
    })));
  }
}
}
}
