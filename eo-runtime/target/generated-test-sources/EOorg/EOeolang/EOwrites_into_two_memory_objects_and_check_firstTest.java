
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT e24f541 2023-09-12T11:41:32) on 2023-10-03T10:45:38.539230Z; your changes will be discarded on the next build */
package EOorg.EOeolang;

import org.eolang.*;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

// <o abstract="" line="85" loc="Φ.org.eolang.writes-into-two-memory-objects-and-check-first" name="writes-into-two-memory-objects-and-check-first" original-name="writes-into-two-memory-objects-and-check-first" pos="0"> 
//   <o base="org.eolang.memory" line="86" loc="Φ.org.eolang.writes-into-two-memory-objects-and-check-first.a" name="a" pos="2"> 
//     <o base="org.eolang.int" data="int" line="86" loc="Φ.org.eolang.writes-into-two-memory-objects-and-check-first.a.α0" pos="9">0</o>
//   </o>
//   <o base="org.eolang.memory" line="87" loc="Φ.org.eolang.writes-into-two-memory-objects-and-check-first.b" name="b" pos="2"> 
//     <o base="org.eolang.int" data="int" line="87" loc="Φ.org.eolang.writes-into-two-memory-objects-and-check-first.b.α0" pos="9">0</o>
//   </o>
//   <o base=".eq" line="88" loc="Φ.org.eolang.writes-into-two-memory-objects-and-check-first.φ" name="@" pos="2"> 
//     <o base="org.eolang.seq" line="89" loc="Φ.org.eolang.writes-into-two-memory-objects-and-check-first.φ.ρ" pos="4"> 
//       <o base=".write" line="90" loc="Φ.org.eolang.writes-into-two-memory-objects-and-check-first.φ.ρ.α0" pos="7"> 
//         <o base="a" line="90" loc="Φ.org.eolang.writes-into-two-memory-objects-and-check-first.φ.ρ.α0.ρ" pos="6" ref="86"/>
//         <o base="org.eolang.int" data="int" line="90" loc="Φ.org.eolang.writes-into-two-memory-objects-and-check-first.φ.ρ.α0.α0" pos="14">10</o>
//       </o>
//       <o base=".write" line="91" loc="Φ.org.eolang.writes-into-two-memory-objects-and-check-first.φ.ρ.α1" pos="7"> 
//         <o base="b" line="91" loc="Φ.org.eolang.writes-into-two-memory-objects-and-check-first.φ.ρ.α1.ρ" pos="6" ref="87"/>
//         <o base="org.eolang.int" data="int" line="91" loc="Φ.org.eolang.writes-into-two-memory-objects-and-check-first.φ.ρ.α1.α0" pos="14">20</o>
//       </o>
//       <o base="a" line="92" loc="Φ.org.eolang.writes-into-two-memory-objects-and-check-first.φ.ρ.α2" pos="6" ref="86"/>
//     </o>
//     <o base="org.eolang.int" data="int" line="93" loc="Φ.org.eolang.writes-into-two-memory-objects-and-check-first.φ.α0" pos="4">10</o>
//   </o>
// </o>
@XmirObject(name = "writes-into-two-memory-objects-and-check-firstTest", oname = "writes-into-two-memory-objects-and-check-first", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/memory-tests.eo")
public final class EOwrites_into_two_memory_objects_and_check_firstTest extends PhDefault {
    
  public EOwrites_into_two_memory_objects_and_check_firstTest() {
    this.add("a", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("memory").get();
        ret = new PhLocated(ret, 86, 2, "Φ.org.eolang.writes-into-two-memory-objects-and-check-first.a");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 86, 9, "Φ.org.eolang.writes-into-two-memory-objects-and-check-first.a.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>(0L));
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
    this.add("b", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("memory").get();
        ret = new PhLocated(ret, 87, 2, "Φ.org.eolang.writes-into-two-memory-objects-and-check-first.b");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 87, 9, "Φ.org.eolang.writes-into-two-memory-objects-and-check-first.b.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>(0L));
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = Phi.Φ.attr("org").get().attr("eolang").get().attr("seq").get();
        ret_base = new PhLocated(ret_base, 89, 4, "Φ.org.eolang.writes-into-two-memory-objects-and-check-first.φ.ρ");
      ret_base = new PhCopy(ret_base);
        Phi ret_base_1_base = new PhMethod(rho, "a");
          ret_base_1_base = new PhLocated(ret_base_1_base, 90, 6, "Φ.org.eolang.writes-into-two-memory-objects-and-check-first.φ.ρ.α0.ρ");
        Phi ret_base_1 = new PhMethod(ret_base_1_base, "write");
          ret_base_1 = new PhLocated(ret_base_1, 90, 7, "Φ.org.eolang.writes-into-two-memory-objects-and-check-first.φ.ρ.α0");
        ret_base_1 = new PhCopy(ret_base_1);
          Phi ret_base_1_1 = new EOorg.EOeolang.EOint(Phi.Φ);
            ret_base_1_1 = new PhLocated(ret_base_1_1, 90, 14, "Φ.org.eolang.writes-into-two-memory-objects-and-check-first.φ.ρ.α0.α0");
            ret_base_1_1 = new PhWith(ret_base_1_1, "Δ", new Data.Value<>(10L));
          ret_base_1 = new PhWith(ret_base_1, 0, ret_base_1_1);
        Phi ret_base_2_base = new PhMethod(rho, "b");
          ret_base_2_base = new PhLocated(ret_base_2_base, 91, 6, "Φ.org.eolang.writes-into-two-memory-objects-and-check-first.φ.ρ.α1.ρ");
        Phi ret_base_2 = new PhMethod(ret_base_2_base, "write");
          ret_base_2 = new PhLocated(ret_base_2, 91, 7, "Φ.org.eolang.writes-into-two-memory-objects-and-check-first.φ.ρ.α1");
        ret_base_2 = new PhCopy(ret_base_2);
          Phi ret_base_2_1 = new EOorg.EOeolang.EOint(Phi.Φ);
            ret_base_2_1 = new PhLocated(ret_base_2_1, 91, 14, "Φ.org.eolang.writes-into-two-memory-objects-and-check-first.φ.ρ.α1.α0");
            ret_base_2_1 = new PhWith(ret_base_2_1, "Δ", new Data.Value<>(20L));
          ret_base_2 = new PhWith(ret_base_2, 0, ret_base_2_1);
        Phi ret_base_3 = new PhMethod(rho, "a");
          ret_base_3 = new PhLocated(ret_base_3, 92, 6, "Φ.org.eolang.writes-into-two-memory-objects-and-check-first.φ.ρ.α2");
        ret_base = new PhWith(ret_base, 0, ret_base_1);
        ret_base = new PhWith(ret_base, 1, ret_base_2);
        ret_base = new PhWith(ret_base, 2, ret_base_3);
      Phi ret = new PhMethod(ret_base, "eq");
        ret = new PhLocated(ret, 88, 2, "Φ.org.eolang.writes-into-two-memory-objects-and-check-first.φ");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 93, 4, "Φ.org.eolang.writes-into-two-memory-objects-and-check-first.φ.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>(10L));
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
  }

  @Test
  public void works() throws java.lang.Exception {
    Object obj = new Dataized(new EOwrites_into_two_memory_objects_and_check_firstTest()).take();
    if (obj instanceof String) {
      Assertions.fail(obj.toString());
    } else {
      Assertions.assertTrue((Boolean) obj);
    }
  }
}
