
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT e24f541 2023-09-12T11:41:32) on 2023-10-03T10:45:38.539230Z; your changes will be discarded on the next build */
package EOorg.EOeolang;

import org.eolang.*;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

// <o abstract="" line="333" loc="Φ.org.eolang.concat-strings" name="concat-strings" original-name="concat-strings" pos="0"> 
//   <o base=".concat" line="334" loc="Φ.org.eolang.concat-strings.s-bytes" name="s-bytes" pos="2"> 
//     <o base=".as-bytes" line="335" loc="Φ.org.eolang.concat-strings.s-bytes.ρ" pos="12"> 
//       <o base="org.eolang.string" data="string" line="335" loc="Φ.org.eolang.concat-strings.s-bytes.ρ.ρ" pos="4">hello</o>
//     </o>
//     <o base=".as-bytes" line="336" loc="Φ.org.eolang.concat-strings.s-bytes.α0" pos="11"> 
//       <o base="org.eolang.string" data="string" line="336" loc="Φ.org.eolang.concat-strings.s-bytes.α0.ρ" pos="4">world</o>
//     </o>
//   </o>
//   <o base=".eq" line="337" loc="Φ.org.eolang.concat-strings.φ" name="@" pos="2"> 
//     <o base=".as-string" line="338" loc="Φ.org.eolang.concat-strings.φ.ρ" pos="4"> 
//       <o base="s-bytes" line="339" loc="Φ.org.eolang.concat-strings.φ.ρ.ρ" pos="6" ref="334"/>
//     </o>
//     <o base="org.eolang.string" data="string" line="340" loc="Φ.org.eolang.concat-strings.φ.α0" pos="4">hello world</o>
//   </o>
// </o>
@XmirObject(name = "concat-stringsTest", oname = "concat-strings", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/bytes-tests.eo")
public final class EOconcat_stringsTest extends PhDefault {
    
  public EOconcat_stringsTest() {
    this.add("s-bytes", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base_base = new EOorg.EOeolang.EOstring(Phi.Φ);
        ret_base_base = new PhLocated(ret_base_base, 335, 4, "Φ.org.eolang.concat-strings.s-bytes.ρ.ρ");
        ret_base_base = new PhWith(ret_base_base, "Δ", new Data.Value<>("hello "));
      Phi ret_base = new PhMethod(ret_base_base, "as-bytes");
        ret_base = new PhLocated(ret_base, 335, 12, "Φ.org.eolang.concat-strings.s-bytes.ρ");
      Phi ret = new PhMethod(ret_base, "concat");
        ret = new PhLocated(ret, 334, 2, "Φ.org.eolang.concat-strings.s-bytes");
      ret = new PhCopy(ret);
        Phi ret_1_base = new EOorg.EOeolang.EOstring(Phi.Φ);
          ret_1_base = new PhLocated(ret_1_base, 336, 4, "Φ.org.eolang.concat-strings.s-bytes.α0.ρ");
          ret_1_base = new PhWith(ret_1_base, "Δ", new Data.Value<>("world"));
        Phi ret_1 = new PhMethod(ret_1_base, "as-bytes");
          ret_1 = new PhLocated(ret_1, 336, 11, "Φ.org.eolang.concat-strings.s-bytes.α0");
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base_base = new PhMethod(rho, "s-bytes");
        ret_base_base = new PhLocated(ret_base_base, 339, 6, "Φ.org.eolang.concat-strings.φ.ρ.ρ");
      Phi ret_base = new PhMethod(ret_base_base, "as-string");
        ret_base = new PhLocated(ret_base, 338, 4, "Φ.org.eolang.concat-strings.φ.ρ");
      Phi ret = new PhMethod(ret_base, "eq");
        ret = new PhLocated(ret, 337, 2, "Φ.org.eolang.concat-strings.φ");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOstring(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 340, 4, "Φ.org.eolang.concat-strings.φ.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>("hello world"));
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
  }

  @Test
  public void works() throws java.lang.Exception {
    Object obj = new Dataized(new EOconcat_stringsTest()).take();
    if (obj instanceof String) {
      Assertions.fail(obj.toString());
    } else {
      Assertions.assertTrue((Boolean) obj);
    }
  }
}
