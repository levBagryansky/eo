
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT b5a4c9a 2023-08-17T12:29:38) on 2023-08-18T14:42:30.920527Z; your changes will be discarded on the next build */
package EOorg.EOeolang.EOmath;

import org.eolang.*;

// <o abstract="" ancestors="1" line="419" loc="Φ.org.eolang.math.number$exp" name="number$exp" original-name="exp" parent="number" pos="2"> 
//   <o base="org.eolang.switch" line="420" loc="Φ.org.eolang.math.number$exp.φ" name="@" pos="4"> 
//     <o base="org.eolang.tuple" data="tuple" line="421" loc="Φ.org.eolang.math.number$exp.φ.α0" pos="6"> 
//       <o base="is-nan" line="422" loc="Φ.org.eolang.math.number$exp.φ.α0.α0" pos="8" ref="419.69.469"/>
//       <o base="org.eolang.nan" line="423" loc="Φ.org.eolang.math.number$exp.φ.α0.α1" pos="8"/>
//     </o>
//     <o base="org.eolang.tuple" data="tuple" line="424" loc="Φ.org.eolang.math.number$exp.φ.α1" pos="6"> 
//       <o base=".eq" line="425" loc="Φ.org.eolang.math.number$exp.φ.α1.α0" pos="8"> 
//         <o base="org.eolang.positive-infinity" line="426" loc="Φ.org.eolang.math.number$exp.φ.α1.α0.ρ" pos="10"/>
//         <o base="n" line="427" loc="Φ.org.eolang.math.number$exp.φ.α1.α0.α0" pos="10" ref="419.34.469"/>
//       </o>
//       <o base="number" line="428" loc="Φ.org.eolang.math.number$exp.φ.α1.α1" pos="8" ref="34"> 
//         <o base="org.eolang.positive-infinity" line="429" loc="Φ.org.eolang.math.number$exp.φ.α1.α1.α0" pos="10"/>
//       </o>
//     </o>
//     <o base="org.eolang.tuple" data="tuple" line="430" loc="Φ.org.eolang.math.number$exp.φ.α2" pos="6"> 
//       <o base=".eq" line="431" loc="Φ.org.eolang.math.number$exp.φ.α2.α0" pos="8"> 
//         <o base="org.eolang.negative-infinity" line="432" loc="Φ.org.eolang.math.number$exp.φ.α2.α0.ρ" pos="10"/>
//         <o base="n" line="433" loc="Φ.org.eolang.math.number$exp.φ.α2.α0.α0" pos="10" ref="419.34.469"/>
//       </o>
//       <o base="org.eolang.float" data="float" line="434" loc="Φ.org.eolang.math.number$exp.φ.α2.α1" pos="8">0.0</o>
//     </o>
//     <o base="org.eolang.tuple" data="tuple" line="435" loc="Φ.org.eolang.math.number$exp.φ.α3" pos="6"> 
//       <o base="org.eolang.bool" data="bool" line="436" loc="Φ.org.eolang.math.number$exp.φ.α3.α0" pos="8">TRUE</o>
//       <o base=".times" line="437" loc="Φ.org.eolang.math.number$exp.φ.α3.α1" pos="8"> 
//         <o base="exp-x0" line="438" loc="Φ.org.eolang.math.number$exp.φ.α3.α1.ρ" pos="10" ref="448"/>
//         <o base="exp-x1" line="439" loc="Φ.org.eolang.math.number$exp.φ.α3.α1.α0" pos="10" ref="451"/>
//       </o>
//     </o>
//   </o>
//   <o base="as-float" const="" line="440" loc="Φ.org.eolang.math.number$exp.value" name="value" pos="4" ref="419.390.469"/>
//   <o base="org.eolang.float" const="" data="float" line="441" loc="Φ.org.eolang.math.number$exp.ln-2" name="ln-2" pos="4">0.6931471805599453</o>
//   <o base=".as-int" const="" line="442" loc="Φ.org.eolang.math.number$exp.m" name="m" pos="4"> 
//     <o base="number" line="443" loc="Φ.org.eolang.math.number$exp.m.ρ" pos="6" ref="34"> 
//       <o base=".div" line="444" loc="Φ.org.eolang.math.number$exp.m.ρ.α0" pos="8"> 
//         <o base="value" line="445" loc="Φ.org.eolang.math.number$exp.m.ρ.α0.ρ" pos="10" ref="440"/>
//         <o base=".ln-2" line="446" loc="Φ.org.eolang.math.number$exp.m.ρ.α0.α0" pos="20"> 
//           <o base=".exp" line="446" loc="Φ.org.eolang.math.number$exp.m.ρ.α0.α0.ρ" pos="16"> 
//             <o base="number" line="446" loc="Φ.org.eolang.math.number$exp.m.ρ.α0.α0.ρ.ρ" pos="10" ref="34"/>
//           </o>
//         </o>
//       </o>
//     </o>
//   </o>
//   <o base="org.eolang.float" const="" data="float" line="447" loc="Φ.org.eolang.math.number$exp.count" name="count" pos="4">1.5E7</o>
//   <o base=".pow" const="" line="448" loc="Φ.org.eolang.math.number$exp.exp-x0" name="exp-x0" pos="4"> 
//     <o base="number" line="449" loc="Φ.org.eolang.math.number$exp.exp-x0.ρ" pos="6" ref="34"> 
//       <o base="org.eolang.float" data="float" line="449" loc="Φ.org.eolang.math.number$exp.exp-x0.ρ.α0" pos="13">2.0</o>
//     </o>
//     <o base=".as-float" line="450" loc="Φ.org.eolang.math.number$exp.exp-x0.α0" pos="16"> 
//       <o base="number" line="450" loc="Φ.org.eolang.math.number$exp.exp-x0.α0.ρ" pos="7" ref="34" scope="scope-e85024f2-6b83-4033-9386-82e662c772c1"> 
//         <o base="m" line="450" loc="Φ.org.eolang.math.number$exp.exp-x0.α0.ρ.α0" pos="14" ref="442" scope="scope-e85024f2-6b83-4033-9386-82e662c772c1"/>
//       </o>
//     </o>
//   </o>
//   <o base=".pow" const="" line="451" loc="Φ.org.eolang.math.number$exp.exp-x1" name="exp-x1" pos="4"> 
//     <o base="number" line="452" loc="Φ.org.eolang.math.number$exp.exp-x1.ρ" pos="6" ref="34"> 
//       <o base=".plus" line="453" loc="Φ.org.eolang.math.number$exp.exp-x1.ρ.α0" pos="8"> 
//         <o base="org.eolang.float" data="float" line="454" loc="Φ.org.eolang.math.number$exp.exp-x1.ρ.α0.ρ" pos="10">1.0</o>
//         <o base=".div" line="455" loc="Φ.org.eolang.math.number$exp.exp-x1.ρ.α0.α0" pos="10"> 
//           <o base=".minus" line="456" loc="Φ.org.eolang.math.number$exp.exp-x1.ρ.α0.α0.ρ" pos="12"> 
//             <o base="value" line="457" loc="Φ.org.eolang.math.number$exp.exp-x1.ρ.α0.α0.ρ.ρ" pos="14" ref="440"/>
//             <o base=".times" line="458" loc="Φ.org.eolang.math.number$exp.exp-x1.ρ.α0.α0.ρ.α0" pos="14"> 
//               <o base=".as-float" line="459" loc="Φ.org.eolang.math.number$exp.exp-x1.ρ.α0.α0.ρ.α0.ρ" pos="26"> 
//                 <o base="number" line="459" loc="Φ.org.eolang.math.number$exp.exp-x1.ρ.α0.α0.ρ.α0.ρ.ρ" pos="17" ref="34" scope="scope-9a40495e-a834-4a35-91c7-3e95728d3b6a"> 
//                   <o base="m" line="459" loc="Φ.org.eolang.math.number$exp.exp-x1.ρ.α0.α0.ρ.α0.ρ.ρ.α0" pos="24" ref="442" scope="scope-9a40495e-a834-4a35-91c7-3e95728d3b6a"/>
//                 </o>
//               </o>
//               <o base="ln-2" line="460" loc="Φ.org.eolang.math.number$exp.exp-x1.ρ.α0.α0.ρ.α0.α0" pos="16" ref="441"/>
//             </o>
//           </o>
//           <o base="count" line="461" loc="Φ.org.eolang.math.number$exp.exp-x1.ρ.α0.α0.α0" pos="12" ref="447"/>
//         </o>
//       </o>
//     </o>
//     <o base="count" line="462" loc="Φ.org.eolang.math.number$exp.exp-x1.α0" pos="6" ref="447"/>
//   </o>
//   <o level="1" line="419.34.469" loc="Φ.org.eolang.math.number$exp.n" name="n"/>
//   <o level="1" line="419.69.469" loc="Φ.org.eolang.math.number$exp.is-nan" name="is-nan"/>
//   <o level="1" line="419.390.469" loc="Φ.org.eolang.math.number$exp.as-float" name="as-float"/>
// </o>
@XmirObject(name = "number$exp", oname = "exp", source = "/home/tardis3/eo/eo-runtime/target/eo-test/3-pull/org/eolang/math/number.eo")
public final class EOnumber$EOexp extends PhDefault {
  public EOnumber$EOexp(final Phi sigma) {
    super(sigma);
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("switch").get();
        ret = new PhLocated(ret, 420, 4, "Φ.org.eolang.math.number$exp.φ");
      ret = new PhCopy(ret);
        Phi ret_1 = Phi.Φ.attr("org").get().attr("eolang").get().attr("tuple").get();
          ret_1 = new PhLocated(ret_1, 421, 6, "Φ.org.eolang.math.number$exp.φ.α0");
          Phi[] ret_1_a = new Phi[2];
          Phi ret_1_a0 = new PhMethod(new PhMethod(rho, "σ"), "is-nan");
            ret_1_a0 = new PhLocated(ret_1_a0, 422, 8, "Φ.org.eolang.math.number$exp.φ.α0.α0");
          ret_1_a[0] = ret_1_a0;
          Phi ret_1_a1 = Phi.Φ.attr("org").get().attr("eolang").get().attr("nan").get();
            ret_1_a1 = new PhLocated(ret_1_a1, 423, 8, "Φ.org.eolang.math.number$exp.φ.α0.α1");
          ret_1_a[1] = ret_1_a1;
          ret_1 = new PhWith(new PhCopy(ret_1), "Δ", new Data.Value<Phi[]>(ret_1_a));
        Phi ret_2 = Phi.Φ.attr("org").get().attr("eolang").get().attr("tuple").get();
          ret_2 = new PhLocated(ret_2, 424, 6, "Φ.org.eolang.math.number$exp.φ.α1");
          Phi[] ret_2_a = new Phi[2];
          Phi ret_2_a0_base = Phi.Φ.attr("org").get().attr("eolang").get().attr("positive-infinity").get();
            ret_2_a0_base = new PhLocated(ret_2_a0_base, 426, 10, "Φ.org.eolang.math.number$exp.φ.α1.α0.ρ");
          Phi ret_2_a0 = new PhMethod(ret_2_a0_base, "eq");
            ret_2_a0 = new PhLocated(ret_2_a0, 425, 8, "Φ.org.eolang.math.number$exp.φ.α1.α0");
          ret_2_a0 = new PhCopy(ret_2_a0);
            Phi ret_2_a0_1 = new PhMethod(new PhMethod(rho, "σ"), "n");
              ret_2_a0_1 = new PhLocated(ret_2_a0_1, 427, 10, "Φ.org.eolang.math.number$exp.φ.α1.α0.α0");
            ret_2_a0 = new PhWith(ret_2_a0, 0, ret_2_a0_1);
          ret_2_a[0] = ret_2_a0;
          Phi ret_2_a1 = Phi.Φ.attr("org").get().attr("eolang").get().attr("math").get().attr("number").get();
            ret_2_a1 = new PhLocated(ret_2_a1, 428, 8, "Φ.org.eolang.math.number$exp.φ.α1.α1");
          ret_2_a1 = new PhCopy(ret_2_a1);
            Phi ret_2_a1_1 = Phi.Φ.attr("org").get().attr("eolang").get().attr("positive-infinity").get();
              ret_2_a1_1 = new PhLocated(ret_2_a1_1, 429, 10, "Φ.org.eolang.math.number$exp.φ.α1.α1.α0");
            ret_2_a1 = new PhWith(ret_2_a1, 0, ret_2_a1_1);
          ret_2_a[1] = ret_2_a1;
          ret_2 = new PhWith(new PhCopy(ret_2), "Δ", new Data.Value<Phi[]>(ret_2_a));
        Phi ret_3 = Phi.Φ.attr("org").get().attr("eolang").get().attr("tuple").get();
          ret_3 = new PhLocated(ret_3, 430, 6, "Φ.org.eolang.math.number$exp.φ.α2");
          Phi[] ret_3_a = new Phi[2];
          Phi ret_3_a0_base = Phi.Φ.attr("org").get().attr("eolang").get().attr("negative-infinity").get();
            ret_3_a0_base = new PhLocated(ret_3_a0_base, 432, 10, "Φ.org.eolang.math.number$exp.φ.α2.α0.ρ");
          Phi ret_3_a0 = new PhMethod(ret_3_a0_base, "eq");
            ret_3_a0 = new PhLocated(ret_3_a0, 431, 8, "Φ.org.eolang.math.number$exp.φ.α2.α0");
          ret_3_a0 = new PhCopy(ret_3_a0);
            Phi ret_3_a0_1 = new PhMethod(new PhMethod(rho, "σ"), "n");
              ret_3_a0_1 = new PhLocated(ret_3_a0_1, 433, 10, "Φ.org.eolang.math.number$exp.φ.α2.α0.α0");
            ret_3_a0 = new PhWith(ret_3_a0, 0, ret_3_a0_1);
          ret_3_a[0] = ret_3_a0;
          Phi ret_3_a1 = new EOorg.EOeolang.EOfloat(Phi.Φ);
            ret_3_a1 = new PhLocated(ret_3_a1, 434, 8, "Φ.org.eolang.math.number$exp.φ.α2.α1");
            ret_3_a1 = new PhWith(ret_3_a1, "Δ", new Data.Value<>(0.0d));
          ret_3_a[1] = ret_3_a1;
          ret_3 = new PhWith(new PhCopy(ret_3), "Δ", new Data.Value<Phi[]>(ret_3_a));
        Phi ret_4 = Phi.Φ.attr("org").get().attr("eolang").get().attr("tuple").get();
          ret_4 = new PhLocated(ret_4, 435, 6, "Φ.org.eolang.math.number$exp.φ.α3");
          Phi[] ret_4_a = new Phi[2];
          Phi ret_4_a0 = new EOorg.EOeolang.EObool(Phi.Φ);
            ret_4_a0 = new PhLocated(ret_4_a0, 436, 8, "Φ.org.eolang.math.number$exp.φ.α3.α0");
            ret_4_a0 = new PhWith(ret_4_a0, "Δ", new Data.Value<>(Boolean.TRUE));
          ret_4_a[0] = ret_4_a0;
          Phi ret_4_a1_base = new PhMethod(rho, "exp-x0");
            ret_4_a1_base = new PhLocated(ret_4_a1_base, 438, 10, "Φ.org.eolang.math.number$exp.φ.α3.α1.ρ");
          Phi ret_4_a1 = new PhMethod(ret_4_a1_base, "times");
            ret_4_a1 = new PhLocated(ret_4_a1, 437, 8, "Φ.org.eolang.math.number$exp.φ.α3.α1");
          ret_4_a1 = new PhCopy(ret_4_a1);
            Phi ret_4_a1_1 = new PhMethod(rho, "exp-x1");
              ret_4_a1_1 = new PhLocated(ret_4_a1_1, 439, 10, "Φ.org.eolang.math.number$exp.φ.α3.α1.α0");
            ret_4_a1 = new PhWith(ret_4_a1, 0, ret_4_a1_1);
          ret_4_a[1] = ret_4_a1;
          ret_4 = new PhWith(new PhCopy(ret_4), "Δ", new Data.Value<Phi[]>(ret_4_a));
        ret = new PhWith(ret, 0, ret_1);
        ret = new PhWith(ret, 1, ret_2);
        ret = new PhWith(ret, 2, ret_3);
        ret = new PhWith(ret, 3, ret_4);
      return ret;
    })));
    this.add("value", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new PhMethod(new PhMethod(rho, "σ"), "as-float");
        ret = new PhLocated(ret, 440, 4, "Φ.org.eolang.math.number$exp.value");
      ret = new PhConst(ret);
      return ret;
    })));
    this.add("ln-2", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new EOorg.EOeolang.EOfloat(Phi.Φ);
        ret = new PhLocated(ret, 441, 4, "Φ.org.eolang.math.number$exp.ln-2");
        ret = new PhWith(ret, "Δ", new Data.Value<>(0.6931471805599453d));
      ret = new PhConst(ret);
      return ret;
    })));
    this.add("m", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = Phi.Φ.attr("org").get().attr("eolang").get().attr("math").get().attr("number").get();
        ret_base = new PhLocated(ret_base, 443, 6, "Φ.org.eolang.math.number$exp.m.ρ");
      ret_base = new PhCopy(ret_base);
        Phi ret_base_1_base = new PhMethod(rho, "value");
          ret_base_1_base = new PhLocated(ret_base_1_base, 445, 10, "Φ.org.eolang.math.number$exp.m.ρ.α0.ρ");
        Phi ret_base_1 = new PhMethod(ret_base_1_base, "div");
          ret_base_1 = new PhLocated(ret_base_1, 444, 8, "Φ.org.eolang.math.number$exp.m.ρ.α0");
        ret_base_1 = new PhCopy(ret_base_1);
          Phi ret_base_1_1_base_base = Phi.Φ.attr("org").get().attr("eolang").get().attr("math").get().attr("number").get();
            ret_base_1_1_base_base = new PhLocated(ret_base_1_1_base_base, 446, 10, "Φ.org.eolang.math.number$exp.m.ρ.α0.α0.ρ.ρ");
          Phi ret_base_1_1_base = new PhMethod(ret_base_1_1_base_base, "exp");
            ret_base_1_1_base = new PhLocated(ret_base_1_1_base, 446, 16, "Φ.org.eolang.math.number$exp.m.ρ.α0.α0.ρ");
          Phi ret_base_1_1 = new PhMethod(ret_base_1_1_base, "ln-2");
            ret_base_1_1 = new PhLocated(ret_base_1_1, 446, 20, "Φ.org.eolang.math.number$exp.m.ρ.α0.α0");
          ret_base_1 = new PhWith(ret_base_1, 0, ret_base_1_1);
        ret_base = new PhWith(ret_base, 0, ret_base_1);
      Phi ret = new PhMethod(ret_base, "as-int");
        ret = new PhLocated(ret, 442, 4, "Φ.org.eolang.math.number$exp.m");
      ret = new PhConst(ret);
      return ret;
    })));
    this.add("count", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new EOorg.EOeolang.EOfloat(Phi.Φ);
        ret = new PhLocated(ret, 447, 4, "Φ.org.eolang.math.number$exp.count");
        ret = new PhWith(ret, "Δ", new Data.Value<>(1.5E7d));
      ret = new PhConst(ret);
      return ret;
    })));
    this.add("exp-x0", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = Phi.Φ.attr("org").get().attr("eolang").get().attr("math").get().attr("number").get();
        ret_base = new PhLocated(ret_base, 449, 6, "Φ.org.eolang.math.number$exp.exp-x0.ρ");
      ret_base = new PhCopy(ret_base);
        Phi ret_base_1 = new EOorg.EOeolang.EOfloat(Phi.Φ);
          ret_base_1 = new PhLocated(ret_base_1, 449, 13, "Φ.org.eolang.math.number$exp.exp-x0.ρ.α0");
          ret_base_1 = new PhWith(ret_base_1, "Δ", new Data.Value<>(2.0d));
        ret_base = new PhWith(ret_base, 0, ret_base_1);
      Phi ret = new PhMethod(ret_base, "pow");
        ret = new PhLocated(ret, 448, 4, "Φ.org.eolang.math.number$exp.exp-x0");
      ret = new PhCopy(ret);
        Phi ret_1_base = Phi.Φ.attr("org").get().attr("eolang").get().attr("math").get().attr("number").get();
          ret_1_base = new PhLocated(ret_1_base, 450, 7, "Φ.org.eolang.math.number$exp.exp-x0.α0.ρ");
        ret_1_base = new PhCopy(ret_1_base);
          Phi ret_1_base_1 = new PhMethod(rho, "m");
            ret_1_base_1 = new PhLocated(ret_1_base_1, 450, 14, "Φ.org.eolang.math.number$exp.exp-x0.α0.ρ.α0");
          ret_1_base = new PhWith(ret_1_base, 0, ret_1_base_1);
        Phi ret_1 = new PhMethod(ret_1_base, "as-float");
          ret_1 = new PhLocated(ret_1, 450, 16, "Φ.org.eolang.math.number$exp.exp-x0.α0");
        ret = new PhWith(ret, 0, ret_1);
      ret = new PhConst(ret);
      return ret;
    })));
    this.add("exp-x1", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = Phi.Φ.attr("org").get().attr("eolang").get().attr("math").get().attr("number").get();
        ret_base = new PhLocated(ret_base, 452, 6, "Φ.org.eolang.math.number$exp.exp-x1.ρ");
      ret_base = new PhCopy(ret_base);
        Phi ret_base_1_base = new EOorg.EOeolang.EOfloat(Phi.Φ);
          ret_base_1_base = new PhLocated(ret_base_1_base, 454, 10, "Φ.org.eolang.math.number$exp.exp-x1.ρ.α0.ρ");
          ret_base_1_base = new PhWith(ret_base_1_base, "Δ", new Data.Value<>(1.0d));
        Phi ret_base_1 = new PhMethod(ret_base_1_base, "plus");
          ret_base_1 = new PhLocated(ret_base_1, 453, 8, "Φ.org.eolang.math.number$exp.exp-x1.ρ.α0");
        ret_base_1 = new PhCopy(ret_base_1);
          Phi ret_base_1_1_base_base = new PhMethod(rho, "value");
            ret_base_1_1_base_base = new PhLocated(ret_base_1_1_base_base, 457, 14, "Φ.org.eolang.math.number$exp.exp-x1.ρ.α0.α0.ρ.ρ");
          Phi ret_base_1_1_base = new PhMethod(ret_base_1_1_base_base, "minus");
            ret_base_1_1_base = new PhLocated(ret_base_1_1_base, 456, 12, "Φ.org.eolang.math.number$exp.exp-x1.ρ.α0.α0.ρ");
          ret_base_1_1_base = new PhCopy(ret_base_1_1_base);
            Phi ret_base_1_1_base_1_base_base = Phi.Φ.attr("org").get().attr("eolang").get().attr("math").get().attr("number").get();
              ret_base_1_1_base_1_base_base = new PhLocated(ret_base_1_1_base_1_base_base, 459, 17, "Φ.org.eolang.math.number$exp.exp-x1.ρ.α0.α0.ρ.α0.ρ.ρ");
            ret_base_1_1_base_1_base_base = new PhCopy(ret_base_1_1_base_1_base_base);
              Phi ret_base_1_1_base_1_base_base_1 = new PhMethod(rho, "m");
                ret_base_1_1_base_1_base_base_1 = new PhLocated(ret_base_1_1_base_1_base_base_1, 459, 24, "Φ.org.eolang.math.number$exp.exp-x1.ρ.α0.α0.ρ.α0.ρ.ρ.α0");
              ret_base_1_1_base_1_base_base = new PhWith(ret_base_1_1_base_1_base_base, 0, ret_base_1_1_base_1_base_base_1);
            Phi ret_base_1_1_base_1_base = new PhMethod(ret_base_1_1_base_1_base_base, "as-float");
              ret_base_1_1_base_1_base = new PhLocated(ret_base_1_1_base_1_base, 459, 26, "Φ.org.eolang.math.number$exp.exp-x1.ρ.α0.α0.ρ.α0.ρ");
            Phi ret_base_1_1_base_1 = new PhMethod(ret_base_1_1_base_1_base, "times");
              ret_base_1_1_base_1 = new PhLocated(ret_base_1_1_base_1, 458, 14, "Φ.org.eolang.math.number$exp.exp-x1.ρ.α0.α0.ρ.α0");
            ret_base_1_1_base_1 = new PhCopy(ret_base_1_1_base_1);
              Phi ret_base_1_1_base_1_1 = new PhMethod(rho, "ln-2");
                ret_base_1_1_base_1_1 = new PhLocated(ret_base_1_1_base_1_1, 460, 16, "Φ.org.eolang.math.number$exp.exp-x1.ρ.α0.α0.ρ.α0.α0");
              ret_base_1_1_base_1 = new PhWith(ret_base_1_1_base_1, 0, ret_base_1_1_base_1_1);
            ret_base_1_1_base = new PhWith(ret_base_1_1_base, 0, ret_base_1_1_base_1);
          Phi ret_base_1_1 = new PhMethod(ret_base_1_1_base, "div");
            ret_base_1_1 = new PhLocated(ret_base_1_1, 455, 10, "Φ.org.eolang.math.number$exp.exp-x1.ρ.α0.α0");
          ret_base_1_1 = new PhCopy(ret_base_1_1);
            Phi ret_base_1_1_1 = new PhMethod(rho, "count");
              ret_base_1_1_1 = new PhLocated(ret_base_1_1_1, 461, 12, "Φ.org.eolang.math.number$exp.exp-x1.ρ.α0.α0.α0");
            ret_base_1_1 = new PhWith(ret_base_1_1, 0, ret_base_1_1_1);
          ret_base_1 = new PhWith(ret_base_1, 0, ret_base_1_1);
        ret_base = new PhWith(ret_base, 0, ret_base_1);
      Phi ret = new PhMethod(ret_base, "pow");
        ret = new PhLocated(ret, 451, 4, "Φ.org.eolang.math.number$exp.exp-x1");
      ret = new PhCopy(ret);
        Phi ret_1 = new PhMethod(rho, "count");
          ret_1 = new PhLocated(ret_1, 462, 6, "Φ.org.eolang.math.number$exp.exp-x1.α0");
        ret = new PhWith(ret, 0, ret_1);
      ret = new PhConst(ret);
      return ret;
    })));
  }
}
