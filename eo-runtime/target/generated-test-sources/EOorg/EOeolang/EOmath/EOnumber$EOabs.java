
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT b5a4c9a 2023-08-17T12:29:38) on 2023-08-18T14:42:30.920527Z; your changes will be discarded on the next build */
package EOorg.EOeolang.EOmath;

import org.eolang.*;

// <o abstract="" ancestors="1" line="159" loc="Φ.org.eolang.math.number$abs" name="number$abs" original-name="abs" parent="number" pos="2"> 
//   <o base=".n" const="" line="161" loc="Φ.org.eolang.math.number$abs.value" name="value" pos="5"> 
//     <o base="^" line="161" loc="Φ.org.eolang.math.number$abs.value.ρ" pos="4"/>
//   </o>
//   <o base=".if" line="162" loc="Φ.org.eolang.math.number$abs.φ" name="@" pos="4"> 
//     <o base="is-int" line="163" loc="Φ.org.eolang.math.number$abs.φ.ρ" pos="6" ref="159.37.465"/>
//     <o base=".if" line="164" loc="Φ.org.eolang.math.number$abs.φ.α0" pos="6"> 
//       <o base=".gte" line="165" loc="Φ.org.eolang.math.number$abs.φ.α0.ρ" pos="13"> 
//         <o base="value" line="165" loc="Φ.org.eolang.math.number$abs.φ.α0.ρ.ρ" pos="8" ref="161"/>
//         <o base="org.eolang.int" data="int" line="165" loc="Φ.org.eolang.math.number$abs.φ.α0.ρ.α0" pos="18">0</o>
//       </o>
//       <o base="value" line="166" loc="Φ.org.eolang.math.number$abs.φ.α0.α0" pos="8" ref="161"/>
//       <o base=".neg" line="167" loc="Φ.org.eolang.math.number$abs.φ.α0.α1" pos="13"> 
//         <o base="value" line="167" loc="Φ.org.eolang.math.number$abs.φ.α0.α1.ρ" pos="8" ref="161"/>
//       </o>
//     </o>
//     <o base=".if" line="168" loc="Φ.org.eolang.math.number$abs.φ.α1" pos="6"> 
//       <o base=".gte" line="169" loc="Φ.org.eolang.math.number$abs.φ.α1.ρ" pos="13"> 
//         <o base="value" line="169" loc="Φ.org.eolang.math.number$abs.φ.α1.ρ.ρ" pos="8" ref="161"/>
//         <o base="org.eolang.float" data="float" line="169" loc="Φ.org.eolang.math.number$abs.φ.α1.ρ.α0" pos="18">0.0</o>
//       </o>
//       <o base="value" line="170" loc="Φ.org.eolang.math.number$abs.φ.α1.α0" pos="8" ref="161"/>
//       <o base=".neg" line="171" loc="Φ.org.eolang.math.number$abs.φ.α1.α1" pos="13"> 
//         <o base="value" line="171" loc="Φ.org.eolang.math.number$abs.φ.α1.α1.ρ" pos="8" ref="161"/>
//       </o>
//     </o>
//   </o>
//   <o level="1" line="159.37.465" loc="Φ.org.eolang.math.number$abs.is-int" name="is-int"/>
// </o>
@XmirObject(name = "number$abs", oname = "abs", source = "/home/tardis3/eo/eo-runtime/target/eo-test/3-pull/org/eolang/math/number.eo")
public final class EOnumber$EOabs extends PhDefault {
  public EOnumber$EOabs(final Phi sigma) {
    super(sigma);
    this.add("value", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = new PhMethod(rho, "ρ");
        ret_base = new PhLocated(ret_base, 161, 4, "Φ.org.eolang.math.number$abs.value.ρ");
      Phi ret = new PhMethod(ret_base, "n");
        ret = new PhLocated(ret, 161, 5, "Φ.org.eolang.math.number$abs.value");
      ret = new PhConst(ret);
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = new PhMethod(new PhMethod(rho, "σ"), "is-int");
        ret_base = new PhLocated(ret_base, 163, 6, "Φ.org.eolang.math.number$abs.φ.ρ");
      Phi ret = new PhMethod(ret_base, "if");
        ret = new PhLocated(ret, 162, 4, "Φ.org.eolang.math.number$abs.φ");
      ret = new PhCopy(ret);
        Phi ret_1_base_base = new PhMethod(rho, "value");
          ret_1_base_base = new PhLocated(ret_1_base_base, 165, 8, "Φ.org.eolang.math.number$abs.φ.α0.ρ.ρ");
        Phi ret_1_base = new PhMethod(ret_1_base_base, "gte");
          ret_1_base = new PhLocated(ret_1_base, 165, 13, "Φ.org.eolang.math.number$abs.φ.α0.ρ");
        ret_1_base = new PhCopy(ret_1_base);
          Phi ret_1_base_1 = new EOorg.EOeolang.EOint(Phi.Φ);
            ret_1_base_1 = new PhLocated(ret_1_base_1, 165, 18, "Φ.org.eolang.math.number$abs.φ.α0.ρ.α0");
            ret_1_base_1 = new PhWith(ret_1_base_1, "Δ", new Data.Value<>(0L));
          ret_1_base = new PhWith(ret_1_base, 0, ret_1_base_1);
        Phi ret_1 = new PhMethod(ret_1_base, "if");
          ret_1 = new PhLocated(ret_1, 164, 6, "Φ.org.eolang.math.number$abs.φ.α0");
        ret_1 = new PhCopy(ret_1);
          Phi ret_1_1 = new PhMethod(rho, "value");
            ret_1_1 = new PhLocated(ret_1_1, 166, 8, "Φ.org.eolang.math.number$abs.φ.α0.α0");
          Phi ret_1_2_base = new PhMethod(rho, "value");
            ret_1_2_base = new PhLocated(ret_1_2_base, 167, 8, "Φ.org.eolang.math.number$abs.φ.α0.α1.ρ");
          Phi ret_1_2 = new PhMethod(ret_1_2_base, "neg");
            ret_1_2 = new PhLocated(ret_1_2, 167, 13, "Φ.org.eolang.math.number$abs.φ.α0.α1");
          ret_1 = new PhWith(ret_1, 0, ret_1_1);
          ret_1 = new PhWith(ret_1, 1, ret_1_2);
        Phi ret_2_base_base = new PhMethod(rho, "value");
          ret_2_base_base = new PhLocated(ret_2_base_base, 169, 8, "Φ.org.eolang.math.number$abs.φ.α1.ρ.ρ");
        Phi ret_2_base = new PhMethod(ret_2_base_base, "gte");
          ret_2_base = new PhLocated(ret_2_base, 169, 13, "Φ.org.eolang.math.number$abs.φ.α1.ρ");
        ret_2_base = new PhCopy(ret_2_base);
          Phi ret_2_base_1 = new EOorg.EOeolang.EOfloat(Phi.Φ);
            ret_2_base_1 = new PhLocated(ret_2_base_1, 169, 18, "Φ.org.eolang.math.number$abs.φ.α1.ρ.α0");
            ret_2_base_1 = new PhWith(ret_2_base_1, "Δ", new Data.Value<>(0.0d));
          ret_2_base = new PhWith(ret_2_base, 0, ret_2_base_1);
        Phi ret_2 = new PhMethod(ret_2_base, "if");
          ret_2 = new PhLocated(ret_2, 168, 6, "Φ.org.eolang.math.number$abs.φ.α1");
        ret_2 = new PhCopy(ret_2);
          Phi ret_2_1 = new PhMethod(rho, "value");
            ret_2_1 = new PhLocated(ret_2_1, 170, 8, "Φ.org.eolang.math.number$abs.φ.α1.α0");
          Phi ret_2_2_base = new PhMethod(rho, "value");
            ret_2_2_base = new PhLocated(ret_2_2_base, 171, 8, "Φ.org.eolang.math.number$abs.φ.α1.α1.ρ");
          Phi ret_2_2 = new PhMethod(ret_2_2_base, "neg");
            ret_2_2 = new PhLocated(ret_2_2, 171, 13, "Φ.org.eolang.math.number$abs.φ.α1.α1");
          ret_2 = new PhWith(ret_2, 0, ret_2_1);
          ret_2 = new PhWith(ret_2, 1, ret_2_2);
        ret = new PhWith(ret, 0, ret_1);
        ret = new PhWith(ret, 1, ret_2);
      return ret;
    })));
  }
}
