
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT b5a4c9a 2023-08-17T12:29:38) on 2023-08-18T14:42:30.920527Z; your changes will be discarded on the next build */
package EOorg.EOeolang.EOmath;

import org.eolang.*;

// <o abstract="" ancestors="2" line="205" loc="Φ.org.eolang.math.number$power$t1$a2" name="number$power$t1$a2" parent="number$power" pos="6"> 
//   <o base=".if" const="" line="206" loc="Φ.org.eolang.math.number$power$t1$a2.x-as-float" name="x-as-float" pos="8"> 
//     <o base="x-is-inf" cut="1" line="207" loc="Φ.org.eolang.math.number$power$t1$a2.x-as-float.ρ" ref="207"/>
//     <o base="x" line="208" loc="Φ.org.eolang.math.number$power$t1$a2.x-as-float.α0" pos="10" ref="205.198.469"/>
//     <o base=".if" line="209" loc="Φ.org.eolang.math.number$power$t1$a2.x-as-float.α1" pos="10"> 
//       <o base="x-is-int" cut="1" line="210" loc="Φ.org.eolang.math.number$power$t1$a2.x-as-float.α1.ρ" ref="210"/>
//       <o base=".as-float" line="211" loc="Φ.org.eolang.math.number$power$t1$a2.x-as-float.α1.α0" pos="20"> 
//         <o base="x-as-num" line="211" loc="Φ.org.eolang.math.number$power$t1$a2.x-as-float.α1.α0.ρ" pos="12" ref="205.202.469"/>
//       </o>
//       <o base="x" line="212" loc="Φ.org.eolang.math.number$power$t1$a2.x-as-float.α1.α1" pos="12" ref="205.198.469"/>
//     </o>
//   </o>
//   <o base=".if" const="" line="214" loc="Φ.org.eolang.math.number$power$t1$a2.self-as-float" name="self-as-float" pos="8"> 
//     <o base="self-is-inf" cut="0" line="215" loc="Φ.org.eolang.math.number$power$t1$a2.self-as-float.ρ" ref="215"/>
//     <o base="value" cut="2" line="216" loc="Φ.org.eolang.math.number$power$t1$a2.self-as-float.α0" ref="216"/>
//     <o base=".if" line="217" loc="Φ.org.eolang.math.number$power$t1$a2.self-as-float.α1" pos="10"> 
//       <o base="self-is-int" cut="0" line="218" loc="Φ.org.eolang.math.number$power$t1$a2.self-as-float.α1.ρ" ref="218"/>
//       <o base="as-float" line="219" loc="Φ.org.eolang.math.number$power$t1$a2.self-as-float.α1.α0" pos="12" ref="205.390.469"/>
//       <o base="value" line="220" loc="Φ.org.eolang.math.number$power$t1$a2.self-as-float.α1.α1" pos="12" ref="216"/>
//     </o>
//   </o>
//   <o base=".and" const="" line="222" loc="Φ.org.eolang.math.number$power$t1$a2.both-are-int" name="both-are-int" pos="8"> 
//     <o base="x-is-int" line="223" loc="Φ.org.eolang.math.number$power$t1$a2.both-are-int.ρ" pos="10" ref="210"/>
//     <o base="self-is-int" line="224" loc="Φ.org.eolang.math.number$power$t1$a2.both-are-int.α0" pos="10" ref="218"/>
//   </o>
//   <o base="number$power$t1$a2$bin-powi" cut="228" line="226" loc="Φ.org.eolang.math.number$power$t1$a2.bin-powi" name="bin-powi" pos="8" ref="226"> 
//     <o as="x" base="x" level="2" loc="Φ.org.eolang.math.number$power$t1$a2.bin-powi.α0" ref="205.198.469"/>
//     <o as="x-as-num" base="x-as-num" level="2" loc="Φ.org.eolang.math.number$power$t1$a2.bin-powi.α1" ref="205.202.469"/>
//     <o as="n" base="n" level="3" loc="Φ.org.eolang.math.number$power$t1$a2.bin-powi.α2" ref="205.34.469"/>
//     <o as="is-int" base="is-int" level="3" loc="Φ.org.eolang.math.number$power$t1$a2.bin-powi.α3" ref="205.37.469"/>
//     <o as="is-nan" base="is-nan" level="3" loc="Φ.org.eolang.math.number$power$t1$a2.bin-powi.α4" ref="205.69.469"/>
//     <o as="is-infinite" base="is-infinite" level="3" loc="Φ.org.eolang.math.number$power$t1$a2.bin-powi.α5" ref="205.76.469"/>
//     <o as="as-float" base="as-float" level="3" loc="Φ.org.eolang.math.number$power$t1$a2.bin-powi.α6" ref="205.390.469"/>
//   </o>
//   <o base="number$power$t1$a2$bin-powf" cut="256" line="246" loc="Φ.org.eolang.math.number$power$t1$a2.bin-powf" name="bin-powf" pos="8" ref="246"> 
//     <o as="x" base="x" level="2" loc="Φ.org.eolang.math.number$power$t1$a2.bin-powf.α0" ref="205.198.469"/>
//     <o as="x-as-num" base="x-as-num" level="2" loc="Φ.org.eolang.math.number$power$t1$a2.bin-powf.α1" ref="205.202.469"/>
//     <o as="n" base="n" level="3" loc="Φ.org.eolang.math.number$power$t1$a2.bin-powf.α2" ref="205.34.469"/>
//     <o as="is-int" base="is-int" level="3" loc="Φ.org.eolang.math.number$power$t1$a2.bin-powf.α3" ref="205.37.469"/>
//     <o as="is-nan" base="is-nan" level="3" loc="Φ.org.eolang.math.number$power$t1$a2.bin-powf.α4" ref="205.69.469"/>
//     <o as="is-infinite" base="is-infinite" level="3" loc="Φ.org.eolang.math.number$power$t1$a2.bin-powf.α5" ref="205.76.469"/>
//     <o as="as-float" base="as-float" level="3" loc="Φ.org.eolang.math.number$power$t1$a2.bin-powf.α6" ref="205.390.469"/>
//   </o>
//   <o base="org.eolang.switch" line="273" loc="Φ.org.eolang.math.number$power$t1$a2.φ" name="@" pos="8"> 
//     <o base="org.eolang.tuple" data="tuple" line="274" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α0" pos="10"> 
//       <o base=".eq" line="275" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α0.α0" pos="22"> 
//         <o base="x-as-float" line="275" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α0.α0.ρ" pos="12" ref="206"/>
//         <o base="org.eolang.float" data="float" line="275" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α0.α0.α0" pos="26">0.0</o>
//       </o>
//       <o base=".if" line="276" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α0.α1" pos="12"> 
//         <o base="both-are-int" line="277" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α0.α1.ρ" pos="14" ref="222"/>
//         <o base="org.eolang.int" data="int" line="278" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α0.α1.α0" pos="14">1</o>
//         <o base="org.eolang.float" data="float" line="279" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α0.α1.α1" pos="14">1.0</o>
//       </o>
//     </o>
//     <o base="org.eolang.tuple" data="tuple" line="280" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α1" pos="10"> 
//       <o base=".lt" line="281" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α1.α0" pos="22"> 
//         <o base="x-as-float" line="281" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α1.α0.ρ" pos="12" ref="206"/>
//         <o base="org.eolang.float" data="float" line="281" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α1.α0.α0" pos="26">0.0</o>
//       </o>
//       <o base=".if" line="282" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α1.α1" pos="12"> 
//         <o base="self-is-zero" cut="2" line="283" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α1.α1.ρ" ref="283"/>
//         <o base="org.eolang.positive-infinity" line="284" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α1.α1.α0" pos="14"/>
//         <o base=".if" line="285" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α1.α1.α1" pos="14"> 
//           <o base="self-or-x-is-inf" cut="2" line="286" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α1.α1.α1.ρ" ref="286"/>
//           <o base="org.eolang.float" data="float" line="289" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α1.α1.α1.α0" pos="16">0.0</o>
//           <o base=".div" line="290" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α1.α1.α1.α1" pos="16"> 
//             <o base="org.eolang.float" data="float" line="291" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α1.α1.α1.α1.ρ" pos="18">1.0</o>
//             <o base="bin-powf" line="292" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α1.α1.α1.α1.α0" pos="18" ref="246"> 
//               <o base="self-as-float" line="293" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α1.α1.α1.α1.α0.α0" pos="20" ref="214"/>
//               <o base=".neg" line="294" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α1.α1.α1.α1.α0.α1" pos="20"> 
//                 <o base="x-as-float" line="295" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α1.α1.α1.α1.α0.α1.ρ" pos="22" ref="206"/>
//               </o>
//             </o>
//           </o>
//         </o>
//       </o>
//     </o>
//     <o base="org.eolang.tuple" data="tuple" line="296" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α2" pos="10"> 
//       <o base=".gt" line="297" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α2.α0" pos="22"> 
//         <o base="x-as-float" line="297" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α2.α0.ρ" pos="12" ref="206"/>
//         <o base="org.eolang.float" data="float" line="297" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α2.α0.α0" pos="26">0.0</o>
//       </o>
//       <o base=".if" line="298" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1" pos="12"> 
//         <o base="self-is-zero" line="299" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.ρ" pos="14" ref="283"/>
//         <o base=".if" line="300" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α0" pos="14"> 
//           <o base="both-are-int" line="301" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α0.ρ" pos="16" ref="222"/>
//           <o base="org.eolang.int" data="int" line="302" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α0.α0" pos="16">0</o>
//           <o base="org.eolang.float" data="float" line="303" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α0.α1" pos="16">0.0</o>
//         </o>
//         <o base="org.eolang.switch" line="304" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1" pos="14"> 
//           <o base="org.eolang.tuple" data="tuple" line="305" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α0" pos="16"> 
//             <o base=".and" line="306" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α0.α0" pos="18"> 
//               <o base=".lt" line="307" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α0.α0.ρ" pos="33"> 
//                 <o base="self-as-float" line="307" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α0.α0.ρ.ρ" pos="20" ref="214"/>
//                 <o base="org.eolang.float" data="float" line="307" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α0.α0.ρ.α0" pos="37">0.0</o>
//               </o>
//               <o base="x-is-inf" line="308" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α0.α0.α0" pos="20" ref="207"/>
//             </o>
//             <o base="org.eolang.nan" line="309" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α0.α1" pos="18"/>
//           </o>
//           <o base="org.eolang.tuple" data="tuple" line="310" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α1" pos="16"> 
//             <o base=".and" line="311" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α1.α0" pos="18"> 
//               <o base=".gt" line="312" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α1.α0.ρ" pos="33"> 
//                 <o base="self-as-float" line="312" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α1.α0.ρ.ρ" pos="20" ref="214"/>
//                 <o base="org.eolang.float" data="float" line="312" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α1.α0.ρ.α0" pos="37">0.0</o>
//               </o>
//               <o base="self-or-x-is-inf" line="313" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α1.α0.α0" pos="20" ref="286"/>
//             </o>
//             <o base="org.eolang.positive-infinity" line="314" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α1.α1" pos="18"/>
//           </o>
//           <o base="org.eolang.tuple" data="tuple" line="315" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α2" pos="16"> 
//             <o base=".and" line="316" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α2.α0" pos="18"> 
//               <o base=".eq" line="317" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α2.α0.ρ" pos="33"> 
//                 <o base="self-as-float" line="317" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α2.α0.ρ.ρ" pos="20" ref="214"/>
//                 <o base="org.eolang.negative-infinity" line="317" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α2.α0.ρ.α0" pos="37"/>
//               </o>
//               <o base=".not" line="318" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α2.α0.α0" pos="28"> 
//                 <o base="x-is-inf" line="318" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α2.α0.α0.ρ" pos="20" ref="207"/>
//               </o>
//             </o>
//             <o base=".if" line="319" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α2.α1" pos="18"> 
//               <o base=".not" line="320" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α2.α1.ρ" pos="28"> 
//                 <o base="x-is-int" line="320" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α2.α1.ρ.ρ" pos="20" ref="210"/>
//               </o>
//               <o base="org.eolang.positive-infinity" line="321" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α2.α1.α0" pos="20"/>
//               <o base=".if" line="322" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α2.α1.α1" pos="20"> 
//                 <o base=".eq" line="323" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α2.α1.α1.ρ" pos="22"> 
//                   <o base=".mod" line="324" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α2.α1.α1.ρ.ρ" pos="24"> 
//                     <o base="x-as-num" line="325" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α2.α1.α1.ρ.ρ.ρ" pos="26" ref="205.202.469"/>
//                     <o base="org.eolang.int" data="int" line="326" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α2.α1.α1.ρ.ρ.α0" pos="26">2</o>
//                   </o>
//                   <o base="org.eolang.int" data="int" line="327" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α2.α1.α1.ρ.α0" pos="24">0</o>
//                 </o>
//                 <o base="org.eolang.positive-infinity" line="328" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α2.α1.α1.α0" pos="22"/>
//                 <o base="org.eolang.negative-infinity" line="329" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α2.α1.α1.α1" pos="22"/>
//               </o>
//             </o>
//           </o>
//           <o base="org.eolang.tuple" data="tuple" line="330" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α3" pos="16"> 
//             <o base="org.eolang.bool" data="bool" line="331" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α3.α0" pos="18">TRUE</o>
//             <o base=".if" line="332" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α3.α1" pos="18"> 
//               <o base="both-are-int" line="333" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α3.α1.ρ" pos="20" ref="222"/>
//               <o base="bin-powi" line="334" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α3.α1.α0" pos="20" ref="226"> 
//                 <o base="value" line="334" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α3.α1.α0.α0" pos="29" ref="216"/>
//                 <o base="x" line="334" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α3.α1.α0.α1" pos="35" ref="205.198.469"/>
//               </o>
//               <o base="bin-powf" line="335" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α3.α1.α1" pos="20" ref="246"> 
//                 <o base="self-as-float" line="335" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α3.α1.α1.α0" pos="29" ref="214"/>
//                 <o base="x-as-float" line="335" loc="Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α3.α1.α1.α1" pos="43" ref="206"/>
//               </o>
//             </o>
//           </o>
//         </o>
//       </o>
//     </o>
//   </o>
//   <o base=".is-infinite" const="" line="207" loc="Φ.org.eolang.math.number$power$t1$a2.x-is-inf" name="x-is-inf" pos="18"> 
//     <o base="x-as-num" line="207" loc="Φ.org.eolang.math.number$power$t1$a2.x-is-inf.ρ" pos="10" ref="205.202.469"/>
//   </o>
//   <o base=".is-int" const="" line="210" loc="Φ.org.eolang.math.number$power$t1$a2.x-is-int" name="x-is-int" pos="20"> 
//     <o base="x-as-num" line="210" loc="Φ.org.eolang.math.number$power$t1$a2.x-is-int.ρ" pos="12" ref="205.202.469"/>
//   </o>
//   <o base="is-infinite" const="" line="215" loc="Φ.org.eolang.math.number$power$t1$a2.self-is-inf" name="self-is-inf" pos="10" ref="205.76.469"/>
//   <o base=".n" const="" line="216" loc="Φ.org.eolang.math.number$power$t1$a2.value" name="value" pos="13"> 
//     <o base=".^" line="216" loc="Φ.org.eolang.math.number$power$t1$a2.value.ρ" pos="11"> 
//       <o base="^" line="216" loc="Φ.org.eolang.math.number$power$t1$a2.value.ρ.ρ" pos="10"/>
//     </o>
//   </o>
//   <o base="is-int" const="" line="218" loc="Φ.org.eolang.math.number$power$t1$a2.self-is-int" name="self-is-int" pos="12" ref="205.37.469"/>
//   <o base=".eq" const="" line="283" loc="Φ.org.eolang.math.number$power$t1$a2.self-is-zero" name="self-is-zero" pos="27"> 
//     <o base="self-as-float" line="283" loc="Φ.org.eolang.math.number$power$t1$a2.self-is-zero.ρ" pos="14" ref="214"/>
//     <o base="org.eolang.float" data="float" line="283" loc="Φ.org.eolang.math.number$power$t1$a2.self-is-zero.α0" pos="31">0.0</o>
//   </o>
//   <o base=".or" const="" line="286" loc="Φ.org.eolang.math.number$power$t1$a2.self-or-x-is-inf" name="self-or-x-is-inf" pos="16"> 
//     <o base="self-is-inf" line="287" loc="Φ.org.eolang.math.number$power$t1$a2.self-or-x-is-inf.ρ" pos="18" ref="215"/>
//     <o base="x-is-inf" line="288" loc="Φ.org.eolang.math.number$power$t1$a2.self-or-x-is-inf.α0" pos="18" ref="207"/>
//   </o>
//   <o level="1" line="205.198.469" loc="Φ.org.eolang.math.number$power$t1$a2.x" name="x"/>
//   <o level="1" line="205.202.469" loc="Φ.org.eolang.math.number$power$t1$a2.x-as-num" name="x-as-num"/>
//   <o level="2" line="205.34.469" loc="Φ.org.eolang.math.number$power$t1$a2.n" name="n"/>
//   <o level="2" line="205.37.469" loc="Φ.org.eolang.math.number$power$t1$a2.is-int" name="is-int"/>
//   <o level="2" line="205.69.469" loc="Φ.org.eolang.math.number$power$t1$a2.is-nan" name="is-nan"/>
//   <o level="2" line="205.76.469" loc="Φ.org.eolang.math.number$power$t1$a2.is-infinite" name="is-infinite"/>
//   <o level="2" line="205.390.469" loc="Φ.org.eolang.math.number$power$t1$a2.as-float" name="as-float"/>
// </o>
@XmirObject(name = "number$power$t1$a2", oname = "number$power$t1$a2", source = "/home/tardis3/eo/eo-runtime/target/eo-test/3-pull/org/eolang/math/number.eo")
public final class EOnumber$EOpower$EOt1$EOa2 extends PhDefault {
  public EOnumber$EOpower$EOt1$EOa2(final Phi sigma) {
    super(sigma);
    this.add("x-as-float", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = new PhMethod(rho, "x-is-inf");
      Phi ret = new PhMethod(ret_base, "if");
        ret = new PhLocated(ret, 206, 8, "Φ.org.eolang.math.number$power$t1$a2.x-as-float");
      ret = new PhCopy(ret);
        Phi ret_1 = new PhMethod(new PhMethod(rho, "σ"), "x");
          ret_1 = new PhLocated(ret_1, 208, 10, "Φ.org.eolang.math.number$power$t1$a2.x-as-float.α0");
        Phi ret_2_base = new PhMethod(rho, "x-is-int");
        Phi ret_2 = new PhMethod(ret_2_base, "if");
          ret_2 = new PhLocated(ret_2, 209, 10, "Φ.org.eolang.math.number$power$t1$a2.x-as-float.α1");
        ret_2 = new PhCopy(ret_2);
          Phi ret_2_1_base = new PhMethod(new PhMethod(rho, "σ"), "x-as-num");
            ret_2_1_base = new PhLocated(ret_2_1_base, 211, 12, "Φ.org.eolang.math.number$power$t1$a2.x-as-float.α1.α0.ρ");
          Phi ret_2_1 = new PhMethod(ret_2_1_base, "as-float");
            ret_2_1 = new PhLocated(ret_2_1, 211, 20, "Φ.org.eolang.math.number$power$t1$a2.x-as-float.α1.α0");
          Phi ret_2_2 = new PhMethod(new PhMethod(rho, "σ"), "x");
            ret_2_2 = new PhLocated(ret_2_2, 212, 12, "Φ.org.eolang.math.number$power$t1$a2.x-as-float.α1.α1");
          ret_2 = new PhWith(ret_2, 0, ret_2_1);
          ret_2 = new PhWith(ret_2, 1, ret_2_2);
        ret = new PhWith(ret, 0, ret_1);
        ret = new PhWith(ret, 1, ret_2);
      ret = new PhConst(ret);
      return ret;
    })));
    this.add("self-as-float", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = new PhMethod(rho, "self-is-inf");
      Phi ret = new PhMethod(ret_base, "if");
        ret = new PhLocated(ret, 214, 8, "Φ.org.eolang.math.number$power$t1$a2.self-as-float");
      ret = new PhCopy(ret);
        Phi ret_1 = new PhMethod(rho, "value");
        Phi ret_2_base = new PhMethod(rho, "self-is-int");
        Phi ret_2 = new PhMethod(ret_2_base, "if");
          ret_2 = new PhLocated(ret_2, 217, 10, "Φ.org.eolang.math.number$power$t1$a2.self-as-float.α1");
        ret_2 = new PhCopy(ret_2);
          Phi ret_2_1 = new PhMethod(new PhMethod(new PhMethod(rho, "σ"), "σ"), "as-float");
            ret_2_1 = new PhLocated(ret_2_1, 219, 12, "Φ.org.eolang.math.number$power$t1$a2.self-as-float.α1.α0");
          Phi ret_2_2 = new PhMethod(rho, "value");
            ret_2_2 = new PhLocated(ret_2_2, 220, 12, "Φ.org.eolang.math.number$power$t1$a2.self-as-float.α1.α1");
          ret_2 = new PhWith(ret_2, 0, ret_2_1);
          ret_2 = new PhWith(ret_2, 1, ret_2_2);
        ret = new PhWith(ret, 0, ret_1);
        ret = new PhWith(ret, 1, ret_2);
      ret = new PhConst(ret);
      return ret;
    })));
    this.add("both-are-int", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = new PhMethod(rho, "x-is-int");
        ret_base = new PhLocated(ret_base, 223, 10, "Φ.org.eolang.math.number$power$t1$a2.both-are-int.ρ");
      Phi ret = new PhMethod(ret_base, "and");
        ret = new PhLocated(ret, 222, 8, "Φ.org.eolang.math.number$power$t1$a2.both-are-int");
      ret = new PhCopy(ret);
        Phi ret_1 = new PhMethod(rho, "self-is-int");
          ret_1 = new PhLocated(ret_1, 224, 10, "Φ.org.eolang.math.number$power$t1$a2.both-are-int.α0");
        ret = new PhWith(ret, 0, ret_1);
      ret = new PhConst(ret);
      return ret;
    })));
    this.add("bin-powi", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new EOnumber$EOpower$EOt1$EOa2$EObin_powi(rho);
        ret = new PhLocated(ret, 226, 8, "Φ.org.eolang.math.number$power$t1$a2.bin-powi");
      return ret;
    })));
    this.add("bin-powf", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new EOnumber$EOpower$EOt1$EOa2$EObin_powf(rho);
        ret = new PhLocated(ret, 246, 8, "Φ.org.eolang.math.number$power$t1$a2.bin-powf");
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("switch").get();
        ret = new PhLocated(ret, 273, 8, "Φ.org.eolang.math.number$power$t1$a2.φ");
      ret = new PhCopy(ret);
        Phi ret_1 = Phi.Φ.attr("org").get().attr("eolang").get().attr("tuple").get();
          ret_1 = new PhLocated(ret_1, 274, 10, "Φ.org.eolang.math.number$power$t1$a2.φ.α0");
          Phi[] ret_1_a = new Phi[2];
          Phi ret_1_a0_base = new PhMethod(rho, "x-as-float");
            ret_1_a0_base = new PhLocated(ret_1_a0_base, 275, 12, "Φ.org.eolang.math.number$power$t1$a2.φ.α0.α0.ρ");
          Phi ret_1_a0 = new PhMethod(ret_1_a0_base, "eq");
            ret_1_a0 = new PhLocated(ret_1_a0, 275, 22, "Φ.org.eolang.math.number$power$t1$a2.φ.α0.α0");
          ret_1_a0 = new PhCopy(ret_1_a0);
            Phi ret_1_a0_1 = new EOorg.EOeolang.EOfloat(Phi.Φ);
              ret_1_a0_1 = new PhLocated(ret_1_a0_1, 275, 26, "Φ.org.eolang.math.number$power$t1$a2.φ.α0.α0.α0");
              ret_1_a0_1 = new PhWith(ret_1_a0_1, "Δ", new Data.Value<>(0.0d));
            ret_1_a0 = new PhWith(ret_1_a0, 0, ret_1_a0_1);
          ret_1_a[0] = ret_1_a0;
          Phi ret_1_a1_base = new PhMethod(rho, "both-are-int");
            ret_1_a1_base = new PhLocated(ret_1_a1_base, 277, 14, "Φ.org.eolang.math.number$power$t1$a2.φ.α0.α1.ρ");
          Phi ret_1_a1 = new PhMethod(ret_1_a1_base, "if");
            ret_1_a1 = new PhLocated(ret_1_a1, 276, 12, "Φ.org.eolang.math.number$power$t1$a2.φ.α0.α1");
          ret_1_a1 = new PhCopy(ret_1_a1);
            Phi ret_1_a1_1 = new EOorg.EOeolang.EOint(Phi.Φ);
              ret_1_a1_1 = new PhLocated(ret_1_a1_1, 278, 14, "Φ.org.eolang.math.number$power$t1$a2.φ.α0.α1.α0");
              ret_1_a1_1 = new PhWith(ret_1_a1_1, "Δ", new Data.Value<>(1L));
            Phi ret_1_a1_2 = new EOorg.EOeolang.EOfloat(Phi.Φ);
              ret_1_a1_2 = new PhLocated(ret_1_a1_2, 279, 14, "Φ.org.eolang.math.number$power$t1$a2.φ.α0.α1.α1");
              ret_1_a1_2 = new PhWith(ret_1_a1_2, "Δ", new Data.Value<>(1.0d));
            ret_1_a1 = new PhWith(ret_1_a1, 0, ret_1_a1_1);
            ret_1_a1 = new PhWith(ret_1_a1, 1, ret_1_a1_2);
          ret_1_a[1] = ret_1_a1;
          ret_1 = new PhWith(new PhCopy(ret_1), "Δ", new Data.Value<Phi[]>(ret_1_a));
        Phi ret_2 = Phi.Φ.attr("org").get().attr("eolang").get().attr("tuple").get();
          ret_2 = new PhLocated(ret_2, 280, 10, "Φ.org.eolang.math.number$power$t1$a2.φ.α1");
          Phi[] ret_2_a = new Phi[2];
          Phi ret_2_a0_base = new PhMethod(rho, "x-as-float");
            ret_2_a0_base = new PhLocated(ret_2_a0_base, 281, 12, "Φ.org.eolang.math.number$power$t1$a2.φ.α1.α0.ρ");
          Phi ret_2_a0 = new PhMethod(ret_2_a0_base, "lt");
            ret_2_a0 = new PhLocated(ret_2_a0, 281, 22, "Φ.org.eolang.math.number$power$t1$a2.φ.α1.α0");
          ret_2_a0 = new PhCopy(ret_2_a0);
            Phi ret_2_a0_1 = new EOorg.EOeolang.EOfloat(Phi.Φ);
              ret_2_a0_1 = new PhLocated(ret_2_a0_1, 281, 26, "Φ.org.eolang.math.number$power$t1$a2.φ.α1.α0.α0");
              ret_2_a0_1 = new PhWith(ret_2_a0_1, "Δ", new Data.Value<>(0.0d));
            ret_2_a0 = new PhWith(ret_2_a0, 0, ret_2_a0_1);
          ret_2_a[0] = ret_2_a0;
          Phi ret_2_a1_base = new PhMethod(rho, "self-is-zero");
          Phi ret_2_a1 = new PhMethod(ret_2_a1_base, "if");
            ret_2_a1 = new PhLocated(ret_2_a1, 282, 12, "Φ.org.eolang.math.number$power$t1$a2.φ.α1.α1");
          ret_2_a1 = new PhCopy(ret_2_a1);
            Phi ret_2_a1_1 = Phi.Φ.attr("org").get().attr("eolang").get().attr("positive-infinity").get();
              ret_2_a1_1 = new PhLocated(ret_2_a1_1, 284, 14, "Φ.org.eolang.math.number$power$t1$a2.φ.α1.α1.α0");
            Phi ret_2_a1_2_base = new PhMethod(rho, "self-or-x-is-inf");
            Phi ret_2_a1_2 = new PhMethod(ret_2_a1_2_base, "if");
              ret_2_a1_2 = new PhLocated(ret_2_a1_2, 285, 14, "Φ.org.eolang.math.number$power$t1$a2.φ.α1.α1.α1");
            ret_2_a1_2 = new PhCopy(ret_2_a1_2);
              Phi ret_2_a1_2_1 = new EOorg.EOeolang.EOfloat(Phi.Φ);
                ret_2_a1_2_1 = new PhLocated(ret_2_a1_2_1, 289, 16, "Φ.org.eolang.math.number$power$t1$a2.φ.α1.α1.α1.α0");
                ret_2_a1_2_1 = new PhWith(ret_2_a1_2_1, "Δ", new Data.Value<>(0.0d));
              Phi ret_2_a1_2_2_base = new EOorg.EOeolang.EOfloat(Phi.Φ);
                ret_2_a1_2_2_base = new PhLocated(ret_2_a1_2_2_base, 291, 18, "Φ.org.eolang.math.number$power$t1$a2.φ.α1.α1.α1.α1.ρ");
                ret_2_a1_2_2_base = new PhWith(ret_2_a1_2_2_base, "Δ", new Data.Value<>(1.0d));
              Phi ret_2_a1_2_2 = new PhMethod(ret_2_a1_2_2_base, "div");
                ret_2_a1_2_2 = new PhLocated(ret_2_a1_2_2, 290, 16, "Φ.org.eolang.math.number$power$t1$a2.φ.α1.α1.α1.α1");
              ret_2_a1_2_2 = new PhCopy(ret_2_a1_2_2);
                Phi ret_2_a1_2_2_1 = new PhMethod(rho, "bin-powf");
                  ret_2_a1_2_2_1 = new PhLocated(ret_2_a1_2_2_1, 292, 18, "Φ.org.eolang.math.number$power$t1$a2.φ.α1.α1.α1.α1.α0");
                ret_2_a1_2_2_1 = new PhCopy(ret_2_a1_2_2_1);
                  Phi ret_2_a1_2_2_1_1 = new PhMethod(rho, "self-as-float");
                    ret_2_a1_2_2_1_1 = new PhLocated(ret_2_a1_2_2_1_1, 293, 20, "Φ.org.eolang.math.number$power$t1$a2.φ.α1.α1.α1.α1.α0.α0");
                  Phi ret_2_a1_2_2_1_2_base = new PhMethod(rho, "x-as-float");
                    ret_2_a1_2_2_1_2_base = new PhLocated(ret_2_a1_2_2_1_2_base, 295, 22, "Φ.org.eolang.math.number$power$t1$a2.φ.α1.α1.α1.α1.α0.α1.ρ");
                  Phi ret_2_a1_2_2_1_2 = new PhMethod(ret_2_a1_2_2_1_2_base, "neg");
                    ret_2_a1_2_2_1_2 = new PhLocated(ret_2_a1_2_2_1_2, 294, 20, "Φ.org.eolang.math.number$power$t1$a2.φ.α1.α1.α1.α1.α0.α1");
                  ret_2_a1_2_2_1 = new PhWith(ret_2_a1_2_2_1, 0, ret_2_a1_2_2_1_1);
                  ret_2_a1_2_2_1 = new PhWith(ret_2_a1_2_2_1, 1, ret_2_a1_2_2_1_2);
                ret_2_a1_2_2 = new PhWith(ret_2_a1_2_2, 0, ret_2_a1_2_2_1);
              ret_2_a1_2 = new PhWith(ret_2_a1_2, 0, ret_2_a1_2_1);
              ret_2_a1_2 = new PhWith(ret_2_a1_2, 1, ret_2_a1_2_2);
            ret_2_a1 = new PhWith(ret_2_a1, 0, ret_2_a1_1);
            ret_2_a1 = new PhWith(ret_2_a1, 1, ret_2_a1_2);
          ret_2_a[1] = ret_2_a1;
          ret_2 = new PhWith(new PhCopy(ret_2), "Δ", new Data.Value<Phi[]>(ret_2_a));
        Phi ret_3 = Phi.Φ.attr("org").get().attr("eolang").get().attr("tuple").get();
          ret_3 = new PhLocated(ret_3, 296, 10, "Φ.org.eolang.math.number$power$t1$a2.φ.α2");
          Phi[] ret_3_a = new Phi[2];
          Phi ret_3_a0_base = new PhMethod(rho, "x-as-float");
            ret_3_a0_base = new PhLocated(ret_3_a0_base, 297, 12, "Φ.org.eolang.math.number$power$t1$a2.φ.α2.α0.ρ");
          Phi ret_3_a0 = new PhMethod(ret_3_a0_base, "gt");
            ret_3_a0 = new PhLocated(ret_3_a0, 297, 22, "Φ.org.eolang.math.number$power$t1$a2.φ.α2.α0");
          ret_3_a0 = new PhCopy(ret_3_a0);
            Phi ret_3_a0_1 = new EOorg.EOeolang.EOfloat(Phi.Φ);
              ret_3_a0_1 = new PhLocated(ret_3_a0_1, 297, 26, "Φ.org.eolang.math.number$power$t1$a2.φ.α2.α0.α0");
              ret_3_a0_1 = new PhWith(ret_3_a0_1, "Δ", new Data.Value<>(0.0d));
            ret_3_a0 = new PhWith(ret_3_a0, 0, ret_3_a0_1);
          ret_3_a[0] = ret_3_a0;
          Phi ret_3_a1_base = new PhMethod(rho, "self-is-zero");
            ret_3_a1_base = new PhLocated(ret_3_a1_base, 299, 14, "Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.ρ");
          Phi ret_3_a1 = new PhMethod(ret_3_a1_base, "if");
            ret_3_a1 = new PhLocated(ret_3_a1, 298, 12, "Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1");
          ret_3_a1 = new PhCopy(ret_3_a1);
            Phi ret_3_a1_1_base = new PhMethod(rho, "both-are-int");
              ret_3_a1_1_base = new PhLocated(ret_3_a1_1_base, 301, 16, "Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α0.ρ");
            Phi ret_3_a1_1 = new PhMethod(ret_3_a1_1_base, "if");
              ret_3_a1_1 = new PhLocated(ret_3_a1_1, 300, 14, "Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α0");
            ret_3_a1_1 = new PhCopy(ret_3_a1_1);
              Phi ret_3_a1_1_1 = new EOorg.EOeolang.EOint(Phi.Φ);
                ret_3_a1_1_1 = new PhLocated(ret_3_a1_1_1, 302, 16, "Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α0.α0");
                ret_3_a1_1_1 = new PhWith(ret_3_a1_1_1, "Δ", new Data.Value<>(0L));
              Phi ret_3_a1_1_2 = new EOorg.EOeolang.EOfloat(Phi.Φ);
                ret_3_a1_1_2 = new PhLocated(ret_3_a1_1_2, 303, 16, "Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α0.α1");
                ret_3_a1_1_2 = new PhWith(ret_3_a1_1_2, "Δ", new Data.Value<>(0.0d));
              ret_3_a1_1 = new PhWith(ret_3_a1_1, 0, ret_3_a1_1_1);
              ret_3_a1_1 = new PhWith(ret_3_a1_1, 1, ret_3_a1_1_2);
            Phi ret_3_a1_2 = Phi.Φ.attr("org").get().attr("eolang").get().attr("switch").get();
              ret_3_a1_2 = new PhLocated(ret_3_a1_2, 304, 14, "Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1");
            ret_3_a1_2 = new PhCopy(ret_3_a1_2);
              Phi ret_3_a1_2_1 = Phi.Φ.attr("org").get().attr("eolang").get().attr("tuple").get();
                ret_3_a1_2_1 = new PhLocated(ret_3_a1_2_1, 305, 16, "Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α0");
                Phi[] ret_3_a1_2_1_a = new Phi[2];
                Phi ret_3_a1_2_1_a0_base_base = new PhMethod(rho, "self-as-float");
                  ret_3_a1_2_1_a0_base_base = new PhLocated(ret_3_a1_2_1_a0_base_base, 307, 20, "Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α0.α0.ρ.ρ");
                Phi ret_3_a1_2_1_a0_base = new PhMethod(ret_3_a1_2_1_a0_base_base, "lt");
                  ret_3_a1_2_1_a0_base = new PhLocated(ret_3_a1_2_1_a0_base, 307, 33, "Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α0.α0.ρ");
                ret_3_a1_2_1_a0_base = new PhCopy(ret_3_a1_2_1_a0_base);
                  Phi ret_3_a1_2_1_a0_base_1 = new EOorg.EOeolang.EOfloat(Phi.Φ);
                    ret_3_a1_2_1_a0_base_1 = new PhLocated(ret_3_a1_2_1_a0_base_1, 307, 37, "Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α0.α0.ρ.α0");
                    ret_3_a1_2_1_a0_base_1 = new PhWith(ret_3_a1_2_1_a0_base_1, "Δ", new Data.Value<>(0.0d));
                  ret_3_a1_2_1_a0_base = new PhWith(ret_3_a1_2_1_a0_base, 0, ret_3_a1_2_1_a0_base_1);
                Phi ret_3_a1_2_1_a0 = new PhMethod(ret_3_a1_2_1_a0_base, "and");
                  ret_3_a1_2_1_a0 = new PhLocated(ret_3_a1_2_1_a0, 306, 18, "Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α0.α0");
                ret_3_a1_2_1_a0 = new PhCopy(ret_3_a1_2_1_a0);
                  Phi ret_3_a1_2_1_a0_1 = new PhMethod(rho, "x-is-inf");
                    ret_3_a1_2_1_a0_1 = new PhLocated(ret_3_a1_2_1_a0_1, 308, 20, "Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α0.α0.α0");
                  ret_3_a1_2_1_a0 = new PhWith(ret_3_a1_2_1_a0, 0, ret_3_a1_2_1_a0_1);
                ret_3_a1_2_1_a[0] = ret_3_a1_2_1_a0;
                Phi ret_3_a1_2_1_a1 = Phi.Φ.attr("org").get().attr("eolang").get().attr("nan").get();
                  ret_3_a1_2_1_a1 = new PhLocated(ret_3_a1_2_1_a1, 309, 18, "Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α0.α1");
                ret_3_a1_2_1_a[1] = ret_3_a1_2_1_a1;
                ret_3_a1_2_1 = new PhWith(new PhCopy(ret_3_a1_2_1), "Δ", new Data.Value<Phi[]>(ret_3_a1_2_1_a));
              Phi ret_3_a1_2_2 = Phi.Φ.attr("org").get().attr("eolang").get().attr("tuple").get();
                ret_3_a1_2_2 = new PhLocated(ret_3_a1_2_2, 310, 16, "Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α1");
                Phi[] ret_3_a1_2_2_a = new Phi[2];
                Phi ret_3_a1_2_2_a0_base_base = new PhMethod(rho, "self-as-float");
                  ret_3_a1_2_2_a0_base_base = new PhLocated(ret_3_a1_2_2_a0_base_base, 312, 20, "Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α1.α0.ρ.ρ");
                Phi ret_3_a1_2_2_a0_base = new PhMethod(ret_3_a1_2_2_a0_base_base, "gt");
                  ret_3_a1_2_2_a0_base = new PhLocated(ret_3_a1_2_2_a0_base, 312, 33, "Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α1.α0.ρ");
                ret_3_a1_2_2_a0_base = new PhCopy(ret_3_a1_2_2_a0_base);
                  Phi ret_3_a1_2_2_a0_base_1 = new EOorg.EOeolang.EOfloat(Phi.Φ);
                    ret_3_a1_2_2_a0_base_1 = new PhLocated(ret_3_a1_2_2_a0_base_1, 312, 37, "Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α1.α0.ρ.α0");
                    ret_3_a1_2_2_a0_base_1 = new PhWith(ret_3_a1_2_2_a0_base_1, "Δ", new Data.Value<>(0.0d));
                  ret_3_a1_2_2_a0_base = new PhWith(ret_3_a1_2_2_a0_base, 0, ret_3_a1_2_2_a0_base_1);
                Phi ret_3_a1_2_2_a0 = new PhMethod(ret_3_a1_2_2_a0_base, "and");
                  ret_3_a1_2_2_a0 = new PhLocated(ret_3_a1_2_2_a0, 311, 18, "Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α1.α0");
                ret_3_a1_2_2_a0 = new PhCopy(ret_3_a1_2_2_a0);
                  Phi ret_3_a1_2_2_a0_1 = new PhMethod(rho, "self-or-x-is-inf");
                    ret_3_a1_2_2_a0_1 = new PhLocated(ret_3_a1_2_2_a0_1, 313, 20, "Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α1.α0.α0");
                  ret_3_a1_2_2_a0 = new PhWith(ret_3_a1_2_2_a0, 0, ret_3_a1_2_2_a0_1);
                ret_3_a1_2_2_a[0] = ret_3_a1_2_2_a0;
                Phi ret_3_a1_2_2_a1 = Phi.Φ.attr("org").get().attr("eolang").get().attr("positive-infinity").get();
                  ret_3_a1_2_2_a1 = new PhLocated(ret_3_a1_2_2_a1, 314, 18, "Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α1.α1");
                ret_3_a1_2_2_a[1] = ret_3_a1_2_2_a1;
                ret_3_a1_2_2 = new PhWith(new PhCopy(ret_3_a1_2_2), "Δ", new Data.Value<Phi[]>(ret_3_a1_2_2_a));
              Phi ret_3_a1_2_3 = Phi.Φ.attr("org").get().attr("eolang").get().attr("tuple").get();
                ret_3_a1_2_3 = new PhLocated(ret_3_a1_2_3, 315, 16, "Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α2");
                Phi[] ret_3_a1_2_3_a = new Phi[2];
                Phi ret_3_a1_2_3_a0_base_base = new PhMethod(rho, "self-as-float");
                  ret_3_a1_2_3_a0_base_base = new PhLocated(ret_3_a1_2_3_a0_base_base, 317, 20, "Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α2.α0.ρ.ρ");
                Phi ret_3_a1_2_3_a0_base = new PhMethod(ret_3_a1_2_3_a0_base_base, "eq");
                  ret_3_a1_2_3_a0_base = new PhLocated(ret_3_a1_2_3_a0_base, 317, 33, "Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α2.α0.ρ");
                ret_3_a1_2_3_a0_base = new PhCopy(ret_3_a1_2_3_a0_base);
                  Phi ret_3_a1_2_3_a0_base_1 = Phi.Φ.attr("org").get().attr("eolang").get().attr("negative-infinity").get();
                    ret_3_a1_2_3_a0_base_1 = new PhLocated(ret_3_a1_2_3_a0_base_1, 317, 37, "Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α2.α0.ρ.α0");
                  ret_3_a1_2_3_a0_base = new PhWith(ret_3_a1_2_3_a0_base, 0, ret_3_a1_2_3_a0_base_1);
                Phi ret_3_a1_2_3_a0 = new PhMethod(ret_3_a1_2_3_a0_base, "and");
                  ret_3_a1_2_3_a0 = new PhLocated(ret_3_a1_2_3_a0, 316, 18, "Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α2.α0");
                ret_3_a1_2_3_a0 = new PhCopy(ret_3_a1_2_3_a0);
                  Phi ret_3_a1_2_3_a0_1_base = new PhMethod(rho, "x-is-inf");
                    ret_3_a1_2_3_a0_1_base = new PhLocated(ret_3_a1_2_3_a0_1_base, 318, 20, "Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α2.α0.α0.ρ");
                  Phi ret_3_a1_2_3_a0_1 = new PhMethod(ret_3_a1_2_3_a0_1_base, "not");
                    ret_3_a1_2_3_a0_1 = new PhLocated(ret_3_a1_2_3_a0_1, 318, 28, "Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α2.α0.α0");
                  ret_3_a1_2_3_a0 = new PhWith(ret_3_a1_2_3_a0, 0, ret_3_a1_2_3_a0_1);
                ret_3_a1_2_3_a[0] = ret_3_a1_2_3_a0;
                Phi ret_3_a1_2_3_a1_base_base = new PhMethod(rho, "x-is-int");
                  ret_3_a1_2_3_a1_base_base = new PhLocated(ret_3_a1_2_3_a1_base_base, 320, 20, "Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α2.α1.ρ.ρ");
                Phi ret_3_a1_2_3_a1_base = new PhMethod(ret_3_a1_2_3_a1_base_base, "not");
                  ret_3_a1_2_3_a1_base = new PhLocated(ret_3_a1_2_3_a1_base, 320, 28, "Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α2.α1.ρ");
                Phi ret_3_a1_2_3_a1 = new PhMethod(ret_3_a1_2_3_a1_base, "if");
                  ret_3_a1_2_3_a1 = new PhLocated(ret_3_a1_2_3_a1, 319, 18, "Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α2.α1");
                ret_3_a1_2_3_a1 = new PhCopy(ret_3_a1_2_3_a1);
                  Phi ret_3_a1_2_3_a1_1 = Phi.Φ.attr("org").get().attr("eolang").get().attr("positive-infinity").get();
                    ret_3_a1_2_3_a1_1 = new PhLocated(ret_3_a1_2_3_a1_1, 321, 20, "Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α2.α1.α0");
                  Phi ret_3_a1_2_3_a1_2_base_base_base = new PhMethod(new PhMethod(rho, "σ"), "x-as-num");
                    ret_3_a1_2_3_a1_2_base_base_base = new PhLocated(ret_3_a1_2_3_a1_2_base_base_base, 325, 26, "Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α2.α1.α1.ρ.ρ.ρ");
                  Phi ret_3_a1_2_3_a1_2_base_base = new PhMethod(ret_3_a1_2_3_a1_2_base_base_base, "mod");
                    ret_3_a1_2_3_a1_2_base_base = new PhLocated(ret_3_a1_2_3_a1_2_base_base, 324, 24, "Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α2.α1.α1.ρ.ρ");
                  ret_3_a1_2_3_a1_2_base_base = new PhCopy(ret_3_a1_2_3_a1_2_base_base);
                    Phi ret_3_a1_2_3_a1_2_base_base_1 = new EOorg.EOeolang.EOint(Phi.Φ);
                      ret_3_a1_2_3_a1_2_base_base_1 = new PhLocated(ret_3_a1_2_3_a1_2_base_base_1, 326, 26, "Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α2.α1.α1.ρ.ρ.α0");
                      ret_3_a1_2_3_a1_2_base_base_1 = new PhWith(ret_3_a1_2_3_a1_2_base_base_1, "Δ", new Data.Value<>(2L));
                    ret_3_a1_2_3_a1_2_base_base = new PhWith(ret_3_a1_2_3_a1_2_base_base, 0, ret_3_a1_2_3_a1_2_base_base_1);
                  Phi ret_3_a1_2_3_a1_2_base = new PhMethod(ret_3_a1_2_3_a1_2_base_base, "eq");
                    ret_3_a1_2_3_a1_2_base = new PhLocated(ret_3_a1_2_3_a1_2_base, 323, 22, "Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α2.α1.α1.ρ");
                  ret_3_a1_2_3_a1_2_base = new PhCopy(ret_3_a1_2_3_a1_2_base);
                    Phi ret_3_a1_2_3_a1_2_base_1 = new EOorg.EOeolang.EOint(Phi.Φ);
                      ret_3_a1_2_3_a1_2_base_1 = new PhLocated(ret_3_a1_2_3_a1_2_base_1, 327, 24, "Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α2.α1.α1.ρ.α0");
                      ret_3_a1_2_3_a1_2_base_1 = new PhWith(ret_3_a1_2_3_a1_2_base_1, "Δ", new Data.Value<>(0L));
                    ret_3_a1_2_3_a1_2_base = new PhWith(ret_3_a1_2_3_a1_2_base, 0, ret_3_a1_2_3_a1_2_base_1);
                  Phi ret_3_a1_2_3_a1_2 = new PhMethod(ret_3_a1_2_3_a1_2_base, "if");
                    ret_3_a1_2_3_a1_2 = new PhLocated(ret_3_a1_2_3_a1_2, 322, 20, "Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α2.α1.α1");
                  ret_3_a1_2_3_a1_2 = new PhCopy(ret_3_a1_2_3_a1_2);
                    Phi ret_3_a1_2_3_a1_2_1 = Phi.Φ.attr("org").get().attr("eolang").get().attr("positive-infinity").get();
                      ret_3_a1_2_3_a1_2_1 = new PhLocated(ret_3_a1_2_3_a1_2_1, 328, 22, "Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α2.α1.α1.α0");
                    Phi ret_3_a1_2_3_a1_2_2 = Phi.Φ.attr("org").get().attr("eolang").get().attr("negative-infinity").get();
                      ret_3_a1_2_3_a1_2_2 = new PhLocated(ret_3_a1_2_3_a1_2_2, 329, 22, "Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α2.α1.α1.α1");
                    ret_3_a1_2_3_a1_2 = new PhWith(ret_3_a1_2_3_a1_2, 0, ret_3_a1_2_3_a1_2_1);
                    ret_3_a1_2_3_a1_2 = new PhWith(ret_3_a1_2_3_a1_2, 1, ret_3_a1_2_3_a1_2_2);
                  ret_3_a1_2_3_a1 = new PhWith(ret_3_a1_2_3_a1, 0, ret_3_a1_2_3_a1_1);
                  ret_3_a1_2_3_a1 = new PhWith(ret_3_a1_2_3_a1, 1, ret_3_a1_2_3_a1_2);
                ret_3_a1_2_3_a[1] = ret_3_a1_2_3_a1;
                ret_3_a1_2_3 = new PhWith(new PhCopy(ret_3_a1_2_3), "Δ", new Data.Value<Phi[]>(ret_3_a1_2_3_a));
              Phi ret_3_a1_2_4 = Phi.Φ.attr("org").get().attr("eolang").get().attr("tuple").get();
                ret_3_a1_2_4 = new PhLocated(ret_3_a1_2_4, 330, 16, "Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α3");
                Phi[] ret_3_a1_2_4_a = new Phi[2];
                Phi ret_3_a1_2_4_a0 = new EOorg.EOeolang.EObool(Phi.Φ);
                  ret_3_a1_2_4_a0 = new PhLocated(ret_3_a1_2_4_a0, 331, 18, "Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α3.α0");
                  ret_3_a1_2_4_a0 = new PhWith(ret_3_a1_2_4_a0, "Δ", new Data.Value<>(Boolean.TRUE));
                ret_3_a1_2_4_a[0] = ret_3_a1_2_4_a0;
                Phi ret_3_a1_2_4_a1_base = new PhMethod(rho, "both-are-int");
                  ret_3_a1_2_4_a1_base = new PhLocated(ret_3_a1_2_4_a1_base, 333, 20, "Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α3.α1.ρ");
                Phi ret_3_a1_2_4_a1 = new PhMethod(ret_3_a1_2_4_a1_base, "if");
                  ret_3_a1_2_4_a1 = new PhLocated(ret_3_a1_2_4_a1, 332, 18, "Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α3.α1");
                ret_3_a1_2_4_a1 = new PhCopy(ret_3_a1_2_4_a1);
                  Phi ret_3_a1_2_4_a1_1 = new PhMethod(rho, "bin-powi");
                    ret_3_a1_2_4_a1_1 = new PhLocated(ret_3_a1_2_4_a1_1, 334, 20, "Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α3.α1.α0");
                  ret_3_a1_2_4_a1_1 = new PhCopy(ret_3_a1_2_4_a1_1);
                    Phi ret_3_a1_2_4_a1_1_1 = new PhMethod(rho, "value");
                      ret_3_a1_2_4_a1_1_1 = new PhLocated(ret_3_a1_2_4_a1_1_1, 334, 29, "Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α3.α1.α0.α0");
                    Phi ret_3_a1_2_4_a1_1_2 = new PhMethod(new PhMethod(rho, "σ"), "x");
                      ret_3_a1_2_4_a1_1_2 = new PhLocated(ret_3_a1_2_4_a1_1_2, 334, 35, "Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α3.α1.α0.α1");
                    ret_3_a1_2_4_a1_1 = new PhWith(ret_3_a1_2_4_a1_1, 0, ret_3_a1_2_4_a1_1_1);
                    ret_3_a1_2_4_a1_1 = new PhWith(ret_3_a1_2_4_a1_1, 1, ret_3_a1_2_4_a1_1_2);
                  Phi ret_3_a1_2_4_a1_2 = new PhMethod(rho, "bin-powf");
                    ret_3_a1_2_4_a1_2 = new PhLocated(ret_3_a1_2_4_a1_2, 335, 20, "Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α3.α1.α1");
                  ret_3_a1_2_4_a1_2 = new PhCopy(ret_3_a1_2_4_a1_2);
                    Phi ret_3_a1_2_4_a1_2_1 = new PhMethod(rho, "self-as-float");
                      ret_3_a1_2_4_a1_2_1 = new PhLocated(ret_3_a1_2_4_a1_2_1, 335, 29, "Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α3.α1.α1.α0");
                    Phi ret_3_a1_2_4_a1_2_2 = new PhMethod(rho, "x-as-float");
                      ret_3_a1_2_4_a1_2_2 = new PhLocated(ret_3_a1_2_4_a1_2_2, 335, 43, "Φ.org.eolang.math.number$power$t1$a2.φ.α2.α1.α1.α3.α1.α1.α1");
                    ret_3_a1_2_4_a1_2 = new PhWith(ret_3_a1_2_4_a1_2, 0, ret_3_a1_2_4_a1_2_1);
                    ret_3_a1_2_4_a1_2 = new PhWith(ret_3_a1_2_4_a1_2, 1, ret_3_a1_2_4_a1_2_2);
                  ret_3_a1_2_4_a1 = new PhWith(ret_3_a1_2_4_a1, 0, ret_3_a1_2_4_a1_1);
                  ret_3_a1_2_4_a1 = new PhWith(ret_3_a1_2_4_a1, 1, ret_3_a1_2_4_a1_2);
                ret_3_a1_2_4_a[1] = ret_3_a1_2_4_a1;
                ret_3_a1_2_4 = new PhWith(new PhCopy(ret_3_a1_2_4), "Δ", new Data.Value<Phi[]>(ret_3_a1_2_4_a));
              ret_3_a1_2 = new PhWith(ret_3_a1_2, 0, ret_3_a1_2_1);
              ret_3_a1_2 = new PhWith(ret_3_a1_2, 1, ret_3_a1_2_2);
              ret_3_a1_2 = new PhWith(ret_3_a1_2, 2, ret_3_a1_2_3);
              ret_3_a1_2 = new PhWith(ret_3_a1_2, 3, ret_3_a1_2_4);
            ret_3_a1 = new PhWith(ret_3_a1, 0, ret_3_a1_1);
            ret_3_a1 = new PhWith(ret_3_a1, 1, ret_3_a1_2);
          ret_3_a[1] = ret_3_a1;
          ret_3 = new PhWith(new PhCopy(ret_3), "Δ", new Data.Value<Phi[]>(ret_3_a));
        ret = new PhWith(ret, 0, ret_1);
        ret = new PhWith(ret, 1, ret_2);
        ret = new PhWith(ret, 2, ret_3);
      return ret;
    })));
    this.add("x-is-inf", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = new PhMethod(new PhMethod(rho, "σ"), "x-as-num");
        ret_base = new PhLocated(ret_base, 207, 10, "Φ.org.eolang.math.number$power$t1$a2.x-is-inf.ρ");
      Phi ret = new PhMethod(ret_base, "is-infinite");
        ret = new PhLocated(ret, 207, 18, "Φ.org.eolang.math.number$power$t1$a2.x-is-inf");
      ret = new PhConst(ret);
      return ret;
    })));
    this.add("x-is-int", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = new PhMethod(new PhMethod(rho, "σ"), "x-as-num");
        ret_base = new PhLocated(ret_base, 210, 12, "Φ.org.eolang.math.number$power$t1$a2.x-is-int.ρ");
      Phi ret = new PhMethod(ret_base, "is-int");
        ret = new PhLocated(ret, 210, 20, "Φ.org.eolang.math.number$power$t1$a2.x-is-int");
      ret = new PhConst(ret);
      return ret;
    })));
    this.add("self-is-inf", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new PhMethod(new PhMethod(new PhMethod(rho, "σ"), "σ"), "is-infinite");
        ret = new PhLocated(ret, 215, 10, "Φ.org.eolang.math.number$power$t1$a2.self-is-inf");
      ret = new PhConst(ret);
      return ret;
    })));
    this.add("value", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base_base = new PhMethod(rho, "ρ");
        ret_base_base = new PhLocated(ret_base_base, 216, 10, "Φ.org.eolang.math.number$power$t1$a2.value.ρ.ρ");
      Phi ret_base = new PhMethod(ret_base_base, "ρ");
        ret_base = new PhLocated(ret_base, 216, 11, "Φ.org.eolang.math.number$power$t1$a2.value.ρ");
      Phi ret = new PhMethod(ret_base, "n");
        ret = new PhLocated(ret, 216, 13, "Φ.org.eolang.math.number$power$t1$a2.value");
      ret = new PhConst(ret);
      return ret;
    })));
    this.add("self-is-int", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new PhMethod(new PhMethod(new PhMethod(rho, "σ"), "σ"), "is-int");
        ret = new PhLocated(ret, 218, 12, "Φ.org.eolang.math.number$power$t1$a2.self-is-int");
      ret = new PhConst(ret);
      return ret;
    })));
    this.add("self-is-zero", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = new PhMethod(rho, "self-as-float");
        ret_base = new PhLocated(ret_base, 283, 14, "Φ.org.eolang.math.number$power$t1$a2.self-is-zero.ρ");
      Phi ret = new PhMethod(ret_base, "eq");
        ret = new PhLocated(ret, 283, 27, "Φ.org.eolang.math.number$power$t1$a2.self-is-zero");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOfloat(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 283, 31, "Φ.org.eolang.math.number$power$t1$a2.self-is-zero.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>(0.0d));
        ret = new PhWith(ret, 0, ret_1);
      ret = new PhConst(ret);
      return ret;
    })));
    this.add("self-or-x-is-inf", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = new PhMethod(rho, "self-is-inf");
        ret_base = new PhLocated(ret_base, 287, 18, "Φ.org.eolang.math.number$power$t1$a2.self-or-x-is-inf.ρ");
      Phi ret = new PhMethod(ret_base, "or");
        ret = new PhLocated(ret, 286, 16, "Φ.org.eolang.math.number$power$t1$a2.self-or-x-is-inf");
      ret = new PhCopy(ret);
        Phi ret_1 = new PhMethod(rho, "x-is-inf");
          ret_1 = new PhLocated(ret_1, 288, 18, "Φ.org.eolang.math.number$power$t1$a2.self-or-x-is-inf.α0");
        ret = new PhWith(ret, 0, ret_1);
      ret = new PhConst(ret);
      return ret;
    })));
  }
}
