
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT b5a4c9a 2023-08-17T12:29:38) on 2023-08-18T14:42:30.920527Z; your changes will be discarded on the next build */
package EOorg.EOeolang.EOmath;

import org.eolang.*;

// <o abstract="" ancestors="1" line="137" loc="Φ.org.eolang.math.number$mod" name="number$mod" original-name="mod" parent="number" pos="2"> 
//   <o line="138" loc="Φ.org.eolang.math.number$mod.x" name="x" pos="3"/>
//   <o base=".n" const="" line="139" loc="Φ.org.eolang.math.number$mod.dividend" name="dividend" pos="5"> 
//     <o base="^" line="139" loc="Φ.org.eolang.math.number$mod.dividend.ρ" pos="4"/>
//   </o>
//   <o base="x" const="" line="140" loc="Φ.org.eolang.math.number$mod.divisor" name="divisor" pos="4" ref="138"/>
//   <o base=".if" line="142" loc="Φ.org.eolang.math.number$mod.φ" name="@" pos="4"> 
//     <o base=".eq" line="143" loc="Φ.org.eolang.math.number$mod.φ.ρ" pos="13"> 
//       <o base="divisor" line="143" loc="Φ.org.eolang.math.number$mod.φ.ρ.ρ" pos="6" ref="140"/>
//       <o base="org.eolang.int" data="int" line="143" loc="Φ.org.eolang.math.number$mod.φ.ρ.α0" pos="17">0</o>
//     </o>
//     <o base="org.eolang.error" line="144" loc="Φ.org.eolang.math.number$mod.φ.α0" pos="6"> 
//       <o base="org.eolang.string" data="string" line="144" loc="Φ.org.eolang.math.number$mod.φ.α0.α0" pos="12">mod by zero</o>
//     </o>
//     <o base=".if" line="145" loc="Φ.org.eolang.math.number$mod.φ.α1" pos="6"> 
//       <o base=".gt" line="146" loc="Φ.org.eolang.math.number$mod.φ.α1.ρ" pos="16"> 
//         <o base="dividend" line="146" loc="Φ.org.eolang.math.number$mod.φ.α1.ρ.ρ" pos="8" ref="139"/>
//         <o base="org.eolang.int" data="int" line="146" loc="Φ.org.eolang.math.number$mod.φ.α1.ρ.α0" pos="20">0</o>
//       </o>
//       <o base="abs-mod" line="147" loc="Φ.org.eolang.math.number$mod.φ.α1.α0" pos="8" ref="151"/>
//       <o base=".neg" line="148" loc="Φ.org.eolang.math.number$mod.φ.α1.α1" pos="8"> 
//         <o base="abs-mod" line="149" loc="Φ.org.eolang.math.number$mod.φ.α1.α1.ρ" pos="10" ref="151"/>
//       </o>
//     </o>
//   </o>
//   <o base="number$mod$abs-mod" cut="144" line="151" loc="Φ.org.eolang.math.number$mod.abs-mod" name="abs-mod" pos="4" ref="151"> 
//     <o as="dividend" base="dividend" level="1" loc="Φ.org.eolang.math.number$mod.abs-mod.α0" ref="139"/>
//     <o as="divisor" base="divisor" level="1" loc="Φ.org.eolang.math.number$mod.abs-mod.α1" ref="140"/>
//   </o>
// </o>
@XmirObject(name = "number$mod", oname = "mod", source = "/home/tardis3/eo/eo-runtime/target/eo-test/3-pull/org/eolang/math/number.eo")
public final class EOnumber$EOmod extends PhDefault {
  public EOnumber$EOmod(final Phi sigma) {
    super(sigma);
    this.add("x", new AtFree(/* default */));
    this.add("dividend", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = new PhMethod(rho, "ρ");
        ret_base = new PhLocated(ret_base, 139, 4, "Φ.org.eolang.math.number$mod.dividend.ρ");
      Phi ret = new PhMethod(ret_base, "n");
        ret = new PhLocated(ret, 139, 5, "Φ.org.eolang.math.number$mod.dividend");
      ret = new PhConst(ret);
      return ret;
    })));
    this.add("divisor", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new PhMethod(rho, "x");
        ret = new PhLocated(ret, 140, 4, "Φ.org.eolang.math.number$mod.divisor");
      ret = new PhConst(ret);
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base_base = new PhMethod(rho, "divisor");
        ret_base_base = new PhLocated(ret_base_base, 143, 6, "Φ.org.eolang.math.number$mod.φ.ρ.ρ");
      Phi ret_base = new PhMethod(ret_base_base, "eq");
        ret_base = new PhLocated(ret_base, 143, 13, "Φ.org.eolang.math.number$mod.φ.ρ");
      ret_base = new PhCopy(ret_base);
        Phi ret_base_1 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_base_1 = new PhLocated(ret_base_1, 143, 17, "Φ.org.eolang.math.number$mod.φ.ρ.α0");
          ret_base_1 = new PhWith(ret_base_1, "Δ", new Data.Value<>(0L));
        ret_base = new PhWith(ret_base, 0, ret_base_1);
      Phi ret = new PhMethod(ret_base, "if");
        ret = new PhLocated(ret, 142, 4, "Φ.org.eolang.math.number$mod.φ");
      ret = new PhCopy(ret);
        Phi ret_1 = Phi.Φ.attr("org").get().attr("eolang").get().attr("error").get();
          ret_1 = new PhLocated(ret_1, 144, 6, "Φ.org.eolang.math.number$mod.φ.α0");
        ret_1 = new PhCopy(ret_1);
          Phi ret_1_1 = new EOorg.EOeolang.EOstring(Phi.Φ);
            ret_1_1 = new PhLocated(ret_1_1, 144, 12, "Φ.org.eolang.math.number$mod.φ.α0.α0");
            ret_1_1 = new PhWith(ret_1_1, "Δ", new Data.Value<>("mod by zero"));
          ret_1 = new PhWith(ret_1, "α", ret_1_1);
        Phi ret_2_base_base = new PhMethod(rho, "dividend");
          ret_2_base_base = new PhLocated(ret_2_base_base, 146, 8, "Φ.org.eolang.math.number$mod.φ.α1.ρ.ρ");
        Phi ret_2_base = new PhMethod(ret_2_base_base, "gt");
          ret_2_base = new PhLocated(ret_2_base, 146, 16, "Φ.org.eolang.math.number$mod.φ.α1.ρ");
        ret_2_base = new PhCopy(ret_2_base);
          Phi ret_2_base_1 = new EOorg.EOeolang.EOint(Phi.Φ);
            ret_2_base_1 = new PhLocated(ret_2_base_1, 146, 20, "Φ.org.eolang.math.number$mod.φ.α1.ρ.α0");
            ret_2_base_1 = new PhWith(ret_2_base_1, "Δ", new Data.Value<>(0L));
          ret_2_base = new PhWith(ret_2_base, 0, ret_2_base_1);
        Phi ret_2 = new PhMethod(ret_2_base, "if");
          ret_2 = new PhLocated(ret_2, 145, 6, "Φ.org.eolang.math.number$mod.φ.α1");
        ret_2 = new PhCopy(ret_2);
          Phi ret_2_1 = new PhMethod(rho, "abs-mod");
            ret_2_1 = new PhLocated(ret_2_1, 147, 8, "Φ.org.eolang.math.number$mod.φ.α1.α0");
          Phi ret_2_2_base = new PhMethod(rho, "abs-mod");
            ret_2_2_base = new PhLocated(ret_2_2_base, 149, 10, "Φ.org.eolang.math.number$mod.φ.α1.α1.ρ");
          Phi ret_2_2 = new PhMethod(ret_2_2_base, "neg");
            ret_2_2 = new PhLocated(ret_2_2, 148, 8, "Φ.org.eolang.math.number$mod.φ.α1.α1");
          ret_2 = new PhWith(ret_2, 0, ret_2_1);
          ret_2 = new PhWith(ret_2, 1, ret_2_2);
        ret = new PhWith(ret, 0, ret_1);
        ret = new PhWith(ret, 1, ret_2);
      return ret;
    })));
    this.add("abs-mod", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new EOnumber$EOmod$EOabs_mod(rho);
        ret = new PhLocated(ret, 151, 4, "Φ.org.eolang.math.number$mod.abs-mod");
      return ret;
    })));
  }
}
