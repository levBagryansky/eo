
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT b5a4c9a 2023-08-17T12:29:38) on 2023-08-18T14:42:30.920527Z; your changes will be discarded on the next build */
package EOorg.EOeolang.EOmath;

import org.eolang.*;

// <o abstract="" ancestors="1" line="502" loc="Φ.org.eolang.math.number$log" name="number$log" original-name="log" parent="number" pos="2"> 
//   <o line="503" loc="Φ.org.eolang.math.number$log.base" name="base" pos="3"/>
//   <o base="number" const="" line="504" loc="Φ.org.eolang.math.number$log.base-as-number" name="base-as-number" pos="4" ref="34"> 
//     <o base="base" line="504" loc="Φ.org.eolang.math.number$log.base-as-number.α0" pos="11" ref="503"/>
//   </o>
//   <o base=".if" line="506" loc="Φ.org.eolang.math.number$log.φ" name="@" pos="4"> 
//     <o base=".or" line="507" loc="Φ.org.eolang.math.number$log.φ.ρ" pos="6"> 
//       <o base="is-nan" line="508" loc="Φ.org.eolang.math.number$log.φ.ρ.ρ" pos="8" ref="502.69.472"/>
//       <o base=".is-nan" line="509" loc="Φ.org.eolang.math.number$log.φ.ρ.α0" pos="22"> 
//         <o base="base-as-number" line="509" loc="Φ.org.eolang.math.number$log.φ.ρ.α0.ρ" pos="8" ref="504"/>
//       </o>
//     </o>
//     <o base="org.eolang.nan" line="510" loc="Φ.org.eolang.math.number$log.φ.α0" pos="6"/>
//     <o base="number$log$t2$a2" cut="598" line="511" loc="Φ.org.eolang.math.number$log.φ.α1" pos="6" ref="511"> 
//       <o as="base" base="base" level="1" loc="Φ.org.eolang.math.number$log.φ.α1.α0" ref="503"/>
//       <o as="base-as-number" base="base-as-number" level="1" loc="Φ.org.eolang.math.number$log.φ.α1.α1" ref="504"/>
//       <o as="is-nan" base="is-nan" level="2" loc="Φ.org.eolang.math.number$log.φ.α1.α2" ref="502.69.472"/>
//       <o as="is-infinite" base="is-infinite" level="2" loc="Φ.org.eolang.math.number$log.φ.α1.α3" ref="502.76.472"/>
//       <o as="as-float" base="as-float" level="2" loc="Φ.org.eolang.math.number$log.φ.α1.α4" ref="502.390.472"/>
//     </o>
//   </o>
//   <o level="1" line="502.69.472" loc="Φ.org.eolang.math.number$log.is-nan" name="is-nan"/>
//   <o level="1" line="502.76.472" loc="Φ.org.eolang.math.number$log.is-infinite" name="is-infinite"/>
//   <o level="1" line="502.390.472" loc="Φ.org.eolang.math.number$log.as-float" name="as-float"/>
// </o>
@XmirObject(name = "number$log", oname = "log", source = "/home/tardis3/eo/eo-runtime/target/eo-test/3-pull/org/eolang/math/number.eo")
public final class EOnumber$EOlog extends PhDefault {
  public EOnumber$EOlog(final Phi sigma) {
    super(sigma);
    this.add("base", new AtFree(/* default */));
    this.add("base-as-number", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("math").get().attr("number").get();
        ret = new PhLocated(ret, 504, 4, "Φ.org.eolang.math.number$log.base-as-number");
      ret = new PhCopy(ret);
        Phi ret_1 = new PhMethod(rho, "base");
          ret_1 = new PhLocated(ret_1, 504, 11, "Φ.org.eolang.math.number$log.base-as-number.α0");
        ret = new PhWith(ret, 0, ret_1);
      ret = new PhConst(ret);
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base_base = new PhMethod(new PhMethod(rho, "σ"), "is-nan");
        ret_base_base = new PhLocated(ret_base_base, 508, 8, "Φ.org.eolang.math.number$log.φ.ρ.ρ");
      Phi ret_base = new PhMethod(ret_base_base, "or");
        ret_base = new PhLocated(ret_base, 507, 6, "Φ.org.eolang.math.number$log.φ.ρ");
      ret_base = new PhCopy(ret_base);
        Phi ret_base_1_base = new PhMethod(rho, "base-as-number");
          ret_base_1_base = new PhLocated(ret_base_1_base, 509, 8, "Φ.org.eolang.math.number$log.φ.ρ.α0.ρ");
        Phi ret_base_1 = new PhMethod(ret_base_1_base, "is-nan");
          ret_base_1 = new PhLocated(ret_base_1, 509, 22, "Φ.org.eolang.math.number$log.φ.ρ.α0");
        ret_base = new PhWith(ret_base, 0, ret_base_1);
      Phi ret = new PhMethod(ret_base, "if");
        ret = new PhLocated(ret, 506, 4, "Φ.org.eolang.math.number$log.φ");
      ret = new PhCopy(ret);
        Phi ret_1 = Phi.Φ.attr("org").get().attr("eolang").get().attr("nan").get();
          ret_1 = new PhLocated(ret_1, 510, 6, "Φ.org.eolang.math.number$log.φ.α0");
        Phi ret_2 = new EOnumber$EOlog$EOt2$EOa2(rho);
          ret_2 = new PhLocated(ret_2, 511, 6, "Φ.org.eolang.math.number$log.φ.α1");
        ret = new PhWith(ret, 0, ret_1);
        ret = new PhWith(ret, 1, ret_2);
      return ret;
    })));
  }
}
