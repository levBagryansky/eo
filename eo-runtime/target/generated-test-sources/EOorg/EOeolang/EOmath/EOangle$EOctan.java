
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT b5a4c9a 2023-08-17T12:29:38) on 2023-08-18T14:42:30.920527Z; your changes will be discarded on the next build */
package EOorg.EOeolang.EOmath;

import org.eolang.*;

// <o abstract="" ancestors="1" line="50" loc="Φ.org.eolang.math.angle$ctan" name="angle$ctan" original-name="ctan" parent="angle" pos="2"> 
//   <o base=".sin" const="" line="52" loc="Φ.org.eolang.math.angle$ctan.sine" name="sine" pos="5"> 
//     <o base="^" line="52" loc="Φ.org.eolang.math.angle$ctan.sine.ρ" pos="4"/>
//   </o>
//   <o base=".if" line="53" loc="Φ.org.eolang.math.angle$ctan.φ" name="@" pos="4"> 
//     <o base=".eq" line="54" loc="Φ.org.eolang.math.angle$ctan.φ.ρ" pos="10"> 
//       <o base="sine" line="54" loc="Φ.org.eolang.math.angle$ctan.φ.ρ.ρ" pos="6" ref="52"/>
//       <o base="org.eolang.float" data="float" line="54" loc="Φ.org.eolang.math.angle$ctan.φ.ρ.α0" pos="14">0.0</o>
//     </o>
//     <o base="org.eolang.nan" line="55" loc="Φ.org.eolang.math.angle$ctan.φ.α0" pos="6"/>
//     <o base=".div" line="56" loc="Φ.org.eolang.math.angle$ctan.φ.α1" pos="6"> 
//       <o base=".cos" line="57" loc="Φ.org.eolang.math.angle$ctan.φ.α1.ρ" pos="9"> 
//         <o base="^" line="57" loc="Φ.org.eolang.math.angle$ctan.φ.α1.ρ.ρ" pos="8"/>
//       </o>
//       <o base="sine" line="58" loc="Φ.org.eolang.math.angle$ctan.φ.α1.α0" pos="8" ref="52"/>
//     </o>
//   </o>
// </o>
@XmirObject(name = "angle$ctan", oname = "ctan", source = "/home/tardis3/eo/eo-runtime/target/eo-test/3-pull/org/eolang/math/angle.eo")
public final class EOangle$EOctan extends PhDefault {
  public EOangle$EOctan(final Phi sigma) {
    super(sigma);
    this.add("sine", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = new PhMethod(rho, "ρ");
        ret_base = new PhLocated(ret_base, 52, 4, "Φ.org.eolang.math.angle$ctan.sine.ρ");
      Phi ret = new PhMethod(ret_base, "sin");
        ret = new PhLocated(ret, 52, 5, "Φ.org.eolang.math.angle$ctan.sine");
      ret = new PhConst(ret);
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base_base = new PhMethod(rho, "sine");
        ret_base_base = new PhLocated(ret_base_base, 54, 6, "Φ.org.eolang.math.angle$ctan.φ.ρ.ρ");
      Phi ret_base = new PhMethod(ret_base_base, "eq");
        ret_base = new PhLocated(ret_base, 54, 10, "Φ.org.eolang.math.angle$ctan.φ.ρ");
      ret_base = new PhCopy(ret_base);
        Phi ret_base_1 = new EOorg.EOeolang.EOfloat(Phi.Φ);
          ret_base_1 = new PhLocated(ret_base_1, 54, 14, "Φ.org.eolang.math.angle$ctan.φ.ρ.α0");
          ret_base_1 = new PhWith(ret_base_1, "Δ", new Data.Value<>(0.0d));
        ret_base = new PhWith(ret_base, 0, ret_base_1);
      Phi ret = new PhMethod(ret_base, "if");
        ret = new PhLocated(ret, 53, 4, "Φ.org.eolang.math.angle$ctan.φ");
      ret = new PhCopy(ret);
        Phi ret_1 = Phi.Φ.attr("org").get().attr("eolang").get().attr("nan").get();
          ret_1 = new PhLocated(ret_1, 55, 6, "Φ.org.eolang.math.angle$ctan.φ.α0");
        Phi ret_2_base_base = new PhMethod(rho, "ρ");
          ret_2_base_base = new PhLocated(ret_2_base_base, 57, 8, "Φ.org.eolang.math.angle$ctan.φ.α1.ρ.ρ");
        Phi ret_2_base = new PhMethod(ret_2_base_base, "cos");
          ret_2_base = new PhLocated(ret_2_base, 57, 9, "Φ.org.eolang.math.angle$ctan.φ.α1.ρ");
        Phi ret_2 = new PhMethod(ret_2_base, "div");
          ret_2 = new PhLocated(ret_2, 56, 6, "Φ.org.eolang.math.angle$ctan.φ.α1");
        ret_2 = new PhCopy(ret_2);
          Phi ret_2_1 = new PhMethod(rho, "sine");
            ret_2_1 = new PhLocated(ret_2_1, 58, 8, "Φ.org.eolang.math.angle$ctan.φ.α1.α0");
          ret_2 = new PhWith(ret_2, 0, ret_2_1);
        ret = new PhWith(ret, 0, ret_1);
        ret = new PhWith(ret, 1, ret_2);
      return ret;
    })));
  }
}
