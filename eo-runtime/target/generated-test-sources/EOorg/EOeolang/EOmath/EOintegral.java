
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT b5a4c9a 2023-08-17T12:29:38) on 2023-08-18T14:42:30.920527Z; your changes will be discarded on the next build */
package EOorg.EOeolang.EOmath;

import org.eolang.*;

// <o abstract="" line="30" loc="Φ.org.eolang.math.integral" name="integral" original-name="integral" pos="0"> 
//   <o line="30" loc="Φ.org.eolang.math.integral.fun" name="fun" pos="1"/>
//   <o line="30" loc="Φ.org.eolang.math.integral.a" name="a" pos="5"/>
//   <o line="30" loc="Φ.org.eolang.math.integral.b" name="b" pos="7"/>
//   <o base="integral$subsection" cut="3" line="31" loc="Φ.org.eolang.math.integral.subsection" name="subsection" pos="2" ref="31"> 
//     <o as="fun" base="fun" level="1" loc="Φ.org.eolang.math.integral.subsection.α0" ref="30"/>
//     <o as="a" base="a" level="1" loc="Φ.org.eolang.math.integral.subsection.α1" ref="30"/>
//     <o as="b" base="b" level="1" loc="Φ.org.eolang.math.integral.subsection.α2" ref="30"/>
//   </o>
//   <o base="org.eolang.memory" line="50" loc="Φ.org.eolang.math.integral.sum" name="sum" pos="2"> 
//     <o base="org.eolang.float" data="float" line="51" loc="Φ.org.eolang.math.integral.sum.α0" pos="4">0.0</o>
//   </o>
//   <o base="org.eolang.memory" line="52" loc="Φ.org.eolang.math.integral.x" name="x" pos="2"> 
//     <o base=".as-float" line="53" loc="Φ.org.eolang.math.integral.x.α0" pos="14"> 
//       <o base="org.eolang.math.number" line="53" loc="Φ.org.eolang.math.integral.x.α0.ρ" pos="5" scope="scope-4a1e5d86-e268-4345-8b27-b12811e875c4"> 
//         <o base="a" line="53" loc="Φ.org.eolang.math.integral.x.α0.ρ.α0" pos="12" ref="30" scope="scope-4a1e5d86-e268-4345-8b27-b12811e875c4"/>
//       </o>
//     </o>
//   </o>
//   <o base=".as-float" const="" line="54" loc="Φ.org.eolang.math.integral.y" name="y" pos="12"> 
//     <o base="org.eolang.math.number" line="54" loc="Φ.org.eolang.math.integral.y.ρ" pos="3" scope="scope-31426dd8-fbbb-441a-932c-b75fe186e559"> 
//       <o base="b" line="54" loc="Φ.org.eolang.math.integral.y.ρ.α0" pos="10" ref="30" scope="scope-31426dd8-fbbb-441a-932c-b75fe186e559"/>
//     </o>
//   </o>
//   <o base="org.eolang.float" const="" data="float" line="55" loc="Φ.org.eolang.math.integral.n" name="n" pos="2">100.0</o>
//   <o base=".div" const="" line="56" loc="Φ.org.eolang.math.integral.h" name="h" pos="2"> 
//     <o base=".minus" line="57" loc="Φ.org.eolang.math.integral.h.ρ" pos="4"> 
//       <o base="y" line="58" loc="Φ.org.eolang.math.integral.h.ρ.ρ" pos="6" ref="54"/>
//       <o base="x" line="59" loc="Φ.org.eolang.math.integral.h.ρ.α0" pos="6" ref="52"/>
//     </o>
//     <o base="n" line="60" loc="Φ.org.eolang.math.integral.h.α0" pos="4" ref="55"/>
//   </o>
//   <o base="org.eolang.seq" line="61" loc="Φ.org.eolang.math.integral.φ" name="@" pos="2"> 
//     <o base=".while" line="62" loc="Φ.org.eolang.math.integral.φ.α0" pos="4"> 
//       <o base=".lt" line="63" loc="Φ.org.eolang.math.integral.φ.α0.ρ" pos="6"> 
//         <o base=".plus" line="64" loc="Φ.org.eolang.math.integral.φ.α0.ρ.ρ" pos="8"> 
//           <o base="x" line="65" loc="Φ.org.eolang.math.integral.φ.α0.ρ.ρ.ρ" pos="10" ref="52"/>
//           <o base="h" line="66" loc="Φ.org.eolang.math.integral.φ.α0.ρ.ρ.α0" pos="10" ref="56"/>
//         </o>
//         <o base="y" line="67" loc="Φ.org.eolang.math.integral.φ.α0.ρ.α0" pos="8" ref="54"/>
//       </o>
//       <o base="integral$t9$t0$a1" cut="46" line="68" loc="Φ.org.eolang.math.integral.φ.α0.α0" pos="6" ref="68"> 
//         <o as="fun" base="fun" level="1" loc="Φ.org.eolang.math.integral.φ.α0.α0.α0" ref="30"/>
//         <o as="subsection" base="subsection" level="1" loc="Φ.org.eolang.math.integral.φ.α0.α0.α1" ref="31"/>
//         <o as="sum" base="sum" level="1" loc="Φ.org.eolang.math.integral.φ.α0.α0.α2" ref="50"/>
//         <o as="x" base="x" level="1" loc="Φ.org.eolang.math.integral.φ.α0.α0.α3" ref="52"/>
//         <o as="h" base="h" level="1" loc="Φ.org.eolang.math.integral.φ.α0.α0.α4" ref="56"/>
//       </o>
//     </o>
//     <o base="sum" line="83" loc="Φ.org.eolang.math.integral.φ.α1" pos="4" ref="50"/>
//   </o>
// </o>
@XmirObject(name = "integral", oname = "integral", source = "/home/tardis3/eo/eo-runtime/target/eo-test/3-pull/org/eolang/math/integral.eo")
public final class EOintegral extends PhDefault {
  public EOintegral(final Phi sigma) {
    super(sigma);
    this.add("fun", new AtFree(/* default */));
    this.add("a", new AtFree(/* default */));
    this.add("b", new AtFree(/* default */));
    this.add("subsection", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new EOintegral$EOsubsection(rho);
        ret = new PhLocated(ret, 31, 2, "Φ.org.eolang.math.integral.subsection");
      return ret;
    })));
    this.add("sum", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("memory").get();
        ret = new PhLocated(ret, 50, 2, "Φ.org.eolang.math.integral.sum");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOfloat(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 51, 4, "Φ.org.eolang.math.integral.sum.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>(0.0d));
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
    this.add("x", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("memory").get();
        ret = new PhLocated(ret, 52, 2, "Φ.org.eolang.math.integral.x");
      ret = new PhCopy(ret);
        Phi ret_1_base = Phi.Φ.attr("org").get().attr("eolang").get().attr("math").get().attr("number").get();
          ret_1_base = new PhLocated(ret_1_base, 53, 5, "Φ.org.eolang.math.integral.x.α0.ρ");
        ret_1_base = new PhCopy(ret_1_base);
          Phi ret_1_base_1 = new PhMethod(rho, "a");
            ret_1_base_1 = new PhLocated(ret_1_base_1, 53, 12, "Φ.org.eolang.math.integral.x.α0.ρ.α0");
          ret_1_base = new PhWith(ret_1_base, 0, ret_1_base_1);
        Phi ret_1 = new PhMethod(ret_1_base, "as-float");
          ret_1 = new PhLocated(ret_1, 53, 14, "Φ.org.eolang.math.integral.x.α0");
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
    this.add("y", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = Phi.Φ.attr("org").get().attr("eolang").get().attr("math").get().attr("number").get();
        ret_base = new PhLocated(ret_base, 54, 3, "Φ.org.eolang.math.integral.y.ρ");
      ret_base = new PhCopy(ret_base);
        Phi ret_base_1 = new PhMethod(rho, "b");
          ret_base_1 = new PhLocated(ret_base_1, 54, 10, "Φ.org.eolang.math.integral.y.ρ.α0");
        ret_base = new PhWith(ret_base, 0, ret_base_1);
      Phi ret = new PhMethod(ret_base, "as-float");
        ret = new PhLocated(ret, 54, 12, "Φ.org.eolang.math.integral.y");
      ret = new PhConst(ret);
      return ret;
    })));
    this.add("n", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new EOorg.EOeolang.EOfloat(Phi.Φ);
        ret = new PhLocated(ret, 55, 2, "Φ.org.eolang.math.integral.n");
        ret = new PhWith(ret, "Δ", new Data.Value<>(100.0d));
      ret = new PhConst(ret);
      return ret;
    })));
    this.add("h", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base_base = new PhMethod(rho, "y");
        ret_base_base = new PhLocated(ret_base_base, 58, 6, "Φ.org.eolang.math.integral.h.ρ.ρ");
      Phi ret_base = new PhMethod(ret_base_base, "minus");
        ret_base = new PhLocated(ret_base, 57, 4, "Φ.org.eolang.math.integral.h.ρ");
      ret_base = new PhCopy(ret_base);
        Phi ret_base_1 = new PhMethod(rho, "x");
          ret_base_1 = new PhLocated(ret_base_1, 59, 6, "Φ.org.eolang.math.integral.h.ρ.α0");
        ret_base = new PhWith(ret_base, 0, ret_base_1);
      Phi ret = new PhMethod(ret_base, "div");
        ret = new PhLocated(ret, 56, 2, "Φ.org.eolang.math.integral.h");
      ret = new PhCopy(ret);
        Phi ret_1 = new PhMethod(rho, "n");
          ret_1 = new PhLocated(ret_1, 60, 4, "Φ.org.eolang.math.integral.h.α0");
        ret = new PhWith(ret, 0, ret_1);
      ret = new PhConst(ret);
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("seq").get();
        ret = new PhLocated(ret, 61, 2, "Φ.org.eolang.math.integral.φ");
      ret = new PhCopy(ret);
        Phi ret_1_base_base_base = new PhMethod(rho, "x");
          ret_1_base_base_base = new PhLocated(ret_1_base_base_base, 65, 10, "Φ.org.eolang.math.integral.φ.α0.ρ.ρ.ρ");
        Phi ret_1_base_base = new PhMethod(ret_1_base_base_base, "plus");
          ret_1_base_base = new PhLocated(ret_1_base_base, 64, 8, "Φ.org.eolang.math.integral.φ.α0.ρ.ρ");
        ret_1_base_base = new PhCopy(ret_1_base_base);
          Phi ret_1_base_base_1 = new PhMethod(rho, "h");
            ret_1_base_base_1 = new PhLocated(ret_1_base_base_1, 66, 10, "Φ.org.eolang.math.integral.φ.α0.ρ.ρ.α0");
          ret_1_base_base = new PhWith(ret_1_base_base, 0, ret_1_base_base_1);
        Phi ret_1_base = new PhMethod(ret_1_base_base, "lt");
          ret_1_base = new PhLocated(ret_1_base, 63, 6, "Φ.org.eolang.math.integral.φ.α0.ρ");
        ret_1_base = new PhCopy(ret_1_base);
          Phi ret_1_base_1 = new PhMethod(rho, "y");
            ret_1_base_1 = new PhLocated(ret_1_base_1, 67, 8, "Φ.org.eolang.math.integral.φ.α0.ρ.α0");
          ret_1_base = new PhWith(ret_1_base, 0, ret_1_base_1);
        Phi ret_1 = new PhMethod(ret_1_base, "while");
          ret_1 = new PhLocated(ret_1, 62, 4, "Φ.org.eolang.math.integral.φ.α0");
        ret_1 = new PhCopy(ret_1);
          Phi ret_1_1 = new EOintegral$EOt9$EOt0$EOa1(rho);
            ret_1_1 = new PhLocated(ret_1_1, 68, 6, "Φ.org.eolang.math.integral.φ.α0.α0");
          ret_1 = new PhWith(ret_1, 0, ret_1_1);
        Phi ret_2 = new PhMethod(rho, "sum");
          ret_2 = new PhLocated(ret_2, 83, 4, "Φ.org.eolang.math.integral.φ.α1");
        ret = new PhWith(ret, 0, ret_1);
        ret = new PhWith(ret, 1, ret_2);
      return ret;
    })));
  }
}
