
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT b5a4c9a 2023-08-17T12:29:38) on 2023-08-18T14:42:30.920527Z; your changes will be discarded on the next build */
package EOorg.EOeolang.EOmath;

import org.eolang.*;

// <o abstract="" ancestors="1" line="197" loc="Φ.org.eolang.math.number$power" name="number$power" original-name="power" parent="number" pos="2"> 
//   <o line="198" loc="Φ.org.eolang.math.number$power.x" name="x" pos="3"/>
//   <o base=".if" line="199" loc="Φ.org.eolang.math.number$power.φ" name="@" pos="4"> 
//     <o base=".or" line="200" loc="Φ.org.eolang.math.number$power.φ.ρ" pos="6"> 
//       <o base=".is-nan" line="201" loc="Φ.org.eolang.math.number$power.φ.ρ.ρ" pos="8"> 
//         <o base="x-as-num" cut="1" line="202" loc="Φ.org.eolang.math.number$power.φ.ρ.ρ.ρ" ref="202"/>
//       </o>
//       <o base="is-nan" line="203" loc="Φ.org.eolang.math.number$power.φ.ρ.α0" pos="8" ref="197.69.468"/>
//     </o>
//     <o base="org.eolang.nan" line="204" loc="Φ.org.eolang.math.number$power.φ.α0" pos="6"/>
//     <o base="number$power$t1$a2" cut="210" line="205" loc="Φ.org.eolang.math.number$power.φ.α1" pos="6" ref="205"> 
//       <o as="x" base="x" level="1" loc="Φ.org.eolang.math.number$power.φ.α1.α0" ref="198"/>
//       <o as="x-as-num" base="x-as-num" level="1" loc="Φ.org.eolang.math.number$power.φ.α1.α1" ref="202"/>
//       <o as="n" base="n" level="2" loc="Φ.org.eolang.math.number$power.φ.α1.α2" ref="197.34.468"/>
//       <o as="is-int" base="is-int" level="2" loc="Φ.org.eolang.math.number$power.φ.α1.α3" ref="197.37.468"/>
//       <o as="is-nan" base="is-nan" level="2" loc="Φ.org.eolang.math.number$power.φ.α1.α4" ref="197.69.468"/>
//       <o as="is-infinite" base="is-infinite" level="2" loc="Φ.org.eolang.math.number$power.φ.α1.α5" ref="197.76.468"/>
//       <o as="as-float" base="as-float" level="2" loc="Φ.org.eolang.math.number$power.φ.α1.α6" ref="197.390.468"/>
//     </o>
//   </o>
//   <o base="number" const="" line="202" loc="Φ.org.eolang.math.number$power.x-as-num" name="x-as-num" pos="10" ref="34"> 
//     <o base="x" line="202" loc="Φ.org.eolang.math.number$power.x-as-num.α0" pos="17" ref="198"/>
//   </o>
//   <o level="1" line="197.34.468" loc="Φ.org.eolang.math.number$power.n" name="n"/>
//   <o level="1" line="197.37.468" loc="Φ.org.eolang.math.number$power.is-int" name="is-int"/>
//   <o level="1" line="197.69.468" loc="Φ.org.eolang.math.number$power.is-nan" name="is-nan"/>
//   <o level="1" line="197.76.468" loc="Φ.org.eolang.math.number$power.is-infinite" name="is-infinite"/>
//   <o level="1" line="197.390.468" loc="Φ.org.eolang.math.number$power.as-float" name="as-float"/>
// </o>
@XmirObject(name = "number$power", oname = "power", source = "/home/tardis3/eo/eo-runtime/target/eo-test/3-pull/org/eolang/math/number.eo")
public final class EOnumber$EOpower extends PhDefault {
  public EOnumber$EOpower(final Phi sigma) {
    super(sigma);
    this.add("x", new AtFree(/* default */));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base_base_base = new PhMethod(rho, "x-as-num");
      Phi ret_base_base = new PhMethod(ret_base_base_base, "is-nan");
        ret_base_base = new PhLocated(ret_base_base, 201, 8, "Φ.org.eolang.math.number$power.φ.ρ.ρ");
      Phi ret_base = new PhMethod(ret_base_base, "or");
        ret_base = new PhLocated(ret_base, 200, 6, "Φ.org.eolang.math.number$power.φ.ρ");
      ret_base = new PhCopy(ret_base);
        Phi ret_base_1 = new PhMethod(new PhMethod(rho, "σ"), "is-nan");
          ret_base_1 = new PhLocated(ret_base_1, 203, 8, "Φ.org.eolang.math.number$power.φ.ρ.α0");
        ret_base = new PhWith(ret_base, 0, ret_base_1);
      Phi ret = new PhMethod(ret_base, "if");
        ret = new PhLocated(ret, 199, 4, "Φ.org.eolang.math.number$power.φ");
      ret = new PhCopy(ret);
        Phi ret_1 = Phi.Φ.attr("org").get().attr("eolang").get().attr("nan").get();
          ret_1 = new PhLocated(ret_1, 204, 6, "Φ.org.eolang.math.number$power.φ.α0");
        Phi ret_2 = new EOnumber$EOpower$EOt1$EOa2(rho);
          ret_2 = new PhLocated(ret_2, 205, 6, "Φ.org.eolang.math.number$power.φ.α1");
        ret = new PhWith(ret, 0, ret_1);
        ret = new PhWith(ret, 1, ret_2);
      return ret;
    })));
    this.add("x-as-num", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("math").get().attr("number").get();
        ret = new PhLocated(ret, 202, 10, "Φ.org.eolang.math.number$power.x-as-num");
      ret = new PhCopy(ret);
        Phi ret_1 = new PhMethod(rho, "x");
          ret_1 = new PhLocated(ret_1, 202, 17, "Φ.org.eolang.math.number$power.x-as-num.α0");
        ret = new PhWith(ret, 0, ret_1);
      ret = new PhConst(ret);
      return ret;
    })));
  }
}
