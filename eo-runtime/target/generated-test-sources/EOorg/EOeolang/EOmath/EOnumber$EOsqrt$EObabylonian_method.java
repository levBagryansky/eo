
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT b5a4c9a 2023-08-17T12:29:38) on 2023-08-18T14:42:30.920527Z; your changes will be discarded on the next build */
package EOorg.EOeolang.EOmath;

import org.eolang.*;

// <o abstract="" ancestors="2" line="363" loc="Φ.org.eolang.math.number$sqrt$babylonian-method" name="number$sqrt$babylonian-method" original-name="babylonian-method" parent="number$sqrt" pos="4"> 
//   <o line="363" loc="Φ.org.eolang.math.number$sqrt$babylonian-method.a" name="a" pos="5"/>
//   <o base="org.eolang.memory" line="364" loc="Φ.org.eolang.math.number$sqrt$babylonian-method.x-new" name="x-new" pos="6"> 
//     <o base="org.eolang.float" data="float" line="364" loc="Φ.org.eolang.math.number$sqrt$babylonian-method.x-new.α0" pos="13">1.0</o>
//   </o>
//   <o base="org.eolang.memory" line="365" loc="Φ.org.eolang.math.number$sqrt$babylonian-method.x-old" name="x-old" pos="6"> 
//     <o base="org.eolang.float" data="float" line="365" loc="Φ.org.eolang.math.number$sqrt$babylonian-method.x-old.α0" pos="13">0.0</o>
//   </o>
//   <o base="org.eolang.memory" line="366" loc="Φ.org.eolang.math.number$sqrt$babylonian-method.diff" name="diff" pos="6"> 
//     <o base="org.eolang.float" data="float" line="366" loc="Φ.org.eolang.math.number$sqrt$babylonian-method.diff.α0" pos="13">1.0</o>
//   </o>
//   <o base="org.eolang.seq" line="367" loc="Φ.org.eolang.math.number$sqrt$babylonian-method.φ" name="@" pos="6"> 
//     <o base=".while" line="368" loc="Φ.org.eolang.math.number$sqrt$babylonian-method.φ.α0" pos="8"> 
//       <o base=".gt" line="369" loc="Φ.org.eolang.math.number$sqrt$babylonian-method.φ.α0.ρ" pos="10"> 
//         <o base="diff" line="370" loc="Φ.org.eolang.math.number$sqrt$babylonian-method.φ.α0.ρ.ρ" pos="12" ref="366"/>
//         <o base="org.eolang.float" data="float" line="371" loc="Φ.org.eolang.math.number$sqrt$babylonian-method.φ.α0.ρ.α0" pos="12">1.0E-15</o>
//       </o>
//       <o base="number$sqrt$babylonian-method$t4$t0$a1" cut="426" line="372" loc="Φ.org.eolang.math.number$sqrt$babylonian-method.φ.α0.α0" pos="10" ref="372"> 
//         <o as="a" base="a" level="1" loc="Φ.org.eolang.math.number$sqrt$babylonian-method.φ.α0.α0.α0" ref="363"/>
//         <o as="x-new" base="x-new" level="1" loc="Φ.org.eolang.math.number$sqrt$babylonian-method.φ.α0.α0.α1" ref="364"/>
//         <o as="x-old" base="x-old" level="1" loc="Φ.org.eolang.math.number$sqrt$babylonian-method.φ.α0.α0.α2" ref="365"/>
//         <o as="diff" base="diff" level="1" loc="Φ.org.eolang.math.number$sqrt$babylonian-method.φ.α0.α0.α3" ref="366"/>
//         <o as="n" base="n" level="3" loc="Φ.org.eolang.math.number$sqrt$babylonian-method.φ.α0.α0.α4" ref="363.34.466"/>
//         <o as="is-nan" base="is-nan" level="3" loc="Φ.org.eolang.math.number$sqrt$babylonian-method.φ.α0.α0.α5" ref="363.69.466"/>
//         <o as="as-float" base="as-float" level="3" loc="Φ.org.eolang.math.number$sqrt$babylonian-method.φ.α0.α0.α6" ref="363.390.466"/>
//       </o>
//     </o>
//     <o base="x-new" line="388" loc="Φ.org.eolang.math.number$sqrt$babylonian-method.φ.α1" pos="8" ref="364"/>
//   </o>
//   <o level="2" line="363.34.466" loc="Φ.org.eolang.math.number$sqrt$babylonian-method.n" name="n"/>
//   <o level="2" line="363.69.466" loc="Φ.org.eolang.math.number$sqrt$babylonian-method.is-nan" name="is-nan"/>
//   <o level="2" line="363.390.466" loc="Φ.org.eolang.math.number$sqrt$babylonian-method.as-float" name="as-float"/>
// </o>
@XmirObject(name = "number$sqrt$babylonian-method", oname = "babylonian-method", source = "/home/tardis3/eo/eo-runtime/target/eo-test/3-pull/org/eolang/math/number.eo")
public final class EOnumber$EOsqrt$EObabylonian_method extends PhDefault {
  public EOnumber$EOsqrt$EObabylonian_method(final Phi sigma) {
    super(sigma);
    this.add("a", new AtFree(/* default */));
    this.add("x-new", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("memory").get();
        ret = new PhLocated(ret, 364, 6, "Φ.org.eolang.math.number$sqrt$babylonian-method.x-new");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOfloat(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 364, 13, "Φ.org.eolang.math.number$sqrt$babylonian-method.x-new.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>(1.0d));
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
    this.add("x-old", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("memory").get();
        ret = new PhLocated(ret, 365, 6, "Φ.org.eolang.math.number$sqrt$babylonian-method.x-old");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOfloat(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 365, 13, "Φ.org.eolang.math.number$sqrt$babylonian-method.x-old.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>(0.0d));
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
    this.add("diff", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("memory").get();
        ret = new PhLocated(ret, 366, 6, "Φ.org.eolang.math.number$sqrt$babylonian-method.diff");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOfloat(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 366, 13, "Φ.org.eolang.math.number$sqrt$babylonian-method.diff.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>(1.0d));
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("seq").get();
        ret = new PhLocated(ret, 367, 6, "Φ.org.eolang.math.number$sqrt$babylonian-method.φ");
      ret = new PhCopy(ret);
        Phi ret_1_base_base = new PhMethod(rho, "diff");
          ret_1_base_base = new PhLocated(ret_1_base_base, 370, 12, "Φ.org.eolang.math.number$sqrt$babylonian-method.φ.α0.ρ.ρ");
        Phi ret_1_base = new PhMethod(ret_1_base_base, "gt");
          ret_1_base = new PhLocated(ret_1_base, 369, 10, "Φ.org.eolang.math.number$sqrt$babylonian-method.φ.α0.ρ");
        ret_1_base = new PhCopy(ret_1_base);
          Phi ret_1_base_1 = new EOorg.EOeolang.EOfloat(Phi.Φ);
            ret_1_base_1 = new PhLocated(ret_1_base_1, 371, 12, "Φ.org.eolang.math.number$sqrt$babylonian-method.φ.α0.ρ.α0");
            ret_1_base_1 = new PhWith(ret_1_base_1, "Δ", new Data.Value<>(1.0E-15d));
          ret_1_base = new PhWith(ret_1_base, 0, ret_1_base_1);
        Phi ret_1 = new PhMethod(ret_1_base, "while");
          ret_1 = new PhLocated(ret_1, 368, 8, "Φ.org.eolang.math.number$sqrt$babylonian-method.φ.α0");
        ret_1 = new PhCopy(ret_1);
          Phi ret_1_1 = new EOnumber$EOsqrt$EObabylonian_method$EOt4$EOt0$EOa1(rho);
            ret_1_1 = new PhLocated(ret_1_1, 372, 10, "Φ.org.eolang.math.number$sqrt$babylonian-method.φ.α0.α0");
          ret_1 = new PhWith(ret_1, 0, ret_1_1);
        Phi ret_2 = new PhMethod(rho, "x-new");
          ret_2 = new PhLocated(ret_2, 388, 8, "Φ.org.eolang.math.number$sqrt$babylonian-method.φ.α1");
        ret = new PhWith(ret, 0, ret_1);
        ret = new PhWith(ret, 1, ret_2);
      return ret;
    })));
  }
}
