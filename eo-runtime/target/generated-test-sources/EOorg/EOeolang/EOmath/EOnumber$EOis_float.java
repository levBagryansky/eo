
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT b5a4c9a 2023-08-17T12:29:38) on 2023-08-18T14:42:30.920527Z; your changes will be discarded on the next build */
package EOorg.EOeolang.EOmath;

import org.eolang.*;

// <o abstract="" ancestors="1" line="53" loc="Φ.org.eolang.math.number$is-float" name="number$is-float" original-name="is-float" parent="number" pos="2"> 
//   <o base=".n" const="" line="56" loc="Φ.org.eolang.math.number$is-float.value" name="value" pos="5"> 
//     <o base="^" line="56" loc="Φ.org.eolang.math.number$is-float.value.ρ" pos="4"/>
//   </o>
//   <o base=".if" line="57" loc="Φ.org.eolang.math.number$is-float.φ" name="@" pos="4"> 
//     <o base=".eq" line="58" loc="Φ.org.eolang.math.number$is-float.φ.ρ" pos="11"> 
//       <o base="value" line="58" loc="Φ.org.eolang.math.number$is-float.φ.ρ.ρ" pos="6" ref="56"/>
//       <o base="org.eolang.float" data="float" line="58" loc="Φ.org.eolang.math.number$is-float.φ.ρ.α0" pos="15">0.0</o>
//     </o>
//     <o base="org.eolang.bool" data="bool" line="59" loc="Φ.org.eolang.math.number$is-float.φ.α0" pos="6">TRUE</o>
//     <o base=".if" line="60" loc="Φ.org.eolang.math.number$is-float.φ.α1" pos="6"> 
//       <o base=".eq" line="61" loc="Φ.org.eolang.math.number$is-float.φ.α1.ρ" pos="13"> 
//         <o base="value" line="61" loc="Φ.org.eolang.math.number$is-float.φ.α1.ρ.ρ" pos="8" ref="56"/>
//         <o base="org.eolang.int" data="int" line="61" loc="Φ.org.eolang.math.number$is-float.φ.α1.ρ.α0" pos="17">0</o>
//       </o>
//       <o base="org.eolang.bool" data="bool" line="62" loc="Φ.org.eolang.math.number$is-float.φ.α1.α0" pos="8">FALSE</o>
//       <o base=".eq" line="63" loc="Φ.org.eolang.math.number$is-float.φ.α1.α1" pos="8"> 
//         <o base=".div" line="64" loc="Φ.org.eolang.math.number$is-float.φ.α1.α1.ρ" pos="10"> 
//           <o base="value" line="65" loc="Φ.org.eolang.math.number$is-float.φ.α1.α1.ρ.ρ" pos="12" ref="56"/>
//           <o base="value" line="66" loc="Φ.org.eolang.math.number$is-float.φ.α1.α1.ρ.α0" pos="12" ref="56"/>
//         </o>
//         <o base="org.eolang.float" data="float" line="67" loc="Φ.org.eolang.math.number$is-float.φ.α1.α1.α0" pos="10">1.0</o>
//       </o>
//     </o>
//   </o>
// </o>
@XmirObject(name = "number$is-float", oname = "is-float", source = "/home/tardis3/eo/eo-runtime/target/eo-test/3-pull/org/eolang/math/number.eo")
public final class EOnumber$EOis_float extends PhDefault {
  public EOnumber$EOis_float(final Phi sigma) {
    super(sigma);
    this.add("value", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = new PhMethod(rho, "ρ");
        ret_base = new PhLocated(ret_base, 56, 4, "Φ.org.eolang.math.number$is-float.value.ρ");
      Phi ret = new PhMethod(ret_base, "n");
        ret = new PhLocated(ret, 56, 5, "Φ.org.eolang.math.number$is-float.value");
      ret = new PhConst(ret);
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base_base = new PhMethod(rho, "value");
        ret_base_base = new PhLocated(ret_base_base, 58, 6, "Φ.org.eolang.math.number$is-float.φ.ρ.ρ");
      Phi ret_base = new PhMethod(ret_base_base, "eq");
        ret_base = new PhLocated(ret_base, 58, 11, "Φ.org.eolang.math.number$is-float.φ.ρ");
      ret_base = new PhCopy(ret_base);
        Phi ret_base_1 = new EOorg.EOeolang.EOfloat(Phi.Φ);
          ret_base_1 = new PhLocated(ret_base_1, 58, 15, "Φ.org.eolang.math.number$is-float.φ.ρ.α0");
          ret_base_1 = new PhWith(ret_base_1, "Δ", new Data.Value<>(0.0d));
        ret_base = new PhWith(ret_base, 0, ret_base_1);
      Phi ret = new PhMethod(ret_base, "if");
        ret = new PhLocated(ret, 57, 4, "Φ.org.eolang.math.number$is-float.φ");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EObool(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 59, 6, "Φ.org.eolang.math.number$is-float.φ.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>(Boolean.TRUE));
        Phi ret_2_base_base = new PhMethod(rho, "value");
          ret_2_base_base = new PhLocated(ret_2_base_base, 61, 8, "Φ.org.eolang.math.number$is-float.φ.α1.ρ.ρ");
        Phi ret_2_base = new PhMethod(ret_2_base_base, "eq");
          ret_2_base = new PhLocated(ret_2_base, 61, 13, "Φ.org.eolang.math.number$is-float.φ.α1.ρ");
        ret_2_base = new PhCopy(ret_2_base);
          Phi ret_2_base_1 = new EOorg.EOeolang.EOint(Phi.Φ);
            ret_2_base_1 = new PhLocated(ret_2_base_1, 61, 17, "Φ.org.eolang.math.number$is-float.φ.α1.ρ.α0");
            ret_2_base_1 = new PhWith(ret_2_base_1, "Δ", new Data.Value<>(0L));
          ret_2_base = new PhWith(ret_2_base, 0, ret_2_base_1);
        Phi ret_2 = new PhMethod(ret_2_base, "if");
          ret_2 = new PhLocated(ret_2, 60, 6, "Φ.org.eolang.math.number$is-float.φ.α1");
        ret_2 = new PhCopy(ret_2);
          Phi ret_2_1 = new EOorg.EOeolang.EObool(Phi.Φ);
            ret_2_1 = new PhLocated(ret_2_1, 62, 8, "Φ.org.eolang.math.number$is-float.φ.α1.α0");
            ret_2_1 = new PhWith(ret_2_1, "Δ", new Data.Value<>(Boolean.FALSE));
          Phi ret_2_2_base_base = new PhMethod(rho, "value");
            ret_2_2_base_base = new PhLocated(ret_2_2_base_base, 65, 12, "Φ.org.eolang.math.number$is-float.φ.α1.α1.ρ.ρ");
          Phi ret_2_2_base = new PhMethod(ret_2_2_base_base, "div");
            ret_2_2_base = new PhLocated(ret_2_2_base, 64, 10, "Φ.org.eolang.math.number$is-float.φ.α1.α1.ρ");
          ret_2_2_base = new PhCopy(ret_2_2_base);
            Phi ret_2_2_base_1 = new PhMethod(rho, "value");
              ret_2_2_base_1 = new PhLocated(ret_2_2_base_1, 66, 12, "Φ.org.eolang.math.number$is-float.φ.α1.α1.ρ.α0");
            ret_2_2_base = new PhWith(ret_2_2_base, 0, ret_2_2_base_1);
          Phi ret_2_2 = new PhMethod(ret_2_2_base, "eq");
            ret_2_2 = new PhLocated(ret_2_2, 63, 8, "Φ.org.eolang.math.number$is-float.φ.α1.α1");
          ret_2_2 = new PhCopy(ret_2_2);
            Phi ret_2_2_1 = new EOorg.EOeolang.EOfloat(Phi.Φ);
              ret_2_2_1 = new PhLocated(ret_2_2_1, 67, 10, "Φ.org.eolang.math.number$is-float.φ.α1.α1.α0");
              ret_2_2_1 = new PhWith(ret_2_2_1, "Δ", new Data.Value<>(1.0d));
            ret_2_2 = new PhWith(ret_2_2, 0, ret_2_2_1);
          ret_2 = new PhWith(ret_2, 0, ret_2_1);
          ret_2 = new PhWith(ret_2, 1, ret_2_2);
        ret = new PhWith(ret, 0, ret_1);
        ret = new PhWith(ret, 1, ret_2);
      return ret;
    })));
  }
}
