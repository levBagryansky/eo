
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT e24f541 2023-09-12T11:41:32) on 2023-10-03T10:45:38.539230Z; your changes will be discarded on the next build */
package EOorg.EOeolang;

import org.eolang.*;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

// <o abstract="" line="40" loc="Φ.org.eolang.empty-tuple-length" name="empty-tuple-length" original-name="empty-tuple-length" pos="0"> 
//   <o base="empty-tuple-length$arr" cut="14" line="41" loc="Φ.org.eolang.empty-tuple-length.arr" name="arr" pos="2" ref="41"/>
//   <o base=".eq" line="42" loc="Φ.org.eolang.empty-tuple-length.φ" name="@" pos="2"> 
//     <o base=".length" line="43" loc="Φ.org.eolang.empty-tuple-length.φ.ρ" pos="16"> 
//       <o base=".elements" line="43" loc="Φ.org.eolang.empty-tuple-length.φ.ρ.ρ" pos="7"> 
//         <o base="arr" line="43" loc="Φ.org.eolang.empty-tuple-length.φ.ρ.ρ.ρ" pos="4" ref="41"/>
//       </o>
//     </o>
//     <o base="org.eolang.int" data="int" line="44" loc="Φ.org.eolang.empty-tuple-length.φ.α0" pos="4">0</o>
//   </o>
// </o>
@XmirObject(name = "empty-tuple-lengthTest", oname = "empty-tuple-length", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/tuple-tests.eo")
public final class EOempty_tuple_lengthTest extends PhDefault {
    
  public EOempty_tuple_lengthTest() {
    this.add("arr", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new EOω1arr(rho);
        ret = new PhLocated(ret, 41, 2, "Φ.org.eolang.empty-tuple-length.arr");
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base_base_base = new PhMethod(rho, "arr");
        ret_base_base_base = new PhLocated(ret_base_base_base, 43, 4, "Φ.org.eolang.empty-tuple-length.φ.ρ.ρ.ρ");
      Phi ret_base_base = new PhMethod(ret_base_base_base, "elements");
        ret_base_base = new PhLocated(ret_base_base, 43, 7, "Φ.org.eolang.empty-tuple-length.φ.ρ.ρ");
      Phi ret_base = new PhMethod(ret_base_base, "length");
        ret_base = new PhLocated(ret_base, 43, 16, "Φ.org.eolang.empty-tuple-length.φ.ρ");
      Phi ret = new PhMethod(ret_base, "eq");
        ret = new PhLocated(ret, 42, 2, "Φ.org.eolang.empty-tuple-length.φ");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 44, 4, "Φ.org.eolang.empty-tuple-length.φ.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>(0L));
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
  }

  @Test
  public void works() throws java.lang.Exception {
    Object obj = new Dataized(new EOempty_tuple_lengthTest()).take();
    if (obj instanceof String) {
      Assertions.fail(obj.toString());
    } else {
      Assertions.assertTrue((Boolean) obj);
    }
  }

// <o abstract="" ancestors="1" line="41" loc="Φ.org.eolang.empty-tuple-length$arr" name="empty-tuple-length$arr" original-name="arr" parent="empty-tuple-length" pos="2"> 
//   <o line="41" loc="Φ.org.eolang.empty-tuple-length$arr.elements" name="elements" pos="3" vararg=""/>
// </o>
@XmirObject(name = "ω1arr", oname = "arr", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/tuple-tests.eo")
public final class EOω1arr extends PhDefault {
    
  public EOω1arr(final Phi sigma) {
    super(sigma);
    this.add("elements", new AtVararg(/* default */));
  }
}
}
