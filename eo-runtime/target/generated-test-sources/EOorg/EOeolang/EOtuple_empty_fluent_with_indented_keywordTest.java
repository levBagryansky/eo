
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT e24f541 2023-09-12T11:41:32) on 2023-10-03T10:45:38.539230Z; your changes will be discarded on the next build */
package EOorg.EOeolang;

import org.eolang.*;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

// <o abstract="" line="164" loc="Φ.org.eolang.tuple-empty-fluent-with-indented-keyword" name="tuple-empty-fluent-with-indented-keyword" original-name="tuple-empty-fluent-with-indented-keyword" pos="0"> 
//   <o base=".with" line="168" loc="Φ.org.eolang.tuple-empty-fluent-with-indented-keyword.arr" name="arr" pos="2"> 
//     <o base=".with" line="167" loc="Φ.org.eolang.tuple-empty-fluent-with-indented-keyword.arr.ρ" pos="2"> 
//       <o base=".with" line="166" loc="Φ.org.eolang.tuple-empty-fluent-with-indented-keyword.arr.ρ.ρ" pos="2"> 
//         <o base="org.eolang.tuple" line="165" loc="Φ.org.eolang.tuple-empty-fluent-with-indented-keyword.arr.ρ.ρ.ρ" pos="2"/>
//         <o base="org.eolang.int" data="int" line="166" loc="Φ.org.eolang.tuple-empty-fluent-with-indented-keyword.arr.ρ.ρ.α0" pos="8">1</o>
//       </o>
//       <o base="org.eolang.int" data="int" line="167" loc="Φ.org.eolang.tuple-empty-fluent-with-indented-keyword.arr.ρ.α0" pos="8">2</o>
//     </o>
//     <o base="org.eolang.int" data="int" line="168" loc="Φ.org.eolang.tuple-empty-fluent-with-indented-keyword.arr.α0" pos="8">3</o>
//   </o>
//   <o base=".and" line="169" loc="Φ.org.eolang.tuple-empty-fluent-with-indented-keyword.φ" name="@" pos="2"> 
//     <o base=".eq" line="170" loc="Φ.org.eolang.tuple-empty-fluent-with-indented-keyword.φ.ρ" pos="4"> 
//       <o base=".at" line="171" loc="Φ.org.eolang.tuple-empty-fluent-with-indented-keyword.φ.ρ.ρ" pos="9"> 
//         <o base="arr" line="171" loc="Φ.org.eolang.tuple-empty-fluent-with-indented-keyword.φ.ρ.ρ.ρ" pos="6" ref="168"/>
//         <o base="org.eolang.int" data="int" line="171" loc="Φ.org.eolang.tuple-empty-fluent-with-indented-keyword.φ.ρ.ρ.α0" pos="13">0</o>
//       </o>
//       <o base="org.eolang.int" data="int" line="172" loc="Φ.org.eolang.tuple-empty-fluent-with-indented-keyword.φ.ρ.α0" pos="6">1</o>
//     </o>
//     <o base=".eq" line="173" loc="Φ.org.eolang.tuple-empty-fluent-with-indented-keyword.φ.α0" pos="4"> 
//       <o base=".at" line="174" loc="Φ.org.eolang.tuple-empty-fluent-with-indented-keyword.φ.α0.ρ" pos="9"> 
//         <o base="arr" line="174" loc="Φ.org.eolang.tuple-empty-fluent-with-indented-keyword.φ.α0.ρ.ρ" pos="6" ref="168"/>
//         <o base="org.eolang.int" data="int" line="174" loc="Φ.org.eolang.tuple-empty-fluent-with-indented-keyword.φ.α0.ρ.α0" pos="13">1</o>
//       </o>
//       <o base="org.eolang.int" data="int" line="175" loc="Φ.org.eolang.tuple-empty-fluent-with-indented-keyword.φ.α0.α0" pos="6">2</o>
//     </o>
//     <o base=".eq" line="176" loc="Φ.org.eolang.tuple-empty-fluent-with-indented-keyword.φ.α1" pos="4"> 
//       <o base=".at" line="177" loc="Φ.org.eolang.tuple-empty-fluent-with-indented-keyword.φ.α1.ρ" pos="9"> 
//         <o base="arr" line="177" loc="Φ.org.eolang.tuple-empty-fluent-with-indented-keyword.φ.α1.ρ.ρ" pos="6" ref="168"/>
//         <o base="org.eolang.int" data="int" line="177" loc="Φ.org.eolang.tuple-empty-fluent-with-indented-keyword.φ.α1.ρ.α0" pos="13">2</o>
//       </o>
//       <o base="org.eolang.int" data="int" line="178" loc="Φ.org.eolang.tuple-empty-fluent-with-indented-keyword.φ.α1.α0" pos="6">3</o>
//     </o>
//   </o>
// </o>
@XmirObject(name = "tuple-empty-fluent-with-indented-keywordTest", oname = "tuple-empty-fluent-with-indented-keyword", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/tuple-tests.eo")
public final class EOtuple_empty_fluent_with_indented_keywordTest extends PhDefault {
    
  public EOtuple_empty_fluent_with_indented_keywordTest() {
    this.add("arr", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base_base_base = Phi.Φ.attr("org").get().attr("eolang").get().attr("tuple").get();
        ret_base_base_base = new PhLocated(ret_base_base_base, 165, 2, "Φ.org.eolang.tuple-empty-fluent-with-indented-keyword.arr.ρ.ρ.ρ");
      Phi ret_base_base = new PhMethod(ret_base_base_base, "with");
        ret_base_base = new PhLocated(ret_base_base, 166, 2, "Φ.org.eolang.tuple-empty-fluent-with-indented-keyword.arr.ρ.ρ");
      ret_base_base = new PhCopy(ret_base_base);
        Phi ret_base_base_1 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_base_base_1 = new PhLocated(ret_base_base_1, 166, 8, "Φ.org.eolang.tuple-empty-fluent-with-indented-keyword.arr.ρ.ρ.α0");
          ret_base_base_1 = new PhWith(ret_base_base_1, "Δ", new Data.Value<>(1L));
        ret_base_base = new PhWith(ret_base_base, 0, ret_base_base_1);
      Phi ret_base = new PhMethod(ret_base_base, "with");
        ret_base = new PhLocated(ret_base, 167, 2, "Φ.org.eolang.tuple-empty-fluent-with-indented-keyword.arr.ρ");
      ret_base = new PhCopy(ret_base);
        Phi ret_base_1 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_base_1 = new PhLocated(ret_base_1, 167, 8, "Φ.org.eolang.tuple-empty-fluent-with-indented-keyword.arr.ρ.α0");
          ret_base_1 = new PhWith(ret_base_1, "Δ", new Data.Value<>(2L));
        ret_base = new PhWith(ret_base, 0, ret_base_1);
      Phi ret = new PhMethod(ret_base, "with");
        ret = new PhLocated(ret, 168, 2, "Φ.org.eolang.tuple-empty-fluent-with-indented-keyword.arr");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 168, 8, "Φ.org.eolang.tuple-empty-fluent-with-indented-keyword.arr.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>(3L));
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base_base_base = new PhMethod(rho, "arr");
        ret_base_base_base = new PhLocated(ret_base_base_base, 171, 6, "Φ.org.eolang.tuple-empty-fluent-with-indented-keyword.φ.ρ.ρ.ρ");
      Phi ret_base_base = new PhMethod(ret_base_base_base, "at");
        ret_base_base = new PhLocated(ret_base_base, 171, 9, "Φ.org.eolang.tuple-empty-fluent-with-indented-keyword.φ.ρ.ρ");
      ret_base_base = new PhCopy(ret_base_base);
        Phi ret_base_base_1 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_base_base_1 = new PhLocated(ret_base_base_1, 171, 13, "Φ.org.eolang.tuple-empty-fluent-with-indented-keyword.φ.ρ.ρ.α0");
          ret_base_base_1 = new PhWith(ret_base_base_1, "Δ", new Data.Value<>(0L));
        ret_base_base = new PhWith(ret_base_base, 0, ret_base_base_1);
      Phi ret_base = new PhMethod(ret_base_base, "eq");
        ret_base = new PhLocated(ret_base, 170, 4, "Φ.org.eolang.tuple-empty-fluent-with-indented-keyword.φ.ρ");
      ret_base = new PhCopy(ret_base);
        Phi ret_base_1 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_base_1 = new PhLocated(ret_base_1, 172, 6, "Φ.org.eolang.tuple-empty-fluent-with-indented-keyword.φ.ρ.α0");
          ret_base_1 = new PhWith(ret_base_1, "Δ", new Data.Value<>(1L));
        ret_base = new PhWith(ret_base, 0, ret_base_1);
      Phi ret = new PhMethod(ret_base, "and");
        ret = new PhLocated(ret, 169, 2, "Φ.org.eolang.tuple-empty-fluent-with-indented-keyword.φ");
      ret = new PhCopy(ret);
        Phi ret_1_base_base = new PhMethod(rho, "arr");
          ret_1_base_base = new PhLocated(ret_1_base_base, 174, 6, "Φ.org.eolang.tuple-empty-fluent-with-indented-keyword.φ.α0.ρ.ρ");
        Phi ret_1_base = new PhMethod(ret_1_base_base, "at");
          ret_1_base = new PhLocated(ret_1_base, 174, 9, "Φ.org.eolang.tuple-empty-fluent-with-indented-keyword.φ.α0.ρ");
        ret_1_base = new PhCopy(ret_1_base);
          Phi ret_1_base_1 = new EOorg.EOeolang.EOint(Phi.Φ);
            ret_1_base_1 = new PhLocated(ret_1_base_1, 174, 13, "Φ.org.eolang.tuple-empty-fluent-with-indented-keyword.φ.α0.ρ.α0");
            ret_1_base_1 = new PhWith(ret_1_base_1, "Δ", new Data.Value<>(1L));
          ret_1_base = new PhWith(ret_1_base, 0, ret_1_base_1);
        Phi ret_1 = new PhMethod(ret_1_base, "eq");
          ret_1 = new PhLocated(ret_1, 173, 4, "Φ.org.eolang.tuple-empty-fluent-with-indented-keyword.φ.α0");
        ret_1 = new PhCopy(ret_1);
          Phi ret_1_1 = new EOorg.EOeolang.EOint(Phi.Φ);
            ret_1_1 = new PhLocated(ret_1_1, 175, 6, "Φ.org.eolang.tuple-empty-fluent-with-indented-keyword.φ.α0.α0");
            ret_1_1 = new PhWith(ret_1_1, "Δ", new Data.Value<>(2L));
          ret_1 = new PhWith(ret_1, 0, ret_1_1);
        Phi ret_2_base_base = new PhMethod(rho, "arr");
          ret_2_base_base = new PhLocated(ret_2_base_base, 177, 6, "Φ.org.eolang.tuple-empty-fluent-with-indented-keyword.φ.α1.ρ.ρ");
        Phi ret_2_base = new PhMethod(ret_2_base_base, "at");
          ret_2_base = new PhLocated(ret_2_base, 177, 9, "Φ.org.eolang.tuple-empty-fluent-with-indented-keyword.φ.α1.ρ");
        ret_2_base = new PhCopy(ret_2_base);
          Phi ret_2_base_1 = new EOorg.EOeolang.EOint(Phi.Φ);
            ret_2_base_1 = new PhLocated(ret_2_base_1, 177, 13, "Φ.org.eolang.tuple-empty-fluent-with-indented-keyword.φ.α1.ρ.α0");
            ret_2_base_1 = new PhWith(ret_2_base_1, "Δ", new Data.Value<>(2L));
          ret_2_base = new PhWith(ret_2_base, 0, ret_2_base_1);
        Phi ret_2 = new PhMethod(ret_2_base, "eq");
          ret_2 = new PhLocated(ret_2, 176, 4, "Φ.org.eolang.tuple-empty-fluent-with-indented-keyword.φ.α1");
        ret_2 = new PhCopy(ret_2);
          Phi ret_2_1 = new EOorg.EOeolang.EOint(Phi.Φ);
            ret_2_1 = new PhLocated(ret_2_1, 178, 6, "Φ.org.eolang.tuple-empty-fluent-with-indented-keyword.φ.α1.α0");
            ret_2_1 = new PhWith(ret_2_1, "Δ", new Data.Value<>(3L));
          ret_2 = new PhWith(ret_2, 0, ret_2_1);
        ret = new PhWith(ret, 0, ret_1);
        ret = new PhWith(ret, 1, ret_2);
      return ret;
    })));
  }

  @Test
  public void works() throws java.lang.Exception {
    Object obj = new Dataized(new EOtuple_empty_fluent_with_indented_keywordTest()).take();
    if (obj instanceof String) {
      Assertions.fail(obj.toString());
    } else {
      Assertions.assertTrue((Boolean) obj);
    }
  }
}
