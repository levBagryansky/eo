
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT e24f541 2023-09-12T11:41:32) on 2023-10-03T10:45:38.539230Z; your changes will be discarded on the next build */
package EOorg.EOeolang;

import org.eolang.*;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

// <o abstract="" line="142" loc="Φ.org.eolang.infinite-loop-check" name="infinite-loop-check" original-name="infinite-loop-check" pos="0"> 
//   <o base="infinite-loop-check$pyint" cut="195" line="143" loc="Φ.org.eolang.infinite-loop-check.pyint" name="pyint" pos="2" ref="143"/>
//   <o base="org.eolang.cage" line="146" loc="Φ.org.eolang.infinite-loop-check.x" name="x" pos="2"> 
//     <o base="pyint" line="146" loc="Φ.org.eolang.infinite-loop-check.x.α0" pos="7" ref="143"/>
//   </o>
//   <o base="org.eolang.cage" line="147" loc="Φ.org.eolang.infinite-loop-check.tmp" name="tmp" pos="2"> 
//     <o base=".add" line="148" loc="Φ.org.eolang.infinite-loop-check.tmp.α0" pos="5"> 
//       <o base="x" line="148" loc="Φ.org.eolang.infinite-loop-check.tmp.α0.ρ" pos="4" ref="146"/>
//     </o>
//   </o>
//   <o base=".eq" line="149" loc="Φ.org.eolang.infinite-loop-check.φ" name="@" pos="2"> 
//     <o base="org.eolang.seq" line="150" loc="Φ.org.eolang.infinite-loop-check.φ.ρ" pos="4"> 
//       <o base=".write" line="151" loc="Φ.org.eolang.infinite-loop-check.φ.ρ.α0" pos="7"> 
//         <o base="x" line="151" loc="Φ.org.eolang.infinite-loop-check.φ.ρ.α0.ρ" pos="6" ref="146"/>
//         <o base="pyint" line="152" loc="Φ.org.eolang.infinite-loop-check.φ.ρ.α0.α0" pos="8" ref="143"> 
//           <o base="org.eolang.int" data="int" line="152" loc="Φ.org.eolang.infinite-loop-check.φ.ρ.α0.α0.α0" pos="14">0</o>
//         </o>
//       </o>
//       <o base=".write" line="153" loc="Φ.org.eolang.infinite-loop-check.φ.ρ.α1" pos="9"> 
//         <o base="tmp" line="153" loc="Φ.org.eolang.infinite-loop-check.φ.ρ.α1.ρ" pos="6" ref="147"/>
//         <o base=".add" line="154" loc="Φ.org.eolang.infinite-loop-check.φ.ρ.α1.α0" pos="9"> 
//           <o base="x" line="154" loc="Φ.org.eolang.infinite-loop-check.φ.ρ.α1.α0.ρ" pos="8" ref="146"/>
//           <o base="pyint" line="154" loc="Φ.org.eolang.infinite-loop-check.φ.ρ.α1.α0.α0" pos="15" ref="143" scope="scope-95e9b574-40ab-4d0a-9e0b-b54763eaa424"> 
//             <o base="org.eolang.int" data="int" line="154" loc="Φ.org.eolang.infinite-loop-check.φ.ρ.α1.α0.α0.α0" pos="21" scope="scope-95e9b574-40ab-4d0a-9e0b-b54763eaa424">1</o>
//           </o>
//         </o>
//       </o>
//       <o base=".value" line="155" loc="Φ.org.eolang.infinite-loop-check.φ.ρ.α2" pos="9"> 
//         <o base="tmp" line="155" loc="Φ.org.eolang.infinite-loop-check.φ.ρ.α2.ρ" pos="6" ref="147"/>
//       </o>
//     </o>
//     <o base="org.eolang.int" data="int" line="156" loc="Φ.org.eolang.infinite-loop-check.φ.α0" pos="4">1</o>
//   </o>
// </o>
@XmirObject(name = "infinite-loop-checkTest", oname = "infinite-loop-check", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/cage-tests.eo")
public final class EOinfinite_loop_checkTest extends PhDefault {
    
  public EOinfinite_loop_checkTest() {
    this.add("pyint", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new EOω1pyint(rho);
        ret = new PhLocated(ret, 143, 2, "Φ.org.eolang.infinite-loop-check.pyint");
      return ret;
    })));
    this.add("x", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("cage").get();
        ret = new PhLocated(ret, 146, 2, "Φ.org.eolang.infinite-loop-check.x");
      ret = new PhCopy(ret);
        Phi ret_1 = new PhMethod(rho, "pyint");
          ret_1 = new PhLocated(ret_1, 146, 7, "Φ.org.eolang.infinite-loop-check.x.α0");
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
    this.add("tmp", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("cage").get();
        ret = new PhLocated(ret, 147, 2, "Φ.org.eolang.infinite-loop-check.tmp");
      ret = new PhCopy(ret);
        Phi ret_1_base = new PhMethod(rho, "x");
          ret_1_base = new PhLocated(ret_1_base, 148, 4, "Φ.org.eolang.infinite-loop-check.tmp.α0.ρ");
        Phi ret_1 = new PhMethod(ret_1_base, "add");
          ret_1 = new PhLocated(ret_1, 148, 5, "Φ.org.eolang.infinite-loop-check.tmp.α0");
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = Phi.Φ.attr("org").get().attr("eolang").get().attr("seq").get();
        ret_base = new PhLocated(ret_base, 150, 4, "Φ.org.eolang.infinite-loop-check.φ.ρ");
      ret_base = new PhCopy(ret_base);
        Phi ret_base_1_base = new PhMethod(rho, "x");
          ret_base_1_base = new PhLocated(ret_base_1_base, 151, 6, "Φ.org.eolang.infinite-loop-check.φ.ρ.α0.ρ");
        Phi ret_base_1 = new PhMethod(ret_base_1_base, "write");
          ret_base_1 = new PhLocated(ret_base_1, 151, 7, "Φ.org.eolang.infinite-loop-check.φ.ρ.α0");
        ret_base_1 = new PhCopy(ret_base_1);
          Phi ret_base_1_1 = new PhMethod(rho, "pyint");
            ret_base_1_1 = new PhLocated(ret_base_1_1, 152, 8, "Φ.org.eolang.infinite-loop-check.φ.ρ.α0.α0");
          ret_base_1_1 = new PhCopy(ret_base_1_1);
            Phi ret_base_1_1_1 = new EOorg.EOeolang.EOint(Phi.Φ);
              ret_base_1_1_1 = new PhLocated(ret_base_1_1_1, 152, 14, "Φ.org.eolang.infinite-loop-check.φ.ρ.α0.α0.α0");
              ret_base_1_1_1 = new PhWith(ret_base_1_1_1, "Δ", new Data.Value<>(0L));
            ret_base_1_1 = new PhWith(ret_base_1_1, 0, ret_base_1_1_1);
          ret_base_1 = new PhWith(ret_base_1, 0, ret_base_1_1);
        Phi ret_base_2_base = new PhMethod(rho, "tmp");
          ret_base_2_base = new PhLocated(ret_base_2_base, 153, 6, "Φ.org.eolang.infinite-loop-check.φ.ρ.α1.ρ");
        Phi ret_base_2 = new PhMethod(ret_base_2_base, "write");
          ret_base_2 = new PhLocated(ret_base_2, 153, 9, "Φ.org.eolang.infinite-loop-check.φ.ρ.α1");
        ret_base_2 = new PhCopy(ret_base_2);
          Phi ret_base_2_1_base = new PhMethod(rho, "x");
            ret_base_2_1_base = new PhLocated(ret_base_2_1_base, 154, 8, "Φ.org.eolang.infinite-loop-check.φ.ρ.α1.α0.ρ");
          Phi ret_base_2_1 = new PhMethod(ret_base_2_1_base, "add");
            ret_base_2_1 = new PhLocated(ret_base_2_1, 154, 9, "Φ.org.eolang.infinite-loop-check.φ.ρ.α1.α0");
          ret_base_2_1 = new PhCopy(ret_base_2_1);
            Phi ret_base_2_1_1 = new PhMethod(rho, "pyint");
              ret_base_2_1_1 = new PhLocated(ret_base_2_1_1, 154, 15, "Φ.org.eolang.infinite-loop-check.φ.ρ.α1.α0.α0");
            ret_base_2_1_1 = new PhCopy(ret_base_2_1_1);
              Phi ret_base_2_1_1_1 = new EOorg.EOeolang.EOint(Phi.Φ);
                ret_base_2_1_1_1 = new PhLocated(ret_base_2_1_1_1, 154, 21, "Φ.org.eolang.infinite-loop-check.φ.ρ.α1.α0.α0.α0");
                ret_base_2_1_1_1 = new PhWith(ret_base_2_1_1_1, "Δ", new Data.Value<>(1L));
              ret_base_2_1_1 = new PhWith(ret_base_2_1_1, 0, ret_base_2_1_1_1);
            ret_base_2_1 = new PhWith(ret_base_2_1, 0, ret_base_2_1_1);
          ret_base_2 = new PhWith(ret_base_2, 0, ret_base_2_1);
        Phi ret_base_3_base = new PhMethod(rho, "tmp");
          ret_base_3_base = new PhLocated(ret_base_3_base, 155, 6, "Φ.org.eolang.infinite-loop-check.φ.ρ.α2.ρ");
        Phi ret_base_3 = new PhMethod(ret_base_3_base, "value");
          ret_base_3 = new PhLocated(ret_base_3, 155, 9, "Φ.org.eolang.infinite-loop-check.φ.ρ.α2");
        ret_base = new PhWith(ret_base, 0, ret_base_1);
        ret_base = new PhWith(ret_base, 1, ret_base_2);
        ret_base = new PhWith(ret_base, 2, ret_base_3);
      Phi ret = new PhMethod(ret_base, "eq");
        ret = new PhLocated(ret, 149, 2, "Φ.org.eolang.infinite-loop-check.φ");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 156, 4, "Φ.org.eolang.infinite-loop-check.φ.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>(1L));
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
  }

  @Test
  public void works() throws java.lang.Exception {
    Object obj = new Dataized(new EOinfinite_loop_checkTest()).take();
    if (obj instanceof String) {
      Assertions.fail(obj.toString());
    } else {
      Assertions.assertTrue((Boolean) obj);
    }
  }

// <o abstract="" ancestors="1" line="143" loc="Φ.org.eolang.infinite-loop-check$pyint" name="infinite-loop-check$pyint" original-name="pyint" parent="infinite-loop-check" pos="2"> 
//   <o line="143" loc="Φ.org.eolang.infinite-loop-check$pyint.value" name="value" pos="3"/>
//   <o base="infinite-loop-check$pyint$add" cut="196" line="144" loc="Φ.org.eolang.infinite-loop-check$pyint.add" name="add" pos="4" ref="144"> 
//     <o as="value" base="value" level="1" loc="Φ.org.eolang.infinite-loop-check$pyint.add.α0" ref="143"/>
//   </o>
// </o>
@XmirObject(name = "ω1pyint", oname = "pyint", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/cage-tests.eo")
public final class EOω1pyint extends PhDefault {
    
  public EOω1pyint(final Phi sigma) {
    super(sigma);
    this.add("value", new AtFree(/* default */));
    this.add("add", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new EOω2add(rho);
        ret = new PhLocated(ret, 144, 4, "Φ.org.eolang.infinite-loop-check$pyint.add");
      return ret;
    })));
  }

// <o abstract="" ancestors="2" line="144" loc="Φ.org.eolang.infinite-loop-check$pyint$add" name="infinite-loop-check$pyint$add" original-name="add" parent="infinite-loop-check$pyint" pos="4"> 
//   <o line="144" loc="Φ.org.eolang.infinite-loop-check$pyint$add.y" name="y" pos="5"/>
//   <o base="infinite-loop-check$pyint" line="145" loc="Φ.org.eolang.infinite-loop-check$pyint$add.φ" name="@" pos="6" ref="143"> 
//     <o base="infinite-loop-check$pyint$add$t1$generated-scope-0804578a-9e85-4619-82c6-d5c1fc28b57e" cut="197" line="145" loc="Φ.org.eolang.infinite-loop-check$pyint$add.φ.generated-scope-0804578a-9e85-4619-82c6-d5c1fc28b57e" name="generated-scope-0804578a-9e85-4619-82c6-d5c1fc28b57e" pos="18" ref="145"> 
//       <o as="y" base="y" level="1" loc="Φ.org.eolang.infinite-loop-check$pyint$add.φ.generated-scope-0804578a-9e85-4619-82c6-d5c1fc28b57e.α0" ref="144"/>
//       <o as="value" base="value" level="2" loc="Φ.org.eolang.infinite-loop-check$pyint$add.φ.generated-scope-0804578a-9e85-4619-82c6-d5c1fc28b57e.α1" ref="144.143.464"/>
//     </o>
//   </o>
//   <o level="1" line="144.143.464" loc="Φ.org.eolang.infinite-loop-check$pyint$add.value" name="value"/>
// </o>
@XmirObject(name = "ω2add", oname = "add", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/cage-tests.eo")
public final class EOω2add extends PhDefault {
    
  public EOω2add(final Phi sigma) {
    super(sigma);
    this.add("y", new AtFree(/* default */));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new EOω1pyint(rho);
        ret = new PhLocated(ret, 145, 6, "Φ.org.eolang.infinite-loop-check$pyint$add.φ");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOω3t1$EOgenerated_scope_0804578a_9e85_4619_82c6_d5c1fc28b57e(rho);
          ret_1 = new PhLocated(ret_1, 145, 18, "Φ.org.eolang.infinite-loop-check$pyint$add.φ.generated-scope-0804578a-9e85-4619-82c6-d5c1fc28b57e");
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
  }

// <o abstract="" ancestors="3" line="145" loc="Φ.org.eolang.infinite-loop-check$pyint$add$t1$generated-scope-0804578a-9e85-4619-82c6-d5c1fc28b57e" name="infinite-loop-check$pyint$add$t1$generated-scope-0804578a-9e85-4619-82c6-d5c1fc28b57e" original-name="generated-scope-0804578a-9e85-4619-82c6-d5c1fc28b57e" parent="infinite-loop-check$pyint$add" pos="18"> 
//   <o base=".plus" line="145" loc="Φ.org.eolang.infinite-loop-check$pyint$add$t1$generated-scope-0804578a-9e85-4619-82c6-d5c1fc28b57e.org.eolang.scope-0804578a-9e85-4619-82c6-d5c1fc28b57e" name="org.eolang.scope-0804578a-9e85-4619-82c6-d5c1fc28b57e" pos="18" scope="scope-0804578a-9e85-4619-82c6-d5c1fc28b57e"> 
//     <o base="value" line="145" loc="Φ.org.eolang.infinite-loop-check$pyint$add$t1$generated-scope-0804578a-9e85-4619-82c6-d5c1fc28b57e.org.eolang.scope-0804578a-9e85-4619-82c6-d5c1fc28b57e.ρ" pos="13" ref="145.143.465" scope="scope-0804578a-9e85-4619-82c6-d5c1fc28b57e"/>
//     <o base=".value" line="145" loc="Φ.org.eolang.infinite-loop-check$pyint$add$t1$generated-scope-0804578a-9e85-4619-82c6-d5c1fc28b57e.org.eolang.scope-0804578a-9e85-4619-82c6-d5c1fc28b57e.α0" pos="26" scope="scope-b872ef96-3ebc-4c87-bd6e-ae01c301a4d9-scope-0804578a-9e85-4619-82c6-d5c1fc28b57e"> 
//       <o base="y" line="145" loc="Φ.org.eolang.infinite-loop-check$pyint$add$t1$generated-scope-0804578a-9e85-4619-82c6-d5c1fc28b57e.org.eolang.scope-0804578a-9e85-4619-82c6-d5c1fc28b57e.α0.ρ" pos="25" ref="145.144.465" scope="scope-b872ef96-3ebc-4c87-bd6e-ae01c301a4d9-scope-0804578a-9e85-4619-82c6-d5c1fc28b57e"/>
//     </o>
//   </o>
//   <o base="org.eolang.scope-0804578a-9e85-4619-82c6-d5c1fc28b57e" line="145" loc="Φ.org.eolang.infinite-loop-check$pyint$add$t1$generated-scope-0804578a-9e85-4619-82c6-d5c1fc28b57e.φ" name="@" pos="18" ref="145"/>
//   <o level="1" line="145.144.465" loc="Φ.org.eolang.infinite-loop-check$pyint$add$t1$generated-scope-0804578a-9e85-4619-82c6-d5c1fc28b57e.y" name="y"/>
//   <o level="2" line="145.143.465" loc="Φ.org.eolang.infinite-loop-check$pyint$add$t1$generated-scope-0804578a-9e85-4619-82c6-d5c1fc28b57e.value" name="value"/>
// </o>
@XmirObject(name = "ω3t1$generated-scope-0804578a-9e85-4619-82c6-d5c1fc28b57e", oname = "generated-scope-0804578a-9e85-4619-82c6-d5c1fc28b57e", source = "/home/tardis3/eo/eo-runtime/src/test/eo/org/eolang/cage-tests.eo")
public final class EOω3t1$EOgenerated_scope_0804578a_9e85_4619_82c6_d5c1fc28b57e extends PhDefault {
    
  public EOω3t1$EOgenerated_scope_0804578a_9e85_4619_82c6_d5c1fc28b57e(final Phi sigma) {
    super(sigma);
    this.add("org.eolang.scope-0804578a-9e85-4619-82c6-d5c1fc28b57e", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = new PhMethod(new PhMethod(new PhMethod(rho, "σ"), "σ"), "value");
        ret_base = new PhLocated(ret_base, 145, 13, "Φ.org.eolang.infinite-loop-check$pyint$add$t1$generated-scope-0804578a-9e85-4619-82c6-d5c1fc28b57e.org.eolang.scope-0804578a-9e85-4619-82c6-d5c1fc28b57e.ρ");
      Phi ret = new PhMethod(ret_base, "plus");
        ret = new PhLocated(ret, 145, 18, "Φ.org.eolang.infinite-loop-check$pyint$add$t1$generated-scope-0804578a-9e85-4619-82c6-d5c1fc28b57e.org.eolang.scope-0804578a-9e85-4619-82c6-d5c1fc28b57e");
      ret = new PhCopy(ret);
        Phi ret_1_base = new PhMethod(new PhMethod(rho, "σ"), "y");
          ret_1_base = new PhLocated(ret_1_base, 145, 25, "Φ.org.eolang.infinite-loop-check$pyint$add$t1$generated-scope-0804578a-9e85-4619-82c6-d5c1fc28b57e.org.eolang.scope-0804578a-9e85-4619-82c6-d5c1fc28b57e.α0.ρ");
        Phi ret_1 = new PhMethod(ret_1_base, "value");
          ret_1 = new PhLocated(ret_1, 145, 26, "Φ.org.eolang.infinite-loop-check$pyint$add$t1$generated-scope-0804578a-9e85-4619-82c6-d5c1fc28b57e.org.eolang.scope-0804578a-9e85-4619-82c6-d5c1fc28b57e.α0");
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new PhMethod(rho, "org.eolang.scope-0804578a-9e85-4619-82c6-d5c1fc28b57e");
        ret = new PhLocated(ret, 145, 18, "Φ.org.eolang.infinite-loop-check$pyint$add$t1$generated-scope-0804578a-9e85-4619-82c6-d5c1fc28b57e.φ");
      return ret;
    })));
  }
}
}
}
}
