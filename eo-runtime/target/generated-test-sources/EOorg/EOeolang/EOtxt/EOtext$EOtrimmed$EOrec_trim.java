
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT b5a4c9a 2023-08-17T12:29:38) on 2023-08-18T14:42:30.920527Z; your changes will be discarded on the next build */
package EOorg.EOeolang.EOtxt;

import org.eolang.*;

// <o abstract="" ancestors="2" line="44" loc="Φ.org.eolang.txt.text$trimmed$rec-trim" name="text$trimmed$rec-trim" original-name="rec-trim" parent="text$trimmed" pos="4"> 
//   <o line="44" loc="Φ.org.eolang.txt.text$trimmed$rec-trim.str" name="str" pos="5"/>
//   <o base="str" const="" line="45" loc="Φ.org.eolang.txt.text$trimmed$rec-trim.const-str" name="const-str" pos="6" ref="44"/>
//   <o base=".eq" line="46" loc="Φ.org.eolang.txt.text$trimmed$rec-trim.empty" name="empty" pos="6"> 
//     <o base=".length" line="47" loc="Φ.org.eolang.txt.text$trimmed$rec-trim.empty.ρ" pos="8"> 
//       <o base="const-str" line="48" loc="Φ.org.eolang.txt.text$trimmed$rec-trim.empty.ρ.ρ" pos="10" ref="45"/>
//     </o>
//     <o base="org.eolang.int" data="int" line="49" loc="Φ.org.eolang.txt.text$trimmed$rec-trim.empty.α0" pos="8">0</o>
//   </o>
//   <o base=".eq" line="50" loc="Φ.org.eolang.txt.text$trimmed$rec-trim.starts-with-space" name="starts-with-space" pos="6"> 
//     <o base=".slice" line="51" loc="Φ.org.eolang.txt.text$trimmed$rec-trim.starts-with-space.ρ" pos="8"> 
//       <o base="const-str" line="52" loc="Φ.org.eolang.txt.text$trimmed$rec-trim.starts-with-space.ρ.ρ" pos="10" ref="45"/>
//       <o base="org.eolang.int" data="int" line="53" loc="Φ.org.eolang.txt.text$trimmed$rec-trim.starts-with-space.ρ.α0" pos="10">0</o>
//       <o base="org.eolang.int" data="int" line="54" loc="Φ.org.eolang.txt.text$trimmed$rec-trim.starts-with-space.ρ.α1" pos="10">1</o>
//     </o>
//     <o base="org.eolang.string" data="string" line="55" loc="Φ.org.eolang.txt.text$trimmed$rec-trim.starts-with-space.α0" pos="8"> </o>
//   </o>
//   <o base=".eq" line="56" loc="Φ.org.eolang.txt.text$trimmed$rec-trim.ends-with-space" name="ends-with-space" pos="6"> 
//     <o base=".slice" line="57" loc="Φ.org.eolang.txt.text$trimmed$rec-trim.ends-with-space.ρ" pos="8"> 
//       <o base="const-str" line="58" loc="Φ.org.eolang.txt.text$trimmed$rec-trim.ends-with-space.ρ.ρ" pos="10" ref="45"/>
//       <o base=".plus" line="59" loc="Φ.org.eolang.txt.text$trimmed$rec-trim.ends-with-space.ρ.α0" pos="10"> 
//         <o base=".length" line="60" loc="Φ.org.eolang.txt.text$trimmed$rec-trim.ends-with-space.ρ.α0.ρ" pos="12"> 
//           <o base="const-str" line="61" loc="Φ.org.eolang.txt.text$trimmed$rec-trim.ends-with-space.ρ.α0.ρ.ρ" pos="14" ref="45"/>
//         </o>
//         <o base="org.eolang.int" data="int" line="62" loc="Φ.org.eolang.txt.text$trimmed$rec-trim.ends-with-space.ρ.α0.α0" pos="12">-1</o>
//       </o>
//       <o base="org.eolang.int" data="int" line="63" loc="Φ.org.eolang.txt.text$trimmed$rec-trim.ends-with-space.ρ.α1" pos="10">1</o>
//     </o>
//     <o base="org.eolang.string" data="string" line="64" loc="Φ.org.eolang.txt.text$trimmed$rec-trim.ends-with-space.α0" pos="8"> </o>
//   </o>
//   <o base=".if" line="66" loc="Φ.org.eolang.txt.text$trimmed$rec-trim.φ" name="@" pos="6"> 
//     <o base="empty" line="67" loc="Φ.org.eolang.txt.text$trimmed$rec-trim.φ.ρ" pos="8" ref="46"/>
//     <o base="org.eolang.string" data="string" line="68" loc="Φ.org.eolang.txt.text$trimmed$rec-trim.φ.α0" pos="8"/>
//     <o base=".if" line="69" loc="Φ.org.eolang.txt.text$trimmed$rec-trim.φ.α1" pos="8"> 
//       <o base="starts-with-space" line="70" loc="Φ.org.eolang.txt.text$trimmed$rec-trim.φ.α1.ρ" pos="10" ref="50"/>
//       <o base="text$trimmed$rec-trim" line="71" loc="Φ.org.eolang.txt.text$trimmed$rec-trim.φ.α1.α0" pos="10" ref="44"> 
//         <o base="slice" line="72" loc="Φ.org.eolang.txt.text$trimmed$rec-trim.φ.α1.α0.α0" pos="12" ref="44.35.503"> 
//           <o base="org.eolang.int" data="int" line="73" loc="Φ.org.eolang.txt.text$trimmed$rec-trim.φ.α1.α0.α0.α0" pos="14">1</o>
//           <o base=".plus" line="74" loc="Φ.org.eolang.txt.text$trimmed$rec-trim.φ.α1.α0.α0.α1" pos="14"> 
//             <o base=".length" line="75" loc="Φ.org.eolang.txt.text$trimmed$rec-trim.φ.α1.α0.α0.α1.ρ" pos="16"> 
//               <o base="const-str" line="76" loc="Φ.org.eolang.txt.text$trimmed$rec-trim.φ.α1.α0.α0.α1.ρ.ρ" pos="18" ref="45"/>
//             </o>
//             <o base="org.eolang.int" data="int" line="77" loc="Φ.org.eolang.txt.text$trimmed$rec-trim.φ.α1.α0.α0.α1.α0" pos="16">-1</o>
//           </o>
//         </o>
//       </o>
//       <o base=".if" line="78" loc="Φ.org.eolang.txt.text$trimmed$rec-trim.φ.α1.α1" pos="10"> 
//         <o base="ends-with-space" line="79" loc="Φ.org.eolang.txt.text$trimmed$rec-trim.φ.α1.α1.ρ" pos="12" ref="56"/>
//         <o base="text$trimmed$rec-trim" line="80" loc="Φ.org.eolang.txt.text$trimmed$rec-trim.φ.α1.α1.α0" pos="12" ref="44"> 
//           <o base="slice" line="81" loc="Φ.org.eolang.txt.text$trimmed$rec-trim.φ.α1.α1.α0.α0" pos="14" ref="44.35.503"> 
//             <o base="org.eolang.int" data="int" line="82" loc="Φ.org.eolang.txt.text$trimmed$rec-trim.φ.α1.α1.α0.α0.α0" pos="16">0</o>
//             <o base=".plus" line="83" loc="Φ.org.eolang.txt.text$trimmed$rec-trim.φ.α1.α1.α0.α0.α1" pos="16"> 
//               <o base=".length" line="84" loc="Φ.org.eolang.txt.text$trimmed$rec-trim.φ.α1.α1.α0.α0.α1.ρ" pos="18"> 
//                 <o base="const-str" line="85" loc="Φ.org.eolang.txt.text$trimmed$rec-trim.φ.α1.α1.α0.α0.α1.ρ.ρ" pos="20" ref="45"/>
//               </o>
//               <o base="org.eolang.int" data="int" line="86" loc="Φ.org.eolang.txt.text$trimmed$rec-trim.φ.α1.α1.α0.α0.α1.α0" pos="18">-1</o>
//             </o>
//           </o>
//         </o>
//         <o base="const-str" line="87" loc="Φ.org.eolang.txt.text$trimmed$rec-trim.φ.α1.α1.α1" pos="12" ref="45"/>
//       </o>
//     </o>
//   </o>
//   <o level="2" line="44.32.503" loc="Φ.org.eolang.txt.text$trimmed$rec-trim.s" name="s"/>
//   <o level="2" line="44.35.503" loc="Φ.org.eolang.txt.text$trimmed$rec-trim.slice" name="slice"/>
// </o>
@XmirObject(name = "text$trimmed$rec-trim", oname = "rec-trim", source = "/home/tardis3/eo/eo-runtime/target/eo-test/3-pull/org/eolang/txt/text.eo")
public final class EOtext$EOtrimmed$EOrec_trim extends PhDefault {
  public EOtext$EOtrimmed$EOrec_trim(final Phi sigma) {
    super(sigma);
    this.add("str", new AtFree(/* default */));
    this.add("const-str", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new PhMethod(rho, "str");
        ret = new PhLocated(ret, 45, 6, "Φ.org.eolang.txt.text$trimmed$rec-trim.const-str");
      ret = new PhConst(ret);
      return ret;
    })));
    this.add("empty", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base_base = new PhMethod(rho, "const-str");
        ret_base_base = new PhLocated(ret_base_base, 48, 10, "Φ.org.eolang.txt.text$trimmed$rec-trim.empty.ρ.ρ");
      Phi ret_base = new PhMethod(ret_base_base, "length");
        ret_base = new PhLocated(ret_base, 47, 8, "Φ.org.eolang.txt.text$trimmed$rec-trim.empty.ρ");
      Phi ret = new PhMethod(ret_base, "eq");
        ret = new PhLocated(ret, 46, 6, "Φ.org.eolang.txt.text$trimmed$rec-trim.empty");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 49, 8, "Φ.org.eolang.txt.text$trimmed$rec-trim.empty.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>(0L));
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
    this.add("starts-with-space", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base_base = new PhMethod(rho, "const-str");
        ret_base_base = new PhLocated(ret_base_base, 52, 10, "Φ.org.eolang.txt.text$trimmed$rec-trim.starts-with-space.ρ.ρ");
      Phi ret_base = new PhMethod(ret_base_base, "slice");
        ret_base = new PhLocated(ret_base, 51, 8, "Φ.org.eolang.txt.text$trimmed$rec-trim.starts-with-space.ρ");
      ret_base = new PhCopy(ret_base);
        Phi ret_base_1 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_base_1 = new PhLocated(ret_base_1, 53, 10, "Φ.org.eolang.txt.text$trimmed$rec-trim.starts-with-space.ρ.α0");
          ret_base_1 = new PhWith(ret_base_1, "Δ", new Data.Value<>(0L));
        Phi ret_base_2 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_base_2 = new PhLocated(ret_base_2, 54, 10, "Φ.org.eolang.txt.text$trimmed$rec-trim.starts-with-space.ρ.α1");
          ret_base_2 = new PhWith(ret_base_2, "Δ", new Data.Value<>(1L));
        ret_base = new PhWith(ret_base, 0, ret_base_1);
        ret_base = new PhWith(ret_base, 1, ret_base_2);
      Phi ret = new PhMethod(ret_base, "eq");
        ret = new PhLocated(ret, 50, 6, "Φ.org.eolang.txt.text$trimmed$rec-trim.starts-with-space");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOstring(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 55, 8, "Φ.org.eolang.txt.text$trimmed$rec-trim.starts-with-space.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>(" "));
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
    this.add("ends-with-space", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base_base = new PhMethod(rho, "const-str");
        ret_base_base = new PhLocated(ret_base_base, 58, 10, "Φ.org.eolang.txt.text$trimmed$rec-trim.ends-with-space.ρ.ρ");
      Phi ret_base = new PhMethod(ret_base_base, "slice");
        ret_base = new PhLocated(ret_base, 57, 8, "Φ.org.eolang.txt.text$trimmed$rec-trim.ends-with-space.ρ");
      ret_base = new PhCopy(ret_base);
        Phi ret_base_1_base_base = new PhMethod(rho, "const-str");
          ret_base_1_base_base = new PhLocated(ret_base_1_base_base, 61, 14, "Φ.org.eolang.txt.text$trimmed$rec-trim.ends-with-space.ρ.α0.ρ.ρ");
        Phi ret_base_1_base = new PhMethod(ret_base_1_base_base, "length");
          ret_base_1_base = new PhLocated(ret_base_1_base, 60, 12, "Φ.org.eolang.txt.text$trimmed$rec-trim.ends-with-space.ρ.α0.ρ");
        Phi ret_base_1 = new PhMethod(ret_base_1_base, "plus");
          ret_base_1 = new PhLocated(ret_base_1, 59, 10, "Φ.org.eolang.txt.text$trimmed$rec-trim.ends-with-space.ρ.α0");
        ret_base_1 = new PhCopy(ret_base_1);
          Phi ret_base_1_1 = new EOorg.EOeolang.EOint(Phi.Φ);
            ret_base_1_1 = new PhLocated(ret_base_1_1, 62, 12, "Φ.org.eolang.txt.text$trimmed$rec-trim.ends-with-space.ρ.α0.α0");
            ret_base_1_1 = new PhWith(ret_base_1_1, "Δ", new Data.Value<>(-1L));
          ret_base_1 = new PhWith(ret_base_1, 0, ret_base_1_1);
        Phi ret_base_2 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_base_2 = new PhLocated(ret_base_2, 63, 10, "Φ.org.eolang.txt.text$trimmed$rec-trim.ends-with-space.ρ.α1");
          ret_base_2 = new PhWith(ret_base_2, "Δ", new Data.Value<>(1L));
        ret_base = new PhWith(ret_base, 0, ret_base_1);
        ret_base = new PhWith(ret_base, 1, ret_base_2);
      Phi ret = new PhMethod(ret_base, "eq");
        ret = new PhLocated(ret, 56, 6, "Φ.org.eolang.txt.text$trimmed$rec-trim.ends-with-space");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOstring(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 64, 8, "Φ.org.eolang.txt.text$trimmed$rec-trim.ends-with-space.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>(" "));
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = new PhMethod(rho, "empty");
        ret_base = new PhLocated(ret_base, 67, 8, "Φ.org.eolang.txt.text$trimmed$rec-trim.φ.ρ");
      Phi ret = new PhMethod(ret_base, "if");
        ret = new PhLocated(ret, 66, 6, "Φ.org.eolang.txt.text$trimmed$rec-trim.φ");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOstring(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 68, 8, "Φ.org.eolang.txt.text$trimmed$rec-trim.φ.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>(""));
        Phi ret_2_base = new PhMethod(rho, "starts-with-space");
          ret_2_base = new PhLocated(ret_2_base, 70, 10, "Φ.org.eolang.txt.text$trimmed$rec-trim.φ.α1.ρ");
        Phi ret_2 = new PhMethod(ret_2_base, "if");
          ret_2 = new PhLocated(ret_2, 69, 8, "Φ.org.eolang.txt.text$trimmed$rec-trim.φ.α1");
        ret_2 = new PhCopy(ret_2);
          Phi ret_2_1 = new EOtext$EOtrimmed$EOrec_trim(rho);
            ret_2_1 = new PhLocated(ret_2_1, 71, 10, "Φ.org.eolang.txt.text$trimmed$rec-trim.φ.α1.α0");
          ret_2_1 = new PhCopy(ret_2_1);
            Phi ret_2_1_1 = new PhMethod(new PhMethod(new PhMethod(rho, "σ"), "σ"), "slice");
              ret_2_1_1 = new PhLocated(ret_2_1_1, 72, 12, "Φ.org.eolang.txt.text$trimmed$rec-trim.φ.α1.α0.α0");
            ret_2_1_1 = new PhCopy(ret_2_1_1);
              Phi ret_2_1_1_1 = new EOorg.EOeolang.EOint(Phi.Φ);
                ret_2_1_1_1 = new PhLocated(ret_2_1_1_1, 73, 14, "Φ.org.eolang.txt.text$trimmed$rec-trim.φ.α1.α0.α0.α0");
                ret_2_1_1_1 = new PhWith(ret_2_1_1_1, "Δ", new Data.Value<>(1L));
              Phi ret_2_1_1_2_base_base = new PhMethod(rho, "const-str");
                ret_2_1_1_2_base_base = new PhLocated(ret_2_1_1_2_base_base, 76, 18, "Φ.org.eolang.txt.text$trimmed$rec-trim.φ.α1.α0.α0.α1.ρ.ρ");
              Phi ret_2_1_1_2_base = new PhMethod(ret_2_1_1_2_base_base, "length");
                ret_2_1_1_2_base = new PhLocated(ret_2_1_1_2_base, 75, 16, "Φ.org.eolang.txt.text$trimmed$rec-trim.φ.α1.α0.α0.α1.ρ");
              Phi ret_2_1_1_2 = new PhMethod(ret_2_1_1_2_base, "plus");
                ret_2_1_1_2 = new PhLocated(ret_2_1_1_2, 74, 14, "Φ.org.eolang.txt.text$trimmed$rec-trim.φ.α1.α0.α0.α1");
              ret_2_1_1_2 = new PhCopy(ret_2_1_1_2);
                Phi ret_2_1_1_2_1 = new EOorg.EOeolang.EOint(Phi.Φ);
                  ret_2_1_1_2_1 = new PhLocated(ret_2_1_1_2_1, 77, 16, "Φ.org.eolang.txt.text$trimmed$rec-trim.φ.α1.α0.α0.α1.α0");
                  ret_2_1_1_2_1 = new PhWith(ret_2_1_1_2_1, "Δ", new Data.Value<>(-1L));
                ret_2_1_1_2 = new PhWith(ret_2_1_1_2, 0, ret_2_1_1_2_1);
              ret_2_1_1 = new PhWith(ret_2_1_1, 0, ret_2_1_1_1);
              ret_2_1_1 = new PhWith(ret_2_1_1, 1, ret_2_1_1_2);
            ret_2_1 = new PhWith(ret_2_1, 0, ret_2_1_1);
          Phi ret_2_2_base = new PhMethod(rho, "ends-with-space");
            ret_2_2_base = new PhLocated(ret_2_2_base, 79, 12, "Φ.org.eolang.txt.text$trimmed$rec-trim.φ.α1.α1.ρ");
          Phi ret_2_2 = new PhMethod(ret_2_2_base, "if");
            ret_2_2 = new PhLocated(ret_2_2, 78, 10, "Φ.org.eolang.txt.text$trimmed$rec-trim.φ.α1.α1");
          ret_2_2 = new PhCopy(ret_2_2);
            Phi ret_2_2_1 = new EOtext$EOtrimmed$EOrec_trim(rho);
              ret_2_2_1 = new PhLocated(ret_2_2_1, 80, 12, "Φ.org.eolang.txt.text$trimmed$rec-trim.φ.α1.α1.α0");
            ret_2_2_1 = new PhCopy(ret_2_2_1);
              Phi ret_2_2_1_1 = new PhMethod(new PhMethod(new PhMethod(rho, "σ"), "σ"), "slice");
                ret_2_2_1_1 = new PhLocated(ret_2_2_1_1, 81, 14, "Φ.org.eolang.txt.text$trimmed$rec-trim.φ.α1.α1.α0.α0");
              ret_2_2_1_1 = new PhCopy(ret_2_2_1_1);
                Phi ret_2_2_1_1_1 = new EOorg.EOeolang.EOint(Phi.Φ);
                  ret_2_2_1_1_1 = new PhLocated(ret_2_2_1_1_1, 82, 16, "Φ.org.eolang.txt.text$trimmed$rec-trim.φ.α1.α1.α0.α0.α0");
                  ret_2_2_1_1_1 = new PhWith(ret_2_2_1_1_1, "Δ", new Data.Value<>(0L));
                Phi ret_2_2_1_1_2_base_base = new PhMethod(rho, "const-str");
                  ret_2_2_1_1_2_base_base = new PhLocated(ret_2_2_1_1_2_base_base, 85, 20, "Φ.org.eolang.txt.text$trimmed$rec-trim.φ.α1.α1.α0.α0.α1.ρ.ρ");
                Phi ret_2_2_1_1_2_base = new PhMethod(ret_2_2_1_1_2_base_base, "length");
                  ret_2_2_1_1_2_base = new PhLocated(ret_2_2_1_1_2_base, 84, 18, "Φ.org.eolang.txt.text$trimmed$rec-trim.φ.α1.α1.α0.α0.α1.ρ");
                Phi ret_2_2_1_1_2 = new PhMethod(ret_2_2_1_1_2_base, "plus");
                  ret_2_2_1_1_2 = new PhLocated(ret_2_2_1_1_2, 83, 16, "Φ.org.eolang.txt.text$trimmed$rec-trim.φ.α1.α1.α0.α0.α1");
                ret_2_2_1_1_2 = new PhCopy(ret_2_2_1_1_2);
                  Phi ret_2_2_1_1_2_1 = new EOorg.EOeolang.EOint(Phi.Φ);
                    ret_2_2_1_1_2_1 = new PhLocated(ret_2_2_1_1_2_1, 86, 18, "Φ.org.eolang.txt.text$trimmed$rec-trim.φ.α1.α1.α0.α0.α1.α0");
                    ret_2_2_1_1_2_1 = new PhWith(ret_2_2_1_1_2_1, "Δ", new Data.Value<>(-1L));
                  ret_2_2_1_1_2 = new PhWith(ret_2_2_1_1_2, 0, ret_2_2_1_1_2_1);
                ret_2_2_1_1 = new PhWith(ret_2_2_1_1, 0, ret_2_2_1_1_1);
                ret_2_2_1_1 = new PhWith(ret_2_2_1_1, 1, ret_2_2_1_1_2);
              ret_2_2_1 = new PhWith(ret_2_2_1, 0, ret_2_2_1_1);
            Phi ret_2_2_2 = new PhMethod(rho, "const-str");
              ret_2_2_2 = new PhLocated(ret_2_2_2, 87, 12, "Φ.org.eolang.txt.text$trimmed$rec-trim.φ.α1.α1.α1");
            ret_2_2 = new PhWith(ret_2_2, 0, ret_2_2_1);
            ret_2_2 = new PhWith(ret_2_2, 1, ret_2_2_2);
          ret_2 = new PhWith(ret_2, 0, ret_2_1);
          ret_2 = new PhWith(ret_2, 1, ret_2_2);
        ret = new PhWith(ret, 0, ret_1);
        ret = new PhWith(ret, 1, ret_2);
      return ret;
    })));
  }
}
