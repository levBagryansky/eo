
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT b5a4c9a 2023-08-17T12:29:38) on 2023-08-18T14:42:30.920527Z; your changes will be discarded on the next build */
package EOorg.EOeolang.EOtxt;

import org.eolang.*;

// <o abstract="" ancestors="1" line="150" loc="Φ.org.eolang.txt.text$index-of" name="text$index-of" original-name="index-of" parent="text" pos="2"> 
//   <o line="152" loc="Φ.org.eolang.txt.text$index-of.substr" name="substr" pos="3"/>
//   <o base="org.eolang.collections.bytes-as-array" const="" line="153" loc="Φ.org.eolang.txt.text$index-of.bytes-view" name="bytes-view" pos="4"> 
//     <o base=".as-bytes" line="154" loc="Φ.org.eolang.txt.text$index-of.bytes-view.α0" pos="6"> 
//       <o base="s" line="155" loc="Φ.org.eolang.txt.text$index-of.bytes-view.α0.ρ" pos="8" ref="150.32.496"/>
//     </o>
//   </o>
//   <o base=".reducedi" line="156" loc="Φ.org.eolang.txt.text$index-of.φ" name="@" pos="4"> 
//     <o base="org.eolang.collections.list" line="157" loc="Φ.org.eolang.txt.text$index-of.φ.ρ" pos="6"> 
//       <o base="bytes-view" line="158" loc="Φ.org.eolang.txt.text$index-of.φ.ρ.α0" pos="8" ref="153"/>
//     </o>
//     <o base="org.eolang.int" data="int" line="159" loc="Φ.org.eolang.txt.text$index-of.φ.α0" pos="6">-1</o>
//     <o base="text$index-of$t2$a2" cut="172" line="160" loc="Φ.org.eolang.txt.text$index-of.φ.α1" pos="6" ref="160"> 
//       <o as="substr" base="substr" level="1" loc="Φ.org.eolang.txt.text$index-of.φ.α1.α0" ref="152"/>
//       <o as="check-if-starts-from-index" base="check-if-starts-from-index" level="1" loc="Φ.org.eolang.txt.text$index-of.φ.α1.α1" ref="175"/>
//       <o as="s" base="s" level="2" loc="Φ.org.eolang.txt.text$index-of.φ.α1.α2" ref="150.32.496"/>
//     </o>
//   </o>
//   <o base="text$index-of$check-if-starts-from-index" cut="190" line="175" loc="Φ.org.eolang.txt.text$index-of.check-if-starts-from-index" name="check-if-starts-from-index" pos="4" ref="175"> 
//     <o as="substr" base="substr" level="1" loc="Φ.org.eolang.txt.text$index-of.check-if-starts-from-index.α0" ref="152"/>
//     <o as="s" base="s" level="2" loc="Φ.org.eolang.txt.text$index-of.check-if-starts-from-index.α1" ref="150.32.496"/>
//   </o>
//   <o level="1" line="150.32.496" loc="Φ.org.eolang.txt.text$index-of.s" name="s"/>
// </o>
@XmirObject(name = "text$index-of", oname = "index-of", source = "/home/tardis3/eo/eo-runtime/target/eo-test/3-pull/org/eolang/txt/text.eo")
public final class EOtext$EOindex_of extends PhDefault {
  public EOtext$EOindex_of(final Phi sigma) {
    super(sigma);
    this.add("substr", new AtFree(/* default */));
    this.add("bytes-view", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("collections").get().attr("bytes-as-array").get();
        ret = new PhLocated(ret, 153, 4, "Φ.org.eolang.txt.text$index-of.bytes-view");
      ret = new PhCopy(ret);
        Phi ret_1_base = new PhMethod(new PhMethod(rho, "σ"), "s");
          ret_1_base = new PhLocated(ret_1_base, 155, 8, "Φ.org.eolang.txt.text$index-of.bytes-view.α0.ρ");
        Phi ret_1 = new PhMethod(ret_1_base, "as-bytes");
          ret_1 = new PhLocated(ret_1, 154, 6, "Φ.org.eolang.txt.text$index-of.bytes-view.α0");
        ret = new PhWith(ret, 0, ret_1);
      ret = new PhConst(ret);
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = Phi.Φ.attr("org").get().attr("eolang").get().attr("collections").get().attr("list").get();
        ret_base = new PhLocated(ret_base, 157, 6, "Φ.org.eolang.txt.text$index-of.φ.ρ");
      ret_base = new PhCopy(ret_base);
        Phi ret_base_1 = new PhMethod(rho, "bytes-view");
          ret_base_1 = new PhLocated(ret_base_1, 158, 8, "Φ.org.eolang.txt.text$index-of.φ.ρ.α0");
        ret_base = new PhWith(ret_base, 0, ret_base_1);
      Phi ret = new PhMethod(ret_base, "reducedi");
        ret = new PhLocated(ret, 156, 4, "Φ.org.eolang.txt.text$index-of.φ");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EOint(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 159, 6, "Φ.org.eolang.txt.text$index-of.φ.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>(-1L));
        Phi ret_2 = new EOtext$EOindex_of$EOt2$EOa2(rho);
          ret_2 = new PhLocated(ret_2, 160, 6, "Φ.org.eolang.txt.text$index-of.φ.α1");
        ret = new PhWith(ret, 0, ret_1);
        ret = new PhWith(ret, 1, ret_2);
      return ret;
    })));
    this.add("check-if-starts-from-index", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new EOtext$EOindex_of$EOcheck_if_starts_from_index(rho);
        ret = new PhLocated(ret, 175, 4, "Φ.org.eolang.txt.text$index-of.check-if-starts-from-index");
      return ret;
    })));
  }
}
