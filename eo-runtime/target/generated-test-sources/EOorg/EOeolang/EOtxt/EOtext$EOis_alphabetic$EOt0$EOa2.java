
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT b5a4c9a 2023-08-17T12:29:38) on 2023-08-18T14:42:30.920527Z; your changes will be discarded on the next build */
package EOorg.EOeolang.EOtxt;

import org.eolang.*;

// <o abstract="" ancestors="2" line="386" loc="Φ.org.eolang.txt.text$is-alphabetic$t0$a2" name="text$is-alphabetic$t0$a2" parent="text$is-alphabetic" pos="6"> 
//   <o line="386" loc="Φ.org.eolang.txt.text$is-alphabetic$t0$a2.a" name="a" pos="7"/>
//   <o line="386" loc="Φ.org.eolang.txt.text$is-alphabetic$t0$a2.x" name="x" pos="9"/>
//   <o base=".as-int" const="" line="387" loc="Φ.org.eolang.txt.text$is-alphabetic$t0$a2.value" name="value" pos="8"> 
//     <o base="bytes-1-to-8" line="388" loc="Φ.org.eolang.txt.text$is-alphabetic$t0$a2.value.ρ" pos="10" ref="386.405.502"> 
//       <o base=".as-bytes" line="389" loc="Φ.org.eolang.txt.text$is-alphabetic$t0$a2.value.ρ.α0" pos="12"> 
//         <o base="x" line="390" loc="Φ.org.eolang.txt.text$is-alphabetic$t0$a2.value.ρ.α0.ρ" pos="14" ref="386"/>
//       </o>
//     </o>
//   </o>
//   <o base=".and" line="391" loc="Φ.org.eolang.txt.text$is-alphabetic$t0$a2.φ" name="@" pos="8"> 
//     <o base="a" line="392" loc="Φ.org.eolang.txt.text$is-alphabetic$t0$a2.φ.ρ" pos="10" ref="386"/>
//     <o base="int-is-alpha" line="393" loc="Φ.org.eolang.txt.text$is-alphabetic$t0$a2.φ.α0" pos="10" ref="386.396.502"> 
//       <o base="value" line="394" loc="Φ.org.eolang.txt.text$is-alphabetic$t0$a2.φ.α0.α0" pos="12" ref="387"/>
//     </o>
//   </o>
//   <o level="1" line="386.396.502" loc="Φ.org.eolang.txt.text$is-alphabetic$t0$a2.int-is-alpha" name="int-is-alpha"/>
//   <o level="1" line="386.405.502" loc="Φ.org.eolang.txt.text$is-alphabetic$t0$a2.bytes-1-to-8" name="bytes-1-to-8"/>
//   <o level="2" line="386.32.502" loc="Φ.org.eolang.txt.text$is-alphabetic$t0$a2.s" name="s"/>
// </o>
@XmirObject(name = "text$is-alphabetic$t0$a2", oname = "text$is-alphabetic$t0$a2", source = "/home/tardis3/eo/eo-runtime/target/eo-test/3-pull/org/eolang/txt/text.eo")
public final class EOtext$EOis_alphabetic$EOt0$EOa2 extends PhDefault {
  public EOtext$EOis_alphabetic$EOt0$EOa2(final Phi sigma) {
    super(sigma);
    this.add("a", new AtFree(/* default */));
    this.add("x", new AtFree(/* default */));
    this.add("value", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = new PhMethod(new PhMethod(rho, "σ"), "bytes-1-to-8");
        ret_base = new PhLocated(ret_base, 388, 10, "Φ.org.eolang.txt.text$is-alphabetic$t0$a2.value.ρ");
      ret_base = new PhCopy(ret_base);
        Phi ret_base_1_base = new PhMethod(rho, "x");
          ret_base_1_base = new PhLocated(ret_base_1_base, 390, 14, "Φ.org.eolang.txt.text$is-alphabetic$t0$a2.value.ρ.α0.ρ");
        Phi ret_base_1 = new PhMethod(ret_base_1_base, "as-bytes");
          ret_base_1 = new PhLocated(ret_base_1, 389, 12, "Φ.org.eolang.txt.text$is-alphabetic$t0$a2.value.ρ.α0");
        ret_base = new PhWith(ret_base, 0, ret_base_1);
      Phi ret = new PhMethod(ret_base, "as-int");
        ret = new PhLocated(ret, 387, 8, "Φ.org.eolang.txt.text$is-alphabetic$t0$a2.value");
      ret = new PhConst(ret);
      return ret;
    })));
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = new PhMethod(rho, "a");
        ret_base = new PhLocated(ret_base, 392, 10, "Φ.org.eolang.txt.text$is-alphabetic$t0$a2.φ.ρ");
      Phi ret = new PhMethod(ret_base, "and");
        ret = new PhLocated(ret, 391, 8, "Φ.org.eolang.txt.text$is-alphabetic$t0$a2.φ");
      ret = new PhCopy(ret);
        Phi ret_1 = new PhMethod(new PhMethod(rho, "σ"), "int-is-alpha");
          ret_1 = new PhLocated(ret_1, 393, 10, "Φ.org.eolang.txt.text$is-alphabetic$t0$a2.φ.α0");
        ret_1 = new PhCopy(ret_1);
          Phi ret_1_1 = new PhMethod(rho, "value");
            ret_1_1 = new PhLocated(ret_1_1, 394, 12, "Φ.org.eolang.txt.text$is-alphabetic$t0$a2.φ.α0.α0");
          ret_1 = new PhWith(ret_1, 0, ret_1_1);
        ret = new PhWith(ret, 0, ret_1);
      return ret;
    })));
  }
}
