
/* This file was auto-generated by eo-maven-plugin (1.0-SNAPSHOT b5a4c9a 2023-08-17T12:29:38) on 2023-08-18T14:42:30.920527Z; your changes will be discarded on the next build */
package EOorg.EOeolang.EOtxt;

import org.eolang.*;

// <o abstract="" ancestors="1" line="375" loc="Φ.org.eolang.txt.text$is-alphabetic" name="text$is-alphabetic" original-name="is-alphabetic" parent="text" pos="2"> 
//   <o base=".reduced" line="378" loc="Φ.org.eolang.txt.text$is-alphabetic.φ" name="@" pos="4"> 
//     <o base="org.eolang.collections.list" line="379" loc="Φ.org.eolang.txt.text$is-alphabetic.φ.ρ" pos="6"> 
//       <o base="org.eolang.collections.bytes-as-array" line="380" loc="Φ.org.eolang.txt.text$is-alphabetic.φ.ρ.α0" pos="8"> 
//         <o base=".as-bytes" line="381" loc="Φ.org.eolang.txt.text$is-alphabetic.φ.ρ.α0.α0" pos="10"> 
//           <o base=".low-cased" line="382" loc="Φ.org.eolang.txt.text$is-alphabetic.φ.ρ.α0.α0.ρ" pos="12"> 
//             <o base="text" line="383" loc="Φ.org.eolang.txt.text$is-alphabetic.φ.ρ.α0.α0.ρ.ρ" pos="14" ref="32"> 
//               <o base="s" line="384" loc="Φ.org.eolang.txt.text$is-alphabetic.φ.ρ.α0.α0.ρ.ρ.α0" pos="16" ref="375.32.501"/>
//             </o>
//           </o>
//         </o>
//       </o>
//     </o>
//     <o base="org.eolang.bool" data="bool" line="385" loc="Φ.org.eolang.txt.text$is-alphabetic.φ.α0" pos="6">TRUE</o>
//     <o base="text$is-alphabetic$t0$a2" cut="413" line="386" loc="Φ.org.eolang.txt.text$is-alphabetic.φ.α1" pos="6" ref="386"> 
//       <o as="int-is-alpha" base="int-is-alpha" level="1" loc="Φ.org.eolang.txt.text$is-alphabetic.φ.α1.α0" ref="396"/>
//       <o as="bytes-1-to-8" base="bytes-1-to-8" level="1" loc="Φ.org.eolang.txt.text$is-alphabetic.φ.α1.α1" ref="405"/>
//       <o as="s" base="s" level="2" loc="Φ.org.eolang.txt.text$is-alphabetic.φ.α1.α2" ref="375.32.501"/>
//     </o>
//   </o>
//   <o base="text$is-alphabetic$int-is-alpha" cut="425" line="396" loc="Φ.org.eolang.txt.text$is-alphabetic.int-is-alpha" name="int-is-alpha" pos="4" ref="396"> 
//     <o as="s" base="s" level="2" loc="Φ.org.eolang.txt.text$is-alphabetic.int-is-alpha.α0" ref="375.32.501"/>
//   </o>
//   <o base="text$is-alphabetic$bytes-1-to-8" cut="434" line="405" loc="Φ.org.eolang.txt.text$is-alphabetic.bytes-1-to-8" name="bytes-1-to-8" pos="4" ref="405"> 
//     <o as="s" base="s" level="2" loc="Φ.org.eolang.txt.text$is-alphabetic.bytes-1-to-8.α0" ref="375.32.501"/>
//   </o>
//   <o level="1" line="375.32.501" loc="Φ.org.eolang.txt.text$is-alphabetic.s" name="s"/>
// </o>
@XmirObject(name = "text$is-alphabetic", oname = "is-alphabetic", source = "/home/tardis3/eo/eo-runtime/target/eo-test/3-pull/org/eolang/txt/text.eo")
public final class EOtext$EOis_alphabetic extends PhDefault {
  public EOtext$EOis_alphabetic(final Phi sigma) {
    super(sigma);
    this.add("φ", new AtOnce(new AtComposite(this, rho -> {
      Phi ret_base = Phi.Φ.attr("org").get().attr("eolang").get().attr("collections").get().attr("list").get();
        ret_base = new PhLocated(ret_base, 379, 6, "Φ.org.eolang.txt.text$is-alphabetic.φ.ρ");
      ret_base = new PhCopy(ret_base);
        Phi ret_base_1 = Phi.Φ.attr("org").get().attr("eolang").get().attr("collections").get().attr("bytes-as-array").get();
          ret_base_1 = new PhLocated(ret_base_1, 380, 8, "Φ.org.eolang.txt.text$is-alphabetic.φ.ρ.α0");
        ret_base_1 = new PhCopy(ret_base_1);
          Phi ret_base_1_1_base_base = Phi.Φ.attr("org").get().attr("eolang").get().attr("txt").get().attr("text").get();
            ret_base_1_1_base_base = new PhLocated(ret_base_1_1_base_base, 383, 14, "Φ.org.eolang.txt.text$is-alphabetic.φ.ρ.α0.α0.ρ.ρ");
          ret_base_1_1_base_base = new PhCopy(ret_base_1_1_base_base);
            Phi ret_base_1_1_base_base_1 = new PhMethod(new PhMethod(rho, "σ"), "s");
              ret_base_1_1_base_base_1 = new PhLocated(ret_base_1_1_base_base_1, 384, 16, "Φ.org.eolang.txt.text$is-alphabetic.φ.ρ.α0.α0.ρ.ρ.α0");
            ret_base_1_1_base_base = new PhWith(ret_base_1_1_base_base, 0, ret_base_1_1_base_base_1);
          Phi ret_base_1_1_base = new PhMethod(ret_base_1_1_base_base, "low-cased");
            ret_base_1_1_base = new PhLocated(ret_base_1_1_base, 382, 12, "Φ.org.eolang.txt.text$is-alphabetic.φ.ρ.α0.α0.ρ");
          Phi ret_base_1_1 = new PhMethod(ret_base_1_1_base, "as-bytes");
            ret_base_1_1 = new PhLocated(ret_base_1_1, 381, 10, "Φ.org.eolang.txt.text$is-alphabetic.φ.ρ.α0.α0");
          ret_base_1 = new PhWith(ret_base_1, 0, ret_base_1_1);
        ret_base = new PhWith(ret_base, 0, ret_base_1);
      Phi ret = new PhMethod(ret_base, "reduced");
        ret = new PhLocated(ret, 378, 4, "Φ.org.eolang.txt.text$is-alphabetic.φ");
      ret = new PhCopy(ret);
        Phi ret_1 = new EOorg.EOeolang.EObool(Phi.Φ);
          ret_1 = new PhLocated(ret_1, 385, 6, "Φ.org.eolang.txt.text$is-alphabetic.φ.α0");
          ret_1 = new PhWith(ret_1, "Δ", new Data.Value<>(Boolean.TRUE));
        Phi ret_2 = new EOtext$EOis_alphabetic$EOt0$EOa2(rho);
          ret_2 = new PhLocated(ret_2, 386, 6, "Φ.org.eolang.txt.text$is-alphabetic.φ.α1");
        ret = new PhWith(ret, 0, ret_1);
        ret = new PhWith(ret, 1, ret_2);
      return ret;
    })));
    this.add("int-is-alpha", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new EOtext$EOis_alphabetic$EOint_is_alpha(rho);
        ret = new PhLocated(ret, 396, 4, "Φ.org.eolang.txt.text$is-alphabetic.int-is-alpha");
      return ret;
    })));
    this.add("bytes-1-to-8", new AtOnce(new AtComposite(this, rho -> {
      Phi ret = new EOtext$EOis_alphabetic$EObytes_1_to_8(rho);
        ret = new PhLocated(ret, 405, 4, "Φ.org.eolang.txt.text$is-alphabetic.bytes-1-to-8");
      return ret;
    })));
  }
}
